{"version":3,"file":"ScopeDescriptionForm-DhgWOMRx.js","sources":["../../../resources/js/components/expert_panels/AttestationGcep.vue","../../../resources/js/components/expert_panels/AttestationNhgri.vue","../../../resources/js/components/expert_panels/AttestationReanalysis.vue","../../../resources/js/components/expert_panels/GcepGeneList.vue","../../../resources/js/components/groups/GroupDescriptionForm.vue","../../../resources/js/components/expert_panels/MembershipDescriptionForm.vue","../../../resources/js/components/expert_panels/ScopeDescriptionForm.vue"],"sourcesContent":["<script>\nimport {api, isValidationError} from '@/http'\n\nexport default {\n    name: 'AttestationGcep',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            gci_training: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        },\n        gciTrainingErrors () {\n            const trainingErrors = this.errors.gci_training || [];\n            const dateErrors = this.errors.gci_training_date || [];\n            return [...trainingErrors, ...dateErrors];\n        },\n        gci_training_comp () {\n            return Boolean(this.group.expert_panel.gci_training_date)\n        }\n    },\n    watch: {\n        group: {\n            immediate: true,\n            handler (to) {\n                this.gci_training = Boolean(to.expert_panel.gci_training_date)\n            }\n        },\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/gcep`,\n                this.group.expert_panel.attributes)\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        emitUpdate () {\n            this.$emit('update');\n        },\n        checkCompleteness () {\n            if (this.group.expert_panel.utilize_gt\n                && this.group.expert_panel.utilize_gci\n                && this.group.expert_panel.curations_publicly_available\n                && this.group.expert_panel.pub_policy_reviewed\n                && this.group.expert_panel.draft_manuscripts\n                && this.group.expert_panel.recuration_process_review\n                && this.group.expert_panel.biocurator_training\n                && this.group.expert_panel.gci_training_date !== null\n                && this.group.expert_panel.biocurator_mailing_list\n                && this.group.expert_panel.gcep_attestation_date === null\n            ) {\n                this.group.expert_panel.gcep_attestation_date = new Date();\n                return;\n            }\n            this.group.expert_panel.gcep_attestation_date = null;\n        }\n    },\n}\n</script>\n<template>\n  <div>\n    <p>\n      The Gene Curation Expert Panel (GCEP) leaders(s) will complete the checkbox attestations document below on behalf of the GCEP.\n    </p>\n    <ul class=\"ml-4 mt-2\">\n      <li>\n        <input-row :errors=\"errors.utilize_gt\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.utilize_gt\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            This GCEP will utilize the ClinGen Gene Tracker for documentation of all precuration information, consistent with the current Lumping and Splitting working group guidance, for gene-disease relationships.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.utilize_gci\" :hide-label=\"true\">\n          <checkbox\n            v-model=\"group.expert_panel.utilize_gci\"\n            :disabled=\"disabled\"\n            @update:model-value=\"emitUpdate(), checkCompleteness()\"\n          >\n            This GCEP will utilize the ClinGen Gene Curation Interface for documentation of all gene-disease validity classifications.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.curations_publicly_available\" :hide-label=\"true\">\n          <checkbox\n            v-model=\"group.expert_panel.curations_publicly_available\"\n            :disabled=\"disabled\"\n            @update:model-value=\"emitUpdate(), checkCompleteness()\"\n          >\n            All curations completed by this group will be made publicly available through the ClinGen website immediately upon completion.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.pub_policy_reviewed\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.pub_policy_reviewed\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            The <publication-policy-link /> has been reviewed and a manuscript concept sheet will be submitted to the NHGRI and  ClinGen Steering Committee before the group prepares a publication for submission.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.draft_manuscripts\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.draft_manuscripts\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            Draft manuscripts will be submitted to the ClinGen Gene Curation WG for review prior to submission.\n            Email: <a href=\"mailto:genecuration@clinicalgenome.org\">genecuration@clinicalgenome.org</a>\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.recuration_process_review\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.recuration_process_review\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            The ClinGen <gcep-recuration-process-link>Gene-Disease Validity Recuration Process</gcep-recuration-process-link> has been reviewed.\n          </checkbox>\n        </input-row>\n      </li>\n    </ul>\n\n    <p>\n      Biocurators are expected to become familiar with the ClinGen <training-materials-link /> located on <training-materials-link>ClinicalGenome.org</training-materials-link>. Biocurators are requested to join the mailing list for ClinGen Biocurator Working Group, and expected to attend those calls that focus on gene curation SOP and/or framework updates.\n    </p>\n\n    <ul class=\"ml-4 mt-2\">\n      <li>\n        <input-row :errors=\"errors.biocurator_training\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.biocurator_training\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            Biocurators have received training and/or there is a plan in place to train any biocurators who have not received all training yet.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <checkbox v-model=\"gci_training\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n          Biocurators are trained on the use of the Gene Curation Interface (GCI) and/or there is a plan in place to train any biocurators who are not yet trained on the use of the GCI‚Äù\n        </checkbox>\n        <input-row\n          v-show=\"gci_training\"\n          v-model=\"group.expert_panel.gci_training_date\"\n          :errors=\"gciTrainingErrors\"\n          label=\"Date Trained\"\n          type=\"date\"\n          class=\"ml-6\"\n          @update:model-value=\"emitUpdate(), checkCompleteness()\"\n        />\n      </li>\n      <li>\n        <input-row :errors=\"errors.biocurator_mailing_list\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.biocurator_mailing_list\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            Biocurators have joined the Biocurator WG mailing list and/or there is a plan in place to have them join mailing list.\n            <br>The calls occur on the 2nd and 4th Thursdays from 12-1pm.\n          </checkbox>\n        </input-row>\n      </li>\n    </ul>\n  </div>\n</template>\n","<script>\nimport api from '@/http/api';\nimport is_validation_error from '../../http/is_validation_error';\n\nexport default {\n    name: 'NHGRIDataAvailability',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value);\n            }\n        },\n        attestation: {\n            get () {\n                return Boolean(this.group.expert_panel.nhgri_attestation_date);\n            },\n            set (value) {\n                if (value) {\n                    this.group.expert_panel.nhgri_attestation_date = new Date();\n                } else {\n                    this.group.expert_panel.nhgri_attestation_date = null;\n                }\n                this.$emit('update');\n            }\n        },\n        checkboxLabel () {\n            if (this.group.is_vcep) {\n                return \"I understand that once a variant is approved in the VCI it will become publicly available in the Evidence Repository. They should not be held for publication.\"\n            }\n\n            return \"Please check box to confirm your understanding that once a gene is approved in the GCI, the group should utilize the ‚Äúpublish‚Äù functionality within the GCI to make the curation publicly available on the ClinGen website (https://clinicalgenome.org/). They should not be held for publication.\"\n        }\n    },\n    methods: {\n        async save () {\n            if (this.attestation) {\n                try {\n                    await api.post(`/api/groups/${this.group.uuid}/application/attestations/nhgri`, {'attestation': this.attestation})\n                } catch (error) {\n                    if (is_validation_error(error)) {\n                        this.errors = error.response.data.errors\n                    }\n                }\n            }\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <p v-if=\"group.is_vcep\">\n      Curated variants and genes are expected to be approved and posted for the community as soon as possible as described in Section 2.4 of the <vcep-protocol-link />.\n      Note that upon approval, a VCEP must finalize their set of variants for upload to the ClinGen Evidence Repository within 30 days.\n    </p>\n    <p v-if=\"group.is_gcep\">\n      Curated genes and variants are expected to be approved and posted for the community as soon as possible and should not wait for the publication of a manuscript.\n    </p>\n\n    <p class=\"my-4\">\n      <input-row label=\"\" :vertical=\"true\">\n        <checkbox\n          id=\"nhgri-checkbox\"\n          v-model=\"attestation\"\n          :disabled=\"disabled\"\n          :label=\"checkboxLabel\"\n        />\n      </input-row>\n    </p>\n\n    <p v-if=\"group.is_vcep_or_scvcep\">\n      Please review the\n      <publication-policy-link />\n      and refer to guidance on submissions to a preprint server (e.g. bioRxiv or medRxiv).\n    </p>\n    <p v-if=\"group.is_gcep\">\n      <em>It is expected that, whenever possible, Expert Panel manuscripts will be pre-published (e.g. medRXiv) . If the authors do not anticipate submitting their manuscript to a prepublication resource they must provide a written justification.</em>\n    </p>\n  </div>\n</template>\n","<script>\nimport api from '@/http/api'\nimport is_validation_error from '../../http/is_validation_error'\n\nexport default {\n    name: 'ReanalysisForm',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            otherCheckbox: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            }, \n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        }\n    },\n    watch: {\n        otherCheckbox (to) {\n            if (!to) {\n                this.group.expert_panel.reanalysis_other = null;\n            }\n        }\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/reanalysis`, this.group.expert_panel)\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        checkCompleteness () {\n\t\t\tconst checkedStandard =\n\t\t\t\tthis.group.expert_panel.reanalysis_conflicting &&\n\t\t\t\tthis.group.expert_panel.reanalysis_review_lp &&\n\t\t\t\tthis.group.expert_panel.reanalysis_review_lb;\n\n\t\t\tconst hasOtherExplanation =\n\t\t\t\tthis.otherCheckbox &&\t\t\t\t\n\t\t\t\tthis.group.expert_panel.reanalysis_other.trim().length >= 5;\n\n\t\t\tif (\n\t\t\t\t(checkedStandard || hasOtherExplanation) &&\n\t\t\t\tthis.group.expert_panel.gcep_attestation_date === null\n\t\t\t) {\n\t\t\t\tthis.group.expert_panel.reanalysis_attestation_date = new Date();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.group.expert_panel.reanalysis_attestation_date = null;\n\t\t}\n    }\n}\n</script>\n<template>\n\t<div>\n\t\t<p>\n\t\t\tExpert Panels are expected to keep their variant interpretations up-to-date and to expedite the re-review of variants that have a conflicting assertion submitted to ClinVar after the Expert Panel submission. Please check all 3 boxes below to attest that the VCEP will follow the ClinGen-approved schedule described below <strong><em>or</em></strong> describe other plans at the bottom of the section.\n\t\t</p>\n\t\t<ul class=\"ml-4 mt-2\">\n\t\t\t<li>\n\t\t\t\t<input-row :errors=\"errors.reanalysis_conflicting\" :hide-label=\"true\">\n\t\t\t\t\t<checkbox v-model=\"group.expert_panel.reanalysis_conflicting\" :disabled=\"disabled\" @update:model-value=\"$emit('update'), checkCompleteness()\">\n\t\t\t\t\t\tVCEPs are expected to reassess any newly submitted conflicting assertion in ClinVar from a one star submitter or above and attempt to resolve or address the conflict within 6 months of being notified about the conflict from ClinGen. Please reach out to the submitter if you need additional information about the conflicting assertion.\n\t\t\t\t\t</checkbox>\n\t\t\t\t</input-row>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<input-row :errors=\"errors.reanalysis_review_lp\" :hide-label=\"true\">\n\t\t\t\t\t<checkbox v-model=\"group.expert_panel.reanalysis_review_lp\" :disabled=\"disabled\" @update:model-value=\"$emit('update'), checkCompleteness()\">\n\t\t\t\t\t\tVCEPs are expected to re-review all LP and VUS classifications made by the EP at least every 2 years to see if new evidence has emerged to re-classify the variants\n\t\t\t\t\t</checkbox>\n\t\t\t\t</input-row>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<input-row :errors=\"errors.reanalysis_review_lb\" :hide-label=\"true\">\n\t\t\t\t\t<checkbox v-model=\"group.expert_panel.reanalysis_review_lb\" :disabled=\"disabled\" @update:model-value=\"$emit('update'), checkCompleteness()\">\n\t\t\t\t\t\tVCEPs are expected to re-review any LB classifications when new evidence is available or when requested by the public via the ClinGen website.\n\t\t\t\t\t</checkbox>\n\t\t\t\t</input-row>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<input-row :errors=\"errors.reanalysis_other\" :hide-label=\"true\">\n\t\t\t\t\t<checkbox v-model=\"otherCheckbox\" :disabled=\"disabled\" @update:model-value=\"$emit('update'), checkCompleteness()\">\n\t\t\t\t\t\tPlans differ from the expectations above.\n\t\t\t\t\t</checkbox>\n\t\t\t\t\t<transition name=\"slide-fade-down\">\n\t\t\t\t\t\t<div v-if=\"otherCheckbox\" class=\"ml-4\">\n\t\t\t\t\t\t<label for=\"reanalysis-other-textarea\">Explain differences:</label>\n\t\t\t\t\t\t<textarea \n\t\t\t\t\t\t\tid=\"reanalysis-other-textarea\" \n\t\t\t\t\t\t\tv-model=\"group.expert_panel.reanalysis_other\"\n\t\t\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\t\t\t:disabled=\"disabled\"\n\t\t\t\t\t\t\t@update:model-value=\"$emit('update'), checkCompleteness()\"\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</transition>\n\t\t\t\t</input-row>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n</template>","<script>\nimport {ref, watch, computed, nextTick} from 'vue';\nimport {useStore} from 'vuex';\nimport formFactory from '@/forms/form_factory'\nimport is_validation_error from '@/http/is_validation_error'\nimport api from '@/http/api'\nimport GeneCurationStatus from './GeneCurationStatus.vue';\nimport GeneSearchSelect from '@/components/forms/GeneSearchSelect.vue'\n\nexport default {\n    name: 'GcepGeneList',\n    components: {\n        GeneCurationStatus, GeneSearchSelect \n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n        'update:editing',\n        'geneschanged',\n        'update'\n    ],\n    setup(props, context) {\n        const store = useStore();\n\n        const loading = ref(false);\n        const genesAsText = ref(null);\n        const geneCheckResults = ref([]);\n\n        const selectedGene = ref(null)\n        const selectKey = ref(0)\n        const adding = ref(false)\n\n        const bulkCheckResults = ref([])\n        const showPasteModal = ref(false)\n        const pasteText = ref('')\n        const pasteArea = ref(null)\n        const reviewing = ref(false)\n\n\n        const {errors, resetErrors} = formFactory(props, context)\n\n        const group = computed({\n            get() {\n                return store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                store.commit('groups/addItem', value)\n            }\n        });\n\n        const addGene = async () => {\n            if (!selectedGene.value) return\n            adding.value = true\n            try {\n                const payloadItem = {\n                    hgnc_id: selectedGene.value.hgnc_id,\n                    gene_symbol: selectedGene.value.gene_symbol ?? selectedGene.value.symbol\n                }\n                await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, { genes: [ payloadItem ] })                \n                await getGenes()\n                context.emit('saved')\n                store.commit('pushSuccess', `Added ${payloadItem.gene_symbol}`)\n            } catch (error) {\n                const res = error?.response\n                if (res?.status === 422 && res.data?.errors) {\n                    const all = Object.values(res.data.errors).flat()\n                    store.commit('pushError', all.join('\\n'))\n                } else {\n                    store.commit('pushError', res?.data?.message || `Failed to add ${payloadItem.gene_symbol}`)\n                }\n            } finally {\n                selectedGene.value = null\n                await nextTick()\n                selectKey.value++\n                adding.value = false\n            }\n        }\n\n\n        const getGenes = async () => {\n            if (!group.value.uuid) return;\n            if (loading.value) return \n            loading.value = true;\n            try {\n                await store.dispatch('groups/getGenes', group.value);\n                genesAsText.value = group.value.expert_panel.genes.map(g => g.gene_symbol).join(\", \");\n                geneCheckResults.value = group.value.expert_panel.genes;\n            } catch (error) {\n                let message = 'An unexpected error occurred.';\n    \n                if (error.response) {\n                    if (typeof error.response.data === 'string') {\n                        message = error.response.data;\n                    } else if (error.response.data?.message) {\n                        message = error.response.data.message;\n                    } else if (Array.isArray(error.response.data?.errors)) {\n                        message = error.response.data.errors.join(', ');\n                    } else if (typeof error.response.data === 'object') {\n                        message = JSON.stringify(error.response.data);\n                    }\n                } else if (error.message) {\n                    message = error.message;\n                }\n\n                store.commit('pushError', message);\n            }\n            loading.value = false;\n            \n        }\n        const hideForm = () => {\n            context.emit('update:editing', false);\n            errors.value = {};\n        }\n        const cancel = () => {\n            resetErrors();\n            getGenes();\n            hideForm();\n            context.emit('canceled');\n        }\n\n        function openPasteModal () {\n            showPasteModal.value = true\n            nextTick(() => pasteArea.value && pasteArea.value.focus())\n        }\n\n        function closePasteModal () {\n            showPasteModal.value = false\n            pasteText.value = ''\n            bulkCheckResults.value = []\n        }\n\n        const alreadyAddedSet = computed(() => {\n            const arr = Array.isArray(geneCheckResults.value) ? geneCheckResults.value : []\n            return new Set(arr.map(r => String(r?.gene_symbol ?? '').toUpperCase()).filter(Boolean))\n        })\n\n        const availabilityMap = ref(new Map())\n        const lastReviewedSymbols = ref([])\n\n        async function onReviewClick () {\n            const genes = (pasteText.value || '').split(/[, \\n\\t]+/).map(s => s.trim()).filter(Boolean)\n\n            if (genes.length === 0) {\n                store.commit('pushError', 'Please paste at least one gene symbol separated by commas.')\n                return\n            }\n\n            reviewing.value = true\n            try {\n                lastReviewedSymbols.value = [...new Set(genes.map(s => s.toUpperCase()))]\n                const resp = await api.post('/api/genes/availability', { genes: lastReviewedSymbols.value.join(',') })\n                const rows = Array.isArray(resp.data) ? resp.data : (resp.data?.data || [])\n\n                const map = new Map()\n                for (const row of rows) {\n                    const sym = String(row.gene_symbol ?? '').toUpperCase()\n                    if (sym) map.set(sym, row)\n                }\n                availabilityMap.value = map\n                bulkCheckResults.value = rows\n            } catch (e) {\n                store.commit('pushError', 'Failed to review pasted genes.')\n                console.error(e)\n            } finally {\n                reviewing.value = false\n            }\n        }\n\n        const reviewBuckets = computed(() => {\n            const already = []\n            const notFound = []\n            const ready = []\n\n            const alreadySet = alreadyAddedSet.value\n\n            for (const sym of lastReviewedSymbols.value) {\n                const isAlready = alreadySet.has(sym)\n                const existsInGT = availabilityMap.value.has(sym)\n\n                if (isAlready) { already.push(sym) } else if (existsInGT) { ready.push(sym) } else { notFound.push(sym)}\n            }\n\n            return { ready, already, notFound }\n\n        })\n\n        const submittingBulk = ref(false)\n\n        async function submitBulkFromReviewUI () {\n            const symbols = reviewBuckets.value.ready\n            if (!symbols.length) return\n            \n            const toAdd = symbols.map(sym => {\n                const row = availabilityMap.value.get(sym) || {}\n                return {\n                    hgnc_id: row.hgnc_id ?? null,\n                    gene_symbol: row.gene_symbol ?? sym\n                }\n            })\n\n\n            const missing = toAdd.filter(g => !g.hgnc_id)\n            const finalToAdd = toAdd.filter(g => g.hgnc_id)\n\n            if (!finalToAdd.length) {\n                store.commit('pushError', 'No addable genes were found (missing HGNC IDs).')\n                return\n            }\n            if (missing.length) {\n                store.commit('pushError', `Some genes are missing HGNC IDs and were skipped: ${missing.map(m => m.gene_symbol).join(', ')}`)\n            }\n\n            submittingBulk.value = true\n            try {\n                await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, { genes: finalToAdd })\n                store.commit('pushSuccess', `Added ${finalToAdd.length} gene${finalToAdd.length > 1 ? 's' : ''}.`)\n                await getGenes()\n                showPasteModal.value = false\n                bulkCheckResults.value = []\n                pasteText.value = ''\n                availabilityMap.value = new Map()\n                lastReviewedSymbols.value = []\n\n            } catch (err) {\n                if (is_validation_error(err)) {\n                    const messages = err.response?.data?.errors || {}\n                    const items = Object.keys(messages).map(k => `${k}: ${[].concat(messages[k]).join(', ')}`)\n                    store.commit('pushError', items.join('\\n') || 'Validation failed while adding genes.')\n                } else {\n                    store.commit('pushError', err?.response?.data?.message || 'Failed to add genes.')\n                }\n            } finally {\n                submittingBulk.value = false\n            }\n        }\n\n        watch(() => group.value?.uuid, (uuid, prev) => {\n                if (!uuid) return\n                if (uuid === prev && geneCheckResults.value?.length) return\n                getGenes()\n            }, { immediate: true }\n        )\n\n        const onChildChange = async () => {\n            await getGenes()\n            context.emit('geneschanged')\n            context.emit('update')\n        }\n\n        return {\n            group, genesAsText, loading, errors, resetErrors, hideForm, cancel,\n            geneCheckResults, selectedGene, adding, addGene, onChildChange, selectKey,\n            showPasteModal, pasteText, pasteArea, openPasteModal, closePasteModal, onReviewClick, reviewing, bulkCheckResults,\n            reviewBuckets, submitBulkFromReviewUI, submittingBulk\n\n        }\n    },\n    computed: {\n        canEdit () {\n            return this.hasAnyPermission(['groups-manage', ['application-edit', this.group]]);\n        }\n    },\n    methods: {\n        showForm () {\n            if (this.canEdit) {\n                this.resetErrors();\n                this.$emit('update:editing', true);\n            }\n        }\n\n    }\n}\n</script>\n<template>\n    <div>\n        <h4 class=\"flex justify-between mb-2\">\n            Gene List\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing && !readonly\"\n                @click=\"showForm\"\n            />\n        </h4>\n        <div v-if=\"genesAsText != ''\" class=\"mb-2\">{{ genesAsText }}</div>\n        <div v-else class=\"well cursor-pointer mb-2\" @click=\"showForm\">{{ loading ? `Loading...` : `No genes have been added to the gene list.` }}</div>\n\n        <div v-if=\"editing && !readonly\" class=\"border rounded bg-gray-50 p-4 mb-4\">\n            <label class=\"block text-sm font-semibold mb-2\">Add gene</label>\n            <div class=\"flex items-center gap-2\">\n                <GeneSearchSelect v-model=\"selectedGene\" placeholder=\"Search gene by HGNC symbol‚Ä¶\" class=\"w-full max-w-xl\" :key=\"selectKey\" />\n                <button type=\"button\" class=\"rounded bg-blue-600 text-white px-3 py-1.5 text-sm disabled:opacity-50\" :disabled=\"!selectedGene || adding\" @click=\"addGene\">\n                    {{ adding ? 'Adding‚Ä¶' : 'Add' }}\n                </button>\n                &nbsp; OR &nbsp; \n                <button type=\"button\" class=\"rounded border border-gray-300 px-3 py-1.5 text-sm hover:bg-gray-100\" @click=\"openPasteModal\">Bulk paste genes</button>\n            </div>\n        </div>\n\n        <div v-if=\"geneCheckResults.length\">\n            <GeneCurationStatus :genes=\"geneCheckResults\" :groupID=\"group.uuid\" :editing=\"editing\" :readonly=\"readonly\" @removed=\"onChildChange\" />\n        </div>\n    </div>\n\n    <teleport to=\"body\">\n        <div\n            v-if=\"showPasteModal\"\n            class=\"fixed inset-0 z-[1000] flex items-center justify-center bg-black/50\"\n            @click.self=\"closePasteModal\"\n        >\n            <div class=\"w-[min(52rem,92vw)] bg-white rounded-lg shadow-xl\">\n                <div class=\"flex items-center justify-between border-b px-4 py-3\">\n                    <h3 class=\"text-base font-semibold\">Paste genes</h3>\n                    <button class=\"text-xl leading-none px-2 py-1\" aria-label=\"Close\" @click=\"closePasteModal\">√ó</button>\n                </div>\n\n                <div class=\"px-4 py-4\">\n                    <p class=\"text-sm text-gray-600 mb-2\">\n                        Enter gene symbols separated by commas or spaces.\n                    </p>\n                    <textarea ref=\"pasteArea\" v-model=\"pasteText\" class=\"w-full min-h-[260px] border rounded-md p-3 font-mono text-sm outline-none focus:ring focus:ring-blue-200\" placeholder=\"BRCA1 BRCA2 CFTR\"></textarea>\n                </div>\n\n                <div class=\"flex justify-end gap-2 border-t px-4 py-3\">\n                    <button class=\"rounded border border-gray-300 px-3 py-1.5 text-sm hover:bg-gray-100\" @click=\"closePasteModal\">Cancel</button>\n                    <button class=\"rounded bg-blue-600 text-white px-3 py-1.5 text-sm disabled:opacity-50\" :disabled=\"!pasteText.trim() || reviewing\" @click=\"onReviewClick\">{{ reviewing ? 'Reviewing‚Ä¶' : 'Review' }}</button>\n                    <button class=\"rounded bg-green-600 text-white px-3 py-1.5 text-sm disabled:opacity-50\" :disabled=\"reviewBuckets.ready.length === 0 || submittingBulk\" @click=\"submitBulkFromReviewUI\" title=\"Add only genes that exist in GT and aren‚Äôt already in this list\">\n                        {{ submittingBulk ? 'Adding‚Ä¶' : `Add ${reviewBuckets.ready.length} gene${reviewBuckets.ready.length !== 1 ? 's' : ''}` }}\n                    </button>\n                </div>\n\n\n                <div v-if=\"bulkCheckResults.length\" class=\"px-4 py-3\">\n                    <div class=\"flex flex-wrap gap-2 mb-3\">\n                        <span class=\"inline-flex items-center gap-2 rounded-full border px-3 py-1 text-sm\">\n                        Ready to add <span class=\"font-semibold\">{{ reviewBuckets.ready.length }}</span>\n                        </span>\n                        <span class=\"inline-flex items-center gap-2 rounded-full border px-3 py-1 text-sm\">\n                        Already in list <span class=\"font-semibold\">{{ reviewBuckets.already.length }}</span>\n                        </span>\n                        <span class=\"inline-flex items-center gap-2 rounded-full border px-3 py-1 text-sm\">\n                        Not found in GT <span class=\"font-semibold\">{{ reviewBuckets.notFound.length }}</span>\n                        </span>\n                    </div>\n                    <div class=\"space-y-2 text-sm\">\n                        <div>\n                            <span class=\"font-semibold\">Ready to add: </span>\n                            <span v-if=\"!reviewBuckets.ready.length\" class=\"text-gray-500\"> ‚Äî </span>\n                            <span v-else>{{ reviewBuckets.ready.join(', ') }}</span>\n                        </div>\n\n                        <div>\n                            <span class=\"font-semibold\">Already in list: </span>\n                            <span v-if=\"!reviewBuckets.already.length\" class=\"text-gray-500\"> ‚Äî </span>\n                            <span v-else>{{ reviewBuckets.already.join(', ') }}</span>\n                        </div>\n\n                        <div>\n                            <span class=\"font-semibold\">Not found in GT: </span>\n                            <span v-if=\"!reviewBuckets.notFound.length\" class=\"text-gray-500\"> ‚Äî </span>\n                            <span v-else>{{ reviewBuckets.notFound.join(', ') }}</span>\n                        </div>\n                    </div>\n                    <!-- <GeneCurationStatus :genes=\"bulkCheckResults\" :groupID=\"group.uuid\" :editing=\"false\" :readonly=\"true\" /> -->\n                </div>\n            </div>\n        </div>\n    </teleport>\n</template>","<script>\nimport Group from '@/domain/group'\nimport EditIconButton from '@/components/buttons/EditIconButton.vue'\nimport RichTextEditor from '@/components/prosekit/RichTextEditor.vue'\nimport { htmlFromMarkdown } from '@/markdown-utils';\n\nexport default {\n    name: \"GroupDescriptionForm\",\n    components: {\n        EditIconButton,\n        RichTextEditor,\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({}),\n        },\n    },\n    emits: [\n        \"update:editing\",\n        \"update:group\",\n        \"update\"\n    ],\n    computed: {\n        group: {\n            get() {\n                return this.$store.getters[\"groups/currentItem\"] || new Group();\n            },\n            set(value) {\n                this.$store.commit(\"groups/addItem\", value);\n            }\n        },\n        htmlDescription() {\n            return htmlFromMarkdown(this.group.description);\n        }\n    },\n}\n</script>\n<template>\n  <div>\n    <header class=\"flex justify-between items-center\">\n      <h4>Website Summary Description of Group</h4>\n      <EditIconButton\n        v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing\"\n        @click=\"$emit('update:editing', true)\"\n      />\n    </header>\n    <div class=\"mt-2\">\n      <p class=\"text-sm\">\n        This is a description of the group's purpose, goals, and objectives\n        as intended for public display (e.g., at the clinicalgenome.org\n        site). This may be more concise than the full scope of work.\n      </p>\n      <transition name=\"fade\" mode=\"out-in\">\n        <div v-if=\"editing\" class=\"mt-2\">\n          <RichTextEditor\n            v-model=\"group.description\"\n            @update:model-value=\"$emit('update')\"\n          />\n        </div>\n        <div v-else class=\"border-2 mt-8 p-2\">\n          <div v-if=\"group.description\" v-html=\"htmlDescription\" />\n          <p v-else class=\"well cursor-pointer\" @click=\"showForm\">\n            A website summary description has not yet been provided.\n          </p>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n","<script>\nimport EditIconButton from '@/components/buttons/EditIconButton.vue'\nimport RichTextEditor from '@/components/prosekit/RichTextEditor.vue'\nimport { htmlFromMarkdown } from '@/markdown-utils';\n\nexport default {\n    name: 'MembershipDescriptionForm',\n    components: {\n        EditIconButton,\n        RichTextEditor,\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({})\n        }\n    },\n    emits: [\n        'update:editing',\n        'saved',\n        'canceled',\n        'update'\n    ],\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value);\n            }\n        },\n        htmlMembershipDescription () {\n            return htmlFromMarkdown(this.group.expert_panel.membership_description);\n        },\n    },\n    methods: {\n        emitUpdate () {\n            this.$emit('update');\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <header class=\"flex justify-between items-center\">\n      <h4>Description of Expertise</h4>\n      <EditIconButton\n        v-if=\"hasAnyPermission(['groups-manage'], ['edit-info', group]) && !editing\"\n        @click=\"$emit('update:editing', true)\"\n      />\n    </header>\n    <div class=\"mt-4\">\n      <p class=\"text-sm\">\n        Describe the expertise of VCEP members who regularly use the ACMG/AMP guidelines to classify variants and/or review variants during clinical laboratory case sign-out.\n      </p>\n      <transition name=\"fade\" mode=\"out-in\">\n        <div v-if=\"editing\" class=\"mt-2\">\n          <RichTextEditor\n            v-model=\"group.expert_panel.membership_description\"\n            @update:model-value=\"emitUpdate\"\n          />\n        </div>\n        <div v-else class=\"border-2 mt-8 p-2\">\n          <div v-if=\"group.expert_panel.membership_description\" v-html=\"htmlMembershipDescription\" />\n          <p v-else class=\"well cursor-pointer\" @click=\"showForm\">\n            A description of expertise has not yet been provided.\n          </p>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n","<script>\nimport Group from '@/domain/group'\nimport GcepQuickGuideLink from '../links/GcepQuickGuideLink.vue';\nimport VcepProtocolLink from '../links/VcepProtocolLink.vue';\nimport EditIconButton from '@/components/buttons/EditIconButton.vue'\nimport RichTextEditor from '@/components/prosekit/RichTextEditor.vue'\nimport { htmlFromMarkdown } from '@/markdown-utils';\n\nexport default {\n    name: \"ScopeDescriptionForm\",\n    components: {\n        GcepQuickGuideLink,\n        VcepProtocolLink,\n        EditIconButton,\n        RichTextEditor,\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({}),\n        },\n    },\n    emits: [\n        \"update:editing\",\n        \"update:group\",\n        \"update\"\n    ],\n    computed: {\n        group: {\n            get() {\n                return this.$store.getters[\"groups/currentItem\"] || new Group();\n            },\n            set(value) {\n                this.$store.commit(\"groups/addItem\", value);\n            }\n        },\n        htmlScopeDescription() {\n            return htmlFromMarkdown(this.group.expert_panel.scope_description);\n        },\n        expertPanel() {\n          return this.group?.expert_panel || {};\n        },\n        genes() {\n          const g = this.expertPanel?.genes;\n          return Array.isArray(g) ? g : [];\n        },\n        curatedGenesCount() {\n          return this.genes.reduce((n, g) => n + ((Array.isArray(g.details) && g.details.length > 0) ? 1 : 0), 0);\n        },\n    }\n}\n</script>\n<template>\n  <div>\n    <header class=\"flex justify-between items-center\">\n      <h4>Description of Scope</h4>\n      <EditIconButton\n        v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing\"\n        @click=\"$emit('update:editing', true)\"\n      />\n    </header>\n    <div class=\"mt-2 text-sm\">\n      <p v-if=\"group.is_vcep_or_scvcep\">\n        Describe the scope of work of the Expert Panel including the disease area(s), genes being addressed, and any specific rationale for choosing the condition(s). See the\n        <VcepProtocolLink /> for more information.\n      </p>\n      <div v-if=\"group.is_gcep\">\n        Describe the scope of work of the expert panel including the following:\n      \n        <ul class=\"list-disc list-inside mt-2\">\n          <li>Describe the disease area of focus</li>\n          <li>Indicate why curation efforts would benefit this disease area</li>\n          <li>Indicate how the gene list will be prioritized</li>\n          <li>Describe plans to collaborate with other GCEPs on any genes on your gene list that overlap in scope</li>\n          <li>see the <GcepQuickGuideLink /> for more information</li>\n        </ul>\n      </div>\n\n      <div v-if=\"curatedGenesCount > 0\"\n        role=\"note\"\n        class=\"mt-3 border-l-4 border-amber-400 bg-amber-50 px-3 py-2 text-sm text-amber-900\n              rounded-md dark:border-amber-400 dark:bg-amber-900/20 dark:text-amber-100\"\n      >\n        <strong>You have added curated genes: {{ curatedGenesCount }}/{{ genes.length }} gene(s)</strong>\n        ‚Äî Please include how you prioritized the list, your plan for overlaps (other GCEPs), the scope boundaries, and your throughput/update cadence.\n      </div>\n      <transition name=\"fade\" mode=\"out-in\">\n        <div v-if=\"editing\" class=\"mt-2\">\n          <RichTextEditor\n            v-model=\"group.expert_panel.scope_description\"\n            @update:model-value=\"$emit('update')\"\n          />\n        </div>\n        <div v-else class=\"border-2 mt-8 p-2\">\n          <div v-if=\"group.expert_panel.scope_description\" v-html=\"htmlScopeDescription\" />\n          <p v-else class=\"well cursor-pointer\" @click=\"showForm\">\n            A description of scope has not yet been provided.\n          </p>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n"],"names":["_sfc_main","value","trainingErrors","dateErrors","to","api","error","isValidationError","_hoisted_1","_hoisted_2","_createElementBlock","_cache","_createElementVNode","_createVNode","_component_input_row","$data","_withCtx","_component_checkbox","$options","$event","$props","_createTextVNode","_component_publication_policy_link","_component_gcep_recuration_process_link","_component_training_materials_link","is_validation_error","_hoisted_3","_openBlock","_component_vcep_protocol_link","_createCommentVNode","_hoisted_4","_hoisted_5","checkedStandard","hasOtherExplanation","_ctx","_Transition","GeneCurationStatus","GeneSearchSelect","props","context","store","useStore","loading","ref","genesAsText","geneCheckResults","selectedGene","selectKey","adding","bulkCheckResults","showPasteModal","pasteText","pasteArea","reviewing","errors","resetErrors","formFactory","group","computed","addGene","payloadItem","getGenes","res","_a","all","_b","nextTick","g","message","hideForm","cancel","openPasteModal","closePasteModal","alreadyAddedSet","arr","r","availabilityMap","lastReviewedSymbols","onReviewClick","genes","s","resp","rows","map","row","sym","e","reviewBuckets","already","notFound","ready","alreadySet","isAlready","existsInGT","submittingBulk","submitBulkFromReviewUI","symbols","toAdd","missing","finalToAdd","m","err","messages","items","k","_d","_c","watch","uuid","prev","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_Fragment","$setup","_createBlock","_component_edit_icon_button","_toDisplayString","args","_component_GeneSearchSelect","_hoisted_6","_component_GeneCurationStatus","_Teleport","_withModifiers","_hoisted_13","_hoisted_23","_hoisted_22","_hoisted_25","_hoisted_24","_hoisted_27","_hoisted_26","EditIconButton","RichTextEditor","Group","htmlFromMarkdown","_component_EditIconButton","_component_RichTextEditor","GcepQuickGuideLink","VcepProtocolLink","n","_component_VcepProtocolLink","_component_GcepQuickGuideLink"],"mappings":"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"}