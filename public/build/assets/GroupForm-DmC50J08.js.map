{"version":3,"file":"GroupForm-DmC50J08.js","sources":["../../../resources/js/forms/form_factory.js","../../../resources/js/components/groups/GroupForm.vue"],"sourcesContent":["import {ref} from 'vue'\nimport is_validation_error from '@/http/is_validation_error'\nimport api from '@/http/api'\n\nexport const errors = ref({});\nconst editing = ref(false);\nconst hideForm = () => {\n    editing.value = false;\n    errors.value = {};\n}\nexport const submitFormData = async ({method, url, data, useFormData = false}) => {\n    try {\n        const headers = {\n            'Content-Type': useFormData ? 'multipart/form-data' : 'application/json'\n        }\n        return await api({\n            method,\n            url,\n            data,\n            headers\n        }).then(response => response.data.data)\n    } catch (error) {\n        if (is_validation_error(error)) {\n            errors.value = {...errors, ...error.response.data.errors}\n        }\n    }\n}\n\nexport const resetErrors = () => {\n    errors.value = {};\n}\n\nexport default () => {\n    return {\n        errors,\n        editing,\n        hideForm,\n        submitFormData,\n        resetErrors,\n    }\n}\n","<script>\nimport configs from '@/configs'\nimport Group from '@/domain/group'\nimport formFactory from '@/forms/form_factory'\nimport { api, isValidationError } from '@/http'\nimport {sortBy} from 'lodash-es'\n\nexport default {\n    name: 'GroupForm',\n    emits: [\n        'canceled',\n        'saved',\n        'update'\n    ],\n    setup (props, context) {\n        const {errors, submitFormData, resetErrors} = formFactory(props, context)\n\n        return {\n            errors,\n            submitFormData,\n            resetErrors\n        }\n    },\n    data() {\n        return {\n            groupTypes: configs.groups.types,\n            groupStatuses: configs.groups.statuses,\n            newGroup: new Group(),\n            parents: []\n        }\n    },\n    computed: {\n        group: {\n            get() {\n                const group = this.$store.getters['groups/currentItem'];\n                if (group) {\n                    return group;\n                }\n                return this.newGroup;\n            },\n            set (value) {\n                try {\n                    this.$store.commit(\"groups/addItem\", value);\n                } catch (e) {\n                    // eslint-disable-next-line no-console\n                    console.log(`Error setting group: ${e}`);\n                    this.newGroup = value;\n                }\n            }\n        },\n        statusOptions () {\n            return Object.values(this.groupStatuses).map(status => ({value: status.id, label: this.titleCase(status.name)}))\n        },\n        typeOptions () {\n            return Object.values(this.groupTypes).map(type => ({value: type.id, label: type.display_name}));\n        },\n        canSetType() {\n            return this.hasPermission('groups-manage') && !this.group.id\n        },\n        affiliationIdPlaceholder () {\n            return 50000\n        },\n        cdwgs () {\n            return this.$store.getters['cdwgs/all']\n        },\n        namesDirty () {\n            return this.group.expert_panel.isDirty('long_base_name')\n                || this.group.expert_panel.isDirty('short_base_name');\n        },\n        affiliationIdDirty () {\n            return this.group.expert_panel.isDirty('affiliation_id');\n        },\n        parentOptions () {\n            const options = [{value: 0, label: 'None'}];\n            const parentFilter = this.group.isEp() ? g => g.isCdwg() : g => g.type.can_be_parent;\n            this.parents\n                .filter(parentFilter)\n                .sort((a, b) => a.displayName.localeCompare(b.displayName))\n                .forEach(parent => {\n                    options.push({value: parent.id, label: parent.displayName})\n                })\n            return options;\n        }\n    },\n    beforeMount() {\n        this.getParentOptions();\n        this.$store.dispatch('cdwgs/getAll');\n    },\n    methods: {\n        async save() {\n            this.resetErrors();\n            try {\n                if (this.group.id) {\n                    await this.updateGroup();\n                    this.$emit('saved');\n\n                    // this.$store.dispatch('groups/find', this.group.uuid);\n                    // this.$store.commit('pushSuccess', 'Group info updated.');\n                    return;\n                }\n\n                const newGroup = await this.createGroup()\n                                    .then(response => response.data.data);\n                this.$emit('saved');\n                this.$store.commit('pushSuccess', 'Group created.');\n                this.$router.push({name: 'AddMember', params: {uuid: newGroup.uuid}});\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors;\n                }\n                throw error;\n            }\n        },\n        createGroup () {\n            let {\n                name,\n                parent_id,\n                group_type_id,\n                group_status_id\n            } = this.group.attributes;\n\n            const {short_base_name} = this.group.expert_panel;\n\n            if (name === null && this.group.expert_panel) {\n                name = this.group.expert_panel.long_base_name;\n            }\n\n            return this.$store.dispatch(\n                'groups/create',\n                {\n                    name,\n                    parent_id,\n                    group_type_id,\n                    group_status_id,\n                    short_base_name\n                }\n            );\n        },\n        updateGroup () {\n            const promises = [];\n            promises.push(this.saveGroupData());\n            if (this.group.expert_panel) {\n                promises.push(this.saveEpData());\n            }\n\n            return Promise.all(promises);\n        },\n        saveGroupData () {\n            const promises = [];\n            if (this.group.isDirty('parent_id')) {\n                promises.push(this.saveParent());\n            }\n\n            if (this.group.isDirty('name')) {\n                promises.push(this.saveName())\n            }\n\n            if (this.group.isDirty('group_status_id')) {\n                promises.push(this.saveStatus())\n            }\n\n            return Promise.all(promises);\n        },\n        async saveEpData() {\n            const promises = []\n            if (this.namesDirty) {\n                const {long_base_name, short_base_name} = this.group.expert_panel;\n                promises.push(this.submitFormData({\n                    method: 'put',\n                    url: `/api/groups/${this.group.uuid}/expert-panel/name`,\n                    data: { long_base_name, short_base_name }\n                }));\n            }\n\n            if (this.affiliationIdDirty) {\n                promises.push(this.submitFormData({\n                    method: 'put',\n                    url: `/api/groups/${this.group.uuid}/expert-panel/affiliation-id`,\n                    data: { affiliation_id: this.group.expert_panel.affiliation_id }\n                }));\n            }\n\n            return await Promise.all(promises);\n        },\n\n        isDirty (attribute) {\n            // eslint-disable-next-line no-console\n            console.log('Not sure isDirty is supposed to be called here...')\n            return this.group.isDirty(attribute)\n        },\n\n        saveParent () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/parent`,\n                data: { parent_id: this.group.parent_id }\n            })\n        },\n        saveName () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/name`,\n                data: {name: this.group.name}\n            })\n        },\n        saveStatus () {\n            return this.submitFormData({\n                method: 'put',\n                url: `/api/groups/${this.group.uuid}/status`,\n                data: {status_id: this.group.group_status_id}\n            })\n        },\n        resetData () {\n            if (this.group.uuid) {\n                this.$store.dispatch('groups/find', this.group.uuid);\n            }\n        },\n        cancel() {\n            if (this.group.uuid) {\n                this.resetData();\n            }\n            this.$emit('canceled');\n        },\n        async getParentOptions () {\n            const params = {\n                'where[group_type_id]': [1,2],\n                without: ['coordinators', 'expertPanel']\n            };\n\n            this.parents = await api.get(`/api/groups`, {params})\n                        .then(response => {\n                            return response.data\n                                .filter(group => group.id !== this.group.id)\n                                .map(g => new Group(g))\n                        });\n        },\n        emitUpdate () {\n            this.$emit('update');\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <input-row\n      v-if=\"canSetType\"\n      v-model=\"group.group_type_id\"\n      :errors=\"errors.group_type_id\"\n      type=\"select\"\n      :options=\"typeOptions\"\n      label=\"Type\"\n    />\n\n    <dictionary-row v-else label=\"Type\">\n      {{ group?.type?.display_name }}\n    </dictionary-row>\n\n    <transition name=\"slide-fade-down\" mode=\"out-in\">\n      <div v-if=\"group.group_type_id > 2 && group.expert_panel\">\n        <input-row\n          v-model=\"group.expert_panel.long_base_name\"\n          label=\"Long Base Name\"\n          placeholder=\"Long base name\"\n          :errors=\"errors.long_base_name\"\n          input-class=\"w-full\"\n          @update:model-value=\"emitUpdate\"\n        />\n        <input-row\n          v-model=\"group.expert_panel.short_base_name\"\n          label=\"Short Base Name\"\n          placeholder=\"Short base name\"\n          :errors=\"errors.short_base_name\"\n          input-class=\"w-full\"\n          @update:model-value=\"emitUpdate\"\n        />\n        <div v-if=\"hasAnyPermission(['groups-manage'])\">\n          <input-row\n            v-model=\"group.expert_panel.affiliation_id\"\n            label=\"Affiliation ID\"\n            :placeholder=\"affiliationIdPlaceholder\"\n            :errors=\"errors.affiliation_id\"\n            input-class=\"w-full\"\n            @update:model-value=\"emitUpdate\"\n          >\n            <template #label>\n              Affiliation ID\n              <note>admin-only</note>\n            </template>\n          </input-row>\n        </div>\n        <dictionary-row v-else label=\"Affiliation ID\">\n          <span v-if=\"group.expert_panel.affiliation_id\">{{ group.expert_panel.affiliation_id }}</span>\n          <span v-else class=\"text-gray-400\">{{ 'Not yet assigend' }}</span>\n        </dictionary-row>\n      </div>\n      <div v-else>\n        <input-row\n          v-model=\"group.name\"\n          placeholder=\"Name\"\n          label=\"Name\"\n          input-class=\"w-full\"\n          :errors=\"errors.name\"\n          @update:model-value=\"emitUpdate\"\n        />\n      </div>\n    </transition>\n    <div v-if=\"hasPermission('groups-manage')\">\n      <input-row\n        v-model=\"group.group_status_id\"\n        type=\"select\"\n        :options=\"statusOptions\"\n        :errors=\"errors.group_status_id\"\n        @update:model-value=\"emitUpdate\"\n      >\n        <template #label>\n          Status:\n          <note>admin-only</note>\n        </template>\n      </input-row>\n\n      <input-row\n        v-model=\"group.parent_id\"\n        type=\"select\"\n        :options=\"parentOptions\"\n        :errors=\"errors.parent_id\"\n        @update:model-value=\"emitUpdate\"\n      >\n        <template #label>\n          Parent group:\n          <note>admin-only</note>\n        </template>\n      </input-row>\n    </div>\n  </div>\n</template>\n"],"names":["errors","ref","editing","hideForm","submitFormData","method","url","data","useFormData","api","response","error","is_validation_error","resetErrors","formFactory","_sfc_main","props","context","configs","Group","group","value","e","status","type","options","parentFilter","g","b","parent","newGroup","isValidationError","name","parent_id","group_type_id","group_status_id","short_base_name","promises","long_base_name","attribute","params","_createElementBlock","$options","_createBlock","_component_input_row","_cache","$event","$setup","_component_dictionary_row","_withCtx","_createTextVNode","_toDisplayString","_b","_a","_createVNode","_Transition","_openBlock","_hoisted_1","_ctx","_hoisted_2","_component_note","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_createCommentVNode"],"mappings":"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"}