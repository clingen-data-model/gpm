{"version":3,"file":"ProfileForm-DOD19Vsn.js","sources":["../../../resources/js/components/people/ProfilePhotoForm.vue","../../../resources/js/components/people/ProfileForm.vue"],"sourcesContent":["<script>\nimport ImageCropper from '@/components/ImageCropper.vue'\nimport { api, isValidationError } from '@/http'\n\nexport default {\n    name: 'ProfilePhotoForm',\n    components: {\n        ImageCropper\n    },\n    props: {\n        person: {\n            type: Object,\n            required: true\n        }\n    },\n    data() {\n        return {\n            showForm: false,\n            file: null,\n            croppedImageBlob: null,\n            errors: {},\n            saving: false\n        }\n    },\n    computed: {\n        srcPath() {\n            if (this.file) {\n                return URL.createObjectURL(this.file);\n            }\n            if (this.person.profile_photo) {\n                return `/profile-photos/${this.person.profile_photo}`\n            }\n            return '/images/default_profile.jpg';\n        },\n        profilePhoto() {\n            if (this.person.profile_photo) {\n                return `/profile-photos/${this.person.profile_photo}`\n            }\n            return '/images/default_profile.jpg';\n        },\n        altText() {\n            return this.person.profile_photo_path\n                ? `${this.person.name} profile photo.`\n                : 'Default profile image';\n        },\n    },\n    watch: {\n        person: {\n            immediate: true,\n            deep: true,\n            handler(to) {\n                if (to.profile_photo) {\n                    this.fetchProfileImage();\n                }\n            }\n        }\n    },\n    methods: {\n        initUpload() {\n            this.showForm = true;\n            this.$nextTick(() => {\n                window.dispatchEvent(new Event('resize'));\n            });\n        },\n        setFile() {\n            this.file = this.$refs.fileInput.files[0]\n        },\n        setCroppedImageBlob(blob) {\n            this.croppedImageBlob = blob;\n        },\n        async fetchProfileImage() {\n            const url = `/api/people/${this.person.uuid}/profile-photo`;\n            const options = {\n                Accept: 'application/octet-stream',\n                timeout: 30000,\n                responseType: 'blob'\n            };\n            this.file = await api.get(url, options)\n                .then(rsp => {\n                    if (!(rsp.data instanceof Blob)) return;\n\n                    return new Blob([rsp.data]);\n                });\n        },\n        saveCropped() {\n            if (this.croppedImageBlob.size > 1000000) {\n                const width = 400;\n                createImageBitmap(this.croppedImageBlob).then(\n                    (imageBitmap) => {\n                        const canvas = document.createElement('canvas');\n                        const ctx = canvas.getContext('2d');\n\n                        canvas.width = width;\n                        canvas.height = width * imageBitmap.height / imageBitmap.width;\n\n                        ctx.drawImage(imageBitmap, 0, 0, canvas.width, canvas.height);\n                        canvas.toBlob(blob => {\n                            if (blob.size > 1000000) {\n                                this.errors.profile_photo = ['The image is too large, even after resizing.'];\n                            } else {\n                                delete this.errors.profile_photo;\n                                this.storeImage(blob);\n                            }\n                        }, 'image/jpeg', .5);\n                    }\n                )\n            } else {\n                delete this.errors.profile_photo;\n                this.storeImage(this.croppedImageBlob)\n            }\n        },\n        storeImage(blob) {\n            this.saving = true;\n            const formData = new FormData();\n\n            formData.append('profile_photo', blob);\n\n            api.post(`/api/people/${this.person.uuid}/profile-photo`, formData)\n                .then(() => {\n                    this.$store.dispatch('people/getPerson', { uuid: this.person.uuid });\n                    this.showForm = false;\n                    this.file = null;\n                    this.saving = false;\n                })\n                .catch(error => {\n                    this.saving = false;\n                    if (isValidationError(error)) {\n                        this.errors = error.response.data.errors;\n                        return;\n                    } else if (error.response.status === 413) {\n                        this.errors.profile_photo = ['The image is too large.'];\n                        return;\n                    }\n                    throw (error);\n                })\n        },\n        cancelCropped() {\n            this.showForm = false;\n            this.file = null;\n        }\n    }\n}\n</script>\n<template>\n  <div :class=\"{ 'cursor-wait': saving }\">\n    <div class=\"border border-gray-200 rounded-lg\">\n      <img :src=\"srcPath\" :alt=\"altText\" class=\"rounded-t-lg w-full\" @click=\"initUpload\">\n      <button class=\"border border-t-0 bg-gray-200 block w-full\" @click=\"initUpload\">\n        Edit\n      </button>\n    </div>\n\n    <teleport to=\"body\">\n      <modal-dialog v-model=\"showForm\" title=\"Upload a new profile photo\">\n        <ImageCropper :image-src=\"srcPath\" @cropped=\"setCroppedImageBlob\" />\n\n        <input-row hide-label :errors=\"errors.profile_photo\">\n          <input ref=\"fileInput\" type=\"file\" @change=\"setFile\">\n        </input-row>\n\n        <button-row v-if=\"!saving\" submit-text=\"Save\" @submitted=\"saveCropped\" @canceled=\"cancelCropped\" />\n        <div v-else>\n          Saving...\n        </div>\n      </modal-dialog>\n    </teleport>\n  </div>\n</template>\n","<script setup>\n    import {useStore} from 'vuex'\n    import {ref, computed, watch, onMounted} from 'vue'\n    import Person from '@/domain/person'\n    import isValidationError from '@/http/is_validation_error'\n    import ProfilePhotoForm from '@/components/people/ProfilePhotoForm.vue';\n    import { hasPermission, userIsPerson } from '../../auth_utils';\n    import InstitutionSearchSelect from '../forms/InstitutionSearchSelect.vue';\n    import AddressInput from '../forms/AddressInput.vue';\n    import TimezoneSearchSelect from '../forms/TimezoneSearchSelect.vue';\n    import CredentialsInput from '../forms/CredentialsInput.vue';\n    import ExpertisesInput from '../forms/ExpertisesInput.vue';\n\n    const props = defineProps({\n                    person: {\n                        type: Object,\n                        required: true\n                    },\n                    showTitle: {\n                        type: Boolean,\n                        default: true\n                    },\n                    allowCancel: {\n                        type: Boolean,\n                        default: true,\n                    },\n                    saveButtonText: {\n                        type: String,\n                        default: 'Save'\n                    }\n                });\n    const emits = defineEmits([\n                        'saved',\n                        'canceled'\n                    ]);\n    const store = useStore();\n    const errors = ref({});\n    const profile = ref({});\n    const saving = ref(false);\n\n    const initProfile = () => {\n        if (props.person.clone) {\n            profile.value = {...props.person.attributes};\n        } else {\n            profile.value = {...props.person};\n        }\n        profile.value.credential_ids = props.person.credentials ? props.person.credentials.map(c => c.id) : null;\n    };\n\n    const save = async () => {\n        try {\n            if (profile.value.credentials) {\n                profile.value.credential_ids = profile.value.credentials.map(c => c.id)\n            }\n            if (profile.value.expertises) {\n                profile.value.expertise_ids = profile.value.expertises.map(c => c.id)\n            }\n            saving.value = true;\n            const updatedPerson = await store.dispatch(\n                    'people/updateProfile',\n                    {uuid: props.person.uuid, attributes: profile.value}\n                ).then(rsp => {\n                    store.dispatch('getCurrentUser', {force: true})\n                    store.commit('pushSuccess', 'Your profile has been updated.')\n                    return rsp.data;\n                })\n\n                saving.value = false;\n                errors.value = {};\n                emits('saved', new Person(updatedPerson));\n        } catch (error) {\n            if (isValidationError(error)) {\n                errors.value = error.response.data.errors;\n            }\n        }\n    };\n\n    const cancel = () => {\n        initProfile();\n        errors.value = {};\n        emits('canceled');\n    };\n\n    const canEditAllFields = computed(() => hasPermission('people-manage') || userIsPerson(props.person));\n\n    watch(() => props.person, () => {\n        initProfile()\n    }, {immediate: true});\n\n    const countries = computed(() => {\n        return store.getters['countries/items'].map(i => ({value: i.id, label: i.name}))\n    })\n\n    onMounted(() => {\n        store.dispatch('countries/getItems');\n    });\n\n</script>\n\n<template>\n  <div>\n    <h3 v-if=\"showTitle\">\n      Profile\n    </h3>\n    <div v-if=\"(hasPermission('people-manage') || userIsPerson(person))\" class=\"float-right\">\n      <ProfilePhotoForm :person=\"person\" style=\"width: 100px; height: 100px;\" />\n    </div>\n\n    <input-row\n      v-model=\"profile.first_name\"\n      label=\"First Name\"\n      :errors=\"errors.first_name\"\n    />\n\n    <input-row\n      v-model=\"profile.last_name\"\n      label=\"Last Name\"\n      :errors=\"errors.last_name\"\n    />\n    <input-row\n      v-model=\"profile.email\"\n      label=\"Email\"\n      :errors=\"errors.email\"\n    />\n\n    <input-row\n      label=\"Institution\"\n      :errors=\"errors.institution_id\"\n    >\n      <InstitutionSearchSelect v-model=\"profile.institution_id\" />\n    </input-row>\n\n    <input-row\n      :errors=\"errors.credential_ids\"\n    >\n      <template #label>\n        Credentials\n        <div>\n          <popover hover arrow>\n            <div class=\"text-xs cursor-pointer text-blue-600\">\n              What is this?\n            </div>\n            <template #content>\n              <div style=\"max-width: 500px\">\n                <h4>What do you mean by credentials?</h4>\n                <p>\n                  Credentials are any degrees or professional certifications you have earned.  Typically, these will be the acronyms you list after your name on your CV.\n                </p>\n                <p>\n                  We recommend choosing one or more options already in the list of credentials, but if you do not see yours feel free to add it.\n                </p>\n                <p>\n                  Please do not include current job titles or specific.  If you would like to add that information to your profile please do so in the biography field below.\n                </p>\n              </div>\n            </template>\n          </popover>\n        </div>\n      </template>\n      <CredentialsInput v-model=\"profile.credentials\" />\n    </input-row>\n\n    <input-row\n      :errors=\"errors.expertise_ids\"\n    >\n      <template #label>\n        Area of Expertise\n        <div>\n          <popover hover arrow>\n            <div class=\"text-xs cursor-pointer text-blue-600\">\n              What is this?\n            </div>\n            <template #content>\n              <div style=\"max-width: 500px\">\n                <h4>What do you mean by <em>Area of Expertise</em>?</h4>\n                <p>\n                  We use this information to determine if the make up of gene and variant expert panels includes the breadth of expertise needed to do it's work.\n                </p>\n                <p>\n                  Please choose the option from list that best describes your area of expertise. If you don't feel any of these options fit, select 'None'.\n                </p>\n              </div>\n            </template>\n          </popover>\n        </div>\n      </template>\n      <ExpertisesInput v-model=\"profile.expertises\" />\n    </input-row>\n\n\n    <input-row\n      v-if=\"canEditAllFields\" v-model=\"profile.biography\"\n      label=\"Biography\"\n      :errors=\"errors.biography\"\n      type=\"large-text\"\n    />\n\n    <input-row v-if=\"canEditAllFields\" label=\"Address\">\n      <AddressInput v-model=\"profile\" :errors=\"errors\" />\n    </input-row>\n\n    <input-row\n      v-if=\"canEditAllFields\" v-model=\"profile.country_id\"\n      label=\"Country\"\n      type=\"select\"\n      :options=\"countries\"\n      :errors=\"errors.country_id\"\n    />\n\n    <input-row\n      v-if=\"canEditAllFields\" v-model=\"profile.phone\"\n      label=\"Phone\"\n      :errors=\"errors.phone\"\n    />\n\n    <input-row v-if=\"canEditAllFields\" label=\"Timezone\" :errors=\"errors.timezone\">\n      <TimezoneSearchSelect v-model=\"profile.timezone\" />\n    </input-row>\n\n    <hr class=\"my-4\">\n\n    <div v-if=\"saving\" class=\"mb-2\">\n      Saving...\n    </div>\n    <button-row\n      v-if=\"!saving\"\n      :submit-text=\"saveButtonText\"\n      :show-cancel=\"allowCancel\"\n      @submitted=\"save\"\n      @canceled=\"cancel()\"\n    />\n  </div>\n</template>\n"],"names":["_sfc_main","ImageCropper","to","blob","url","options","api","rsp","imageBitmap","canvas","ctx","formData","error","isValidationError","_hoisted_1","_hoisted_2","_createElementBlock","_normalizeClass","$data","_createElementVNode","$options","args","_createBlock","_Teleport","_createVNode","_component_modal_dialog","_cache","$event","_withCtx","_component_ImageCropper","_component_input_row","_hoisted_3","_component_button_row","props","__props","emits","__emit","store","useStore","errors","ref","profile","saving","initProfile","c","save","updatedPerson","Person","cancel","canEditAllFields","computed","hasPermission","userIsPerson","watch","countries","i","onMounted"],"mappings":"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"}