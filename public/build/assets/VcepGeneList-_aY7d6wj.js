import{_ as G,p as C,a2 as P,c as u,d as n,f as o,w as d,a as f,i as h,C as H,a8 as ee,b as l,h as x,a0 as R,D as te,r as V,q as A,v as W,x as O,o as Q,e as U,j as S,an as N,aR as j,aS as M,G as Y,aT as re,aU as ne,aV as oe,aW as ie,a4 as se,y as le,F,m as ae}from"./app-xUpSbDwL.js";import{f as de}from"./GroupForm-BMz5HlKv.js";const ue={name:"AttestationGcep",props:{disabled:{type:Boolean,required:!1,default:!1}},emits:["update"],data(){return{errors:{},gci_training:!1}},computed:{group:{get(){return this.$store.getters["groups/currentItemOrNew"]},set(r){this.$store.commit("groups/addItem",r)}},gciTrainingErrors(){const r=this.errors.gci_training||[],e=this.errors.gci_training_date||[];return[...r,...e]},gci_training_comp(){return!!this.group.expert_panel.gci_training_date}},watch:{group:{immediate:!0,handler(r){this.gci_training=!!r.expert_panel.gci_training_date}}},methods:{async save(){try{this.errors={},await C.post(`/api/groups/${this.group.uuid}/application/attestations/gcep`,this.group.expert_panel.attributes)}catch(r){P(r)&&(this.errors=r.response.data.errors)}},emitUpdate(){this.$emit("update")},checkCompleteness(){if(this.group.expert_panel.utilize_gt&&this.group.expert_panel.utilize_gci&&this.group.expert_panel.curations_publicly_available&&this.group.expert_panel.pub_policy_reviewed&&this.group.expert_panel.draft_manuscripts&&this.group.expert_panel.recuration_process_review&&this.group.expert_panel.biocurator_training&&this.group.expert_panel.gci_training_date!==null&&this.group.expert_panel.biocurator_mailing_list&&this.group.expert_panel.gcep_attestation_date===null){this.group.expert_panel.gcep_attestation_date=new Date;return}this.group.expert_panel.gcep_attestation_date=null}}},pe={class:"ml-4 mt-2"},me={class:"ml-4 mt-2"};function ce(r,e,a,i,_,t){const m=f("checkbox"),p=f("input-row"),s=f("publication-policy-link"),v=f("gcep-recuration-process-link"),y=f("training-materials-link");return l(),u("div",null,[e[36]||(e[36]=n("p",null," The Gene Curation Expert Panel (GCEP) leaders(s) will complete the checkbox attestations document below on behalf of the GCEP. ",-1)),n("ul",pe,[n("li",null,[o(p,{errors:_.errors.utilize_gt,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.utilize_gt,"onUpdate:modelValue":[e[0]||(e[0]=g=>t.group.expert_panel.utilize_gt=g),e[1]||(e[1]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[20]||(e[20]=[h(" This GCEP will utilize the ClinGen Gene Tracker for documentation of all precuration information, consistent with the current Lumping and Splitting working group guidance, for gene-disease relationships. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(p,{errors:_.errors.utilize_gci,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.utilize_gci,"onUpdate:modelValue":[e[2]||(e[2]=g=>t.group.expert_panel.utilize_gci=g),e[3]||(e[3]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[21]||(e[21]=[h(" This GCEP will utilize the ClinGen Gene Curation Interface for documentation of all gene-disease validity classifications. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(p,{errors:_.errors.curations_publicly_available,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.curations_publicly_available,"onUpdate:modelValue":[e[4]||(e[4]=g=>t.group.expert_panel.curations_publicly_available=g),e[5]||(e[5]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[22]||(e[22]=[h(" All curations completed by this group will be made publicly available through the ClinGen website immediately upon completion. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(p,{errors:_.errors.pub_policy_reviewed,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.pub_policy_reviewed,"onUpdate:modelValue":[e[6]||(e[6]=g=>t.group.expert_panel.pub_policy_reviewed=g),e[7]||(e[7]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>[e[23]||(e[23]=h(" The ")),o(s),e[24]||(e[24]=h(" has been reviewed and a manuscript concept sheet will be submitted to the NHGRI and ClinGen Steering Committee before the group prepares a publication for submission. "))]),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(p,{errors:_.errors.draft_manuscripts,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.draft_manuscripts,"onUpdate:modelValue":[e[8]||(e[8]=g=>t.group.expert_panel.draft_manuscripts=g),e[9]||(e[9]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[25]||(e[25]=[h(" Draft manuscripts will be submitted to the ClinGen Gene Curation WG for review prior to submission. Email: "),n("a",{href:"mailto:genecuration@clinicalgenome.org"},"genecuration@clinicalgenome.org",-1)])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(p,{errors:_.errors.recuration_process_review,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.recuration_process_review,"onUpdate:modelValue":[e[10]||(e[10]=g=>t.group.expert_panel.recuration_process_review=g),e[11]||(e[11]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>[e[27]||(e[27]=h(" The ClinGen ")),o(v,null,{default:d(()=>e[26]||(e[26]=[h("Gene-Disease Validity Recuration Process")])),_:1}),e[28]||(e[28]=h(" has been reviewed. "))]),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])])]),n("p",null,[e[30]||(e[30]=h(" Biocurators are expected to become familiar with the ClinGen ")),o(y),e[31]||(e[31]=h(" located on ")),o(y,null,{default:d(()=>e[29]||(e[29]=[h("ClinicalGenome.org")])),_:1}),e[32]||(e[32]=h(". Biocurators are requested to join the mailing list for ClinGen Biocurator Working Group, and expected to attend those calls that focus on gene curation SOP and/or framework updates. "))]),n("ul",me,[n("li",null,[o(p,{errors:_.errors.biocurator_training,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.biocurator_training,"onUpdate:modelValue":[e[12]||(e[12]=g=>t.group.expert_panel.biocurator_training=g),e[13]||(e[13]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[33]||(e[33]=[h(" Biocurators have received training and/or there is a plan in place to train any biocurators who have not received all training yet. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(m,{modelValue:_.gci_training,"onUpdate:modelValue":[e[14]||(e[14]=g=>_.gci_training=g),e[15]||(e[15]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[34]||(e[34]=[h(" Biocurators are trained on the use of the Gene Curation Interface (GCI) and/or there is a plan in place to train any biocurators who are not yet trained on the use of the GCI” ")])),_:1},8,["modelValue","disabled"]),H(o(p,{modelValue:t.group.expert_panel.gci_training_date,"onUpdate:modelValue":[e[16]||(e[16]=g=>t.group.expert_panel.gci_training_date=g),e[17]||(e[17]=g=>(t.emitUpdate(),t.checkCompleteness()))],errors:t.gciTrainingErrors,label:"Date Trained",type:"date",class:"ml-6"},null,8,["modelValue","errors"]),[[ee,_.gci_training]])]),n("li",null,[o(p,{errors:_.errors.biocurator_mailing_list,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.biocurator_mailing_list,"onUpdate:modelValue":[e[18]||(e[18]=g=>t.group.expert_panel.biocurator_mailing_list=g),e[19]||(e[19]=g=>(t.emitUpdate(),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[35]||(e[35]=[h(" Biocurators have joined the Biocurator WG mailing list and/or there is a plan in place to have them join mailing list. "),n("br",null,null,-1),h("The calls occur on the 2nd and 4th Thursdays from 12-1pm. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])])])])}const vt=G(ue,[["render",ce]]),ge={name:"NHGRIDataAvailability",props:{disabled:{type:Boolean,required:!1,default:!1}},emits:["update"],data(){return{errors:{}}},computed:{group:{get(){return this.$store.getters["groups/currentItemOrNew"]},set(r){this.$store.commit("groups/addItem",r)}},attestation:{get(){return!!this.group.expert_panel.nhgri_attestation_date},set(r){r?this.group.expert_panel.nhgri_attestation_date=new Date:this.group.expert_panel.nhgri_attestation_date=null,this.$emit("update")}},checkboxLabel(){return this.group.is_vcep?"I understand that once a variant is approved in the VCI it will become publicly available in the Evidence Repository. They should not be held for publication.":"Please check box to confirm your understanding that once a gene is approved in the GCI, the group should utilize the “publish” functionality within the GCI to make the curation publicly available on the ClinGen website (https://clinicalgenome.org/). They should not be held for publication."}},methods:{async save(){if(this.attestation)try{await C.post(`/api/groups/${this.group.uuid}/application/attestations/nhgri`,{attestation:this.attestation})}catch(r){P(r)&&(this.errors=r.response.data.errors)}}}},_e={key:0},be={key:1},he={class:"my-4"},fe={key:2},ve={key:3};function ye(r,e,a,i,_,t){const m=f("vcep-protocol-link"),p=f("checkbox"),s=f("input-row"),v=f("publication-policy-link");return l(),u("div",null,[t.group.is_vcep?(l(),u("p",_e,[e[1]||(e[1]=h(" Curated variants and genes are expected to be approved and posted for the community as soon as possible as described in Section 2.4 of the ")),o(m),e[2]||(e[2]=h(". Note that upon approval, a VCEP must finalize their set of variants for upload to the ClinGen Evidence Repository within 30 days. "))])):x("",!0),t.group.is_gcep?(l(),u("p",be," Curated genes and variants are expected to be approved and posted for the community as soon as possible and should not wait for the publication of a manuscript. ")):x("",!0),n("p",he,[o(s,{label:"",vertical:!0},{default:d(()=>[o(p,{id:"nhgri-checkbox",modelValue:t.attestation,"onUpdate:modelValue":e[0]||(e[0]=y=>t.attestation=y),disabled:a.disabled,label:t.checkboxLabel},null,8,["modelValue","disabled","label"])]),_:1})]),t.group.is_vcep_or_scvcep?(l(),u("p",fe,[e[3]||(e[3]=h(" Please review the ")),o(v),e[4]||(e[4]=h(" and refer to guidance on submissions to a preprint server (e.g. bioRxiv or medRxiv). "))])):x("",!0),t.group.is_gcep?(l(),u("p",ve,e[5]||(e[5]=[n("em",null,"It is expected that, whenever possible, Expert Panel manuscripts will be pre-published (e.g. medRXiv) . If the authors do not anticipate submitting their manuscript to a prepublication resource they must provide a written justification.",-1)]))):x("",!0)])}const yt=G(ge,[["render",ye]]),we={name:"ReanalysisForm",props:{disabled:{type:Boolean,required:!1,default:!1}},emits:["update"],data(){return{errors:{},otherCheckbox:!1}},computed:{group:{get(){return this.$store.getters["groups/currentItemOrNew"]},set(r){this.$store.commit("groups/addItem",r)}}},watch:{otherCheckbox(r){r||(this.group.expert_panel.reanalysis_other=null)}},methods:{async save(){try{this.errors={},await C.post(`/api/groups/${this.group.uuid}/application/attestations/reanalysis`,this.group.expert_panel)}catch(r){P(r)&&(this.errors=r.response.data.errors)}},checkCompleteness(){const r=this.group.expert_panel.reanalysis_conflicting&&this.group.expert_panel.reanalysis_review_lp&&this.group.expert_panel.reanalysis_review_lb,e=this.otherCheckbox&&this.group.expert_panel.reanalysis_other.trim().length>=5;if((r||e)&&this.group.expert_panel.gcep_attestation_date===null){this.group.expert_panel.reanalysis_attestation_date=new Date;return}this.group.expert_panel.reanalysis_attestation_date=null}}},xe={class:"ml-4 mt-2"},ke={key:0,class:"ml-4"},Ve=["disabled"];function Ce(r,e,a,i,_,t){const m=f("checkbox"),p=f("input-row");return l(),u("div",null,[e[15]||(e[15]=n("p",null,[h(" Expert Panels are expected to keep their variant interpretations up-to-date and to expedite the re-review of variants that have a conflicting assertion submitted to ClinVar after the Expert Panel submission. Please check all 3 boxes below to attest that the VCEP will follow the ClinGen-approved schedule described below "),n("strong",null,[n("em",null,"or")]),h(" describe other plans at the bottom of the section. ")],-1)),n("ul",xe,[n("li",null,[o(p,{errors:_.errors.reanalysis_conflicting,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.reanalysis_conflicting,"onUpdate:modelValue":[e[0]||(e[0]=s=>t.group.expert_panel.reanalysis_conflicting=s),e[1]||(e[1]=s=>(r.$emit("update"),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[10]||(e[10]=[h(" VCEPs are expected to reassess any newly submitted conflicting assertion in ClinVar from a one star submitter or above and attempt to resolve or address the conflict within 6 months of being notified about the conflict from ClinGen. Please reach out to the submitter if you need additional information about the conflicting assertion. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(p,{errors:_.errors.reanalysis_review_lp,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.reanalysis_review_lp,"onUpdate:modelValue":[e[2]||(e[2]=s=>t.group.expert_panel.reanalysis_review_lp=s),e[3]||(e[3]=s=>(r.$emit("update"),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[11]||(e[11]=[h(" VCEPs are expected to re-review all LP and VUS classifications made by the EP at least every 2 years to see if new evidence has emerged to re-classify the variants ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(p,{errors:_.errors.reanalysis_review_lb,"hide-label":!0},{default:d(()=>[o(m,{modelValue:t.group.expert_panel.reanalysis_review_lb,"onUpdate:modelValue":[e[4]||(e[4]=s=>t.group.expert_panel.reanalysis_review_lb=s),e[5]||(e[5]=s=>(r.$emit("update"),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[12]||(e[12]=[h(" VCEPs are expected to re-review any LB classifications when new evidence is available or when requested by the public via the ClinGen website. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),n("li",null,[o(p,{errors:_.errors.reanalysis_other,"hide-label":!0},{default:d(()=>[o(m,{modelValue:_.otherCheckbox,"onUpdate:modelValue":[e[6]||(e[6]=s=>_.otherCheckbox=s),e[7]||(e[7]=s=>(r.$emit("update"),t.checkCompleteness()))],disabled:a.disabled},{default:d(()=>e[13]||(e[13]=[h(" Plans differ from the expectations above. ")])),_:1},8,["modelValue","disabled"]),o(R,{name:"slide-fade-down"},{default:d(()=>[_.otherCheckbox?(l(),u("div",ke,[e[14]||(e[14]=n("label",{for:"reanalysis-other-textarea"},"Explain differences:",-1)),H(n("textarea",{id:"reanalysis-other-textarea","onUpdate:modelValue":[e[8]||(e[8]=s=>t.group.expert_panel.reanalysis_other=s),e[9]||(e[9]=s=>(r.$emit("update"),t.checkCompleteness()))],class:"w-full",disabled:a.disabled},null,8,Ve),[[te,t.group.expert_panel.reanalysis_other]])])):x("",!0)]),_:1})]),_:1},8,["errors"])])])])}const wt=G(we,[["render",Ce]]),Ge={name:"GcepGeneList",components:{},props:{editing:{type:Boolean,required:!1,default:!0},readonly:{type:Boolean,required:!1,default:!1}},emits:["saved","canceled","update:editing","geneschanged","update"],setup(r,e){const a=W(),i=V(!1),_=V(null),{errors:t,resetErrors:m}=de(),p=A({get(){return a.getters["groups/currentItemOrNew"]},set(b){a.commit("groups/addItem",b)}}),s=async()=>{if(p.value.uuid){i.value=!0;try{await a.dispatch("groups/getGenes",p.value),_.value=p.value.expert_panel.genes.map(b=>b.gene_symbol).join(", ")}catch(b){a.commit("pushError",b.response.data)}i.value=!1}},v=()=>{e.emit("update:editing",!1),t.value={}},y=()=>{m(),s(),v(),e.emit("canceled")},g=()=>{p.value.expert_panel&&(_.value=p.value.expert_panel.genes?p.value.expertPanel.genes.join(", "):null)},D=async()=>{const b=_.value?_.value.split(/[, \n]/).filter(w=>w!==""):[];try{await C.post(`/api/groups/${p.value.uuid}/expert-panel/genes`,{genes:b}),v(),e.emit("saved"),s()}catch(w){if(P(w)){const T=w.response.data.errors;T.group&&T.group.forEach(k=>{a.pushError(k)});const L=Object.keys(T).map(k=>{const[I,B]=k.split(".");return I==="genes"?B?`Gene #${Number.parseInt(B)+1}, "${b[B]}" wasn't found in our records.  Please confirm it is currently an approved HGNC gene symbol.`:T[k]:`Gene validation error: ${k}`});t.value={genes:L}}}};return O(()=>a.getters["groups/currentItem"],(b,w)=>{b.id&&(!w||b.id!==w.id)&&s()}),Q(()=>{s()}),O(()=>p.value.expert_panel.genes,()=>{}),{group:p,genesAsText:_,loading:i,errors:t,resetErrors:m,hideForm:v,cancel:y,syncGenesAsText:g,save:D}},computed:{canEdit(){return this.hasAnyPermission(["groups-manage",["application-edit",this.group]])}},methods:{showForm(){this.canEdit&&(this.resetErrors(),this.$emit("update:editing",!0))}}},Ee={class:"flex justify-between mb-2"},Ue={key:0},Te={key:1},Ie={key:0,style:{"text-indent":"1rem"}};function Se(r,e,a,i,_,t){const m=f("edit-icon-button"),p=f("input-row");return l(),u("div",null,[n("h4",Ee,[e[3]||(e[3]=h(" Gene List ")),r.hasAnyPermission(["groups-manage",["application-edit",i.group]])&&!a.editing&&!a.readonly?(l(),U(m,{key:0,onClick:t.showForm},null,8,["onClick"])):x("",!0)]),a.editing?(l(),u("div",Ue,[o(p,{modelValue:i.genesAsText,"onUpdate:modelValue":[e[0]||(e[0]=s=>i.genesAsText=s),e[1]||(e[1]=s=>{r.$emit("geneschanged"),r.$emit("update")})],type:"large-text",label:"List the gene symbols for the genes the Expert Panel plans to curate.  Separate genes by commas, spaces, or new lines.",errors:i.errors.genes,placeholder:"ABC, DEF1, BEAN",vertical:""},null,8,["modelValue","errors"])])):(l(),u("div",Te,[i.genesAsText?(l(),u("p",Ie,S(i.genesAsText),1)):(l(),u("div",{key:1,class:"well cursor-pointer",onClick:e[2]||(e[2]=(...s)=>t.showForm&&t.showForm(...s))},S(i.loading?"Loading...":"No genes have been added to the gene list."),1))]))])}const xt=G(Ge,[["render",Se]]),Pe={name:"GroupDescriptionForm",components:{EditIconButton:j,RichTextEditor:N},props:{editing:{type:Boolean,required:!1,default:!0},errors:{type:Object,required:!1,default:()=>({})}},emits:["update:editing","update:group","update"],computed:{group:{get(){return this.$store.getters["groups/currentItem"]||new Y},set(r){this.$store.commit("groups/addItem",r)}},htmlDescription(){return M(this.group.description)}}},De={class:"flex justify-between items-center"},Be={class:"mt-2"},Re={key:0,class:"mt-2"},Ae={key:1,class:"border-2 mt-8 p-2"},Le=["innerHTML"];function Fe(r,e,a,i,_,t){const m=f("EditIconButton"),p=f("RichTextEditor");return l(),u("div",null,[n("header",De,[e[4]||(e[4]=n("h4",null,"Website Summary Description of Group",-1)),r.hasAnyPermission(["groups-manage",["application-edit",t.group]])&&!a.editing?(l(),U(m,{key:0,onClick:e[0]||(e[0]=s=>r.$emit("update:editing",!0))})):x("",!0)]),n("div",Be,[e[5]||(e[5]=n("p",{class:"text-sm"}," This is a description of the group's purpose, goals, and objectives as intended for public display (e.g., at the clinicalgenome.org site). This may be more concise than the full scope of work. ",-1)),o(R,{name:"fade",mode:"out-in"},{default:d(()=>[a.editing?(l(),u("div",Re,[o(p,{modelValue:t.group.description,"onUpdate:modelValue":[e[1]||(e[1]=s=>t.group.description=s),e[2]||(e[2]=s=>r.$emit("update"))]},null,8,["modelValue"])])):(l(),u("div",Ae,[t.group.description?(l(),u("div",{key:0,innerHTML:t.htmlDescription},null,8,Le)):(l(),u("p",{key:1,class:"well cursor-pointer",onClick:e[3]||(e[3]=(...s)=>r.showForm&&r.showForm(...s))}," A website summary description has not yet been provided. "))]))]),_:1})])])}const kt=G(Pe,[["render",Fe]]),Ne={name:"MembershipDescriptionForm",components:{EditIconButton:j,RichTextEditor:N},props:{editing:{type:Boolean,required:!1,default:!1},errors:{type:Object,required:!1,default:()=>({})}},emits:["update:editing","saved","canceled","update"],computed:{group:{get(){return this.$store.getters["groups/currentItemOrNew"]},set(r){this.$store.commit("groups/addItem",r)}},htmlMembershipDescription(){return M(this.group.expert_panel.membership_description)}},methods:{emitUpdate(){this.$emit("update")}}},je={class:"flex justify-between items-center"},Me={class:"mt-4"},qe={key:0,class:"mt-2"},ze={key:1,class:"border-2 mt-8 p-2"},Oe=["innerHTML"];function He(r,e,a,i,_,t){const m=f("EditIconButton"),p=f("RichTextEditor");return l(),u("div",null,[n("header",je,[e[3]||(e[3]=n("h4",null,"Description of Expertise",-1)),r.hasAnyPermission(["groups-manage"],["edit-info",t.group])&&!a.editing?(l(),U(m,{key:0,onClick:e[0]||(e[0]=s=>r.$emit("update:editing",!0))})):x("",!0)]),n("div",Me,[e[4]||(e[4]=n("p",{class:"text-sm"}," Describe the expertise of VCEP members who regularly use the ACMG/AMP guidelines to classify variants and/or review variants during clinical laboratory case sign-out. ",-1)),o(R,{name:"fade",mode:"out-in"},{default:d(()=>[a.editing?(l(),u("div",qe,[o(p,{modelValue:t.group.expert_panel.membership_description,"onUpdate:modelValue":[e[1]||(e[1]=s=>t.group.expert_panel.membership_description=s),t.emitUpdate]},null,8,["modelValue","onUpdate:modelValue"])])):(l(),u("div",ze,[t.group.expert_panel.membership_description?(l(),u("div",{key:0,innerHTML:t.htmlMembershipDescription},null,8,Oe)):(l(),u("p",{key:1,class:"well cursor-pointer",onClick:e[2]||(e[2]=(...s)=>r.showForm&&r.showForm(...s))}," A description of expertise has not yet been provided. "))]))]),_:1})])])}const Vt=G(Ne,[["render",He]]),We={name:"ScopeDescriptionForm",components:{GcepQuickGuideLink:ne,VcepProtocolLink:re,EditIconButton:j,RichTextEditor:N},props:{editing:{type:Boolean,required:!1,default:!0},errors:{type:Object,required:!1,default:()=>({})}},emits:["update:editing","update:group","update"],computed:{group:{get(){return this.$store.getters["groups/currentItem"]||new Y},set(r){this.$store.commit("groups/addItem",r)}},htmlScopeDescription(){return M(this.group.expert_panel.scope_description)}}},Qe={class:"flex justify-between items-center"},Ye={class:"mt-2"},Xe={class:"text-sm"},Je={key:0,class:"mt-2"},Ke={key:1,class:"border-2 mt-8 p-2"},Ze=["innerHTML"];function $e(r,e,a,i,_,t){const m=f("EditIconButton"),p=f("VcepProtocolLink"),s=f("GcepQuickGuideLink"),v=f("RichTextEditor");return l(),u("div",null,[n("header",Qe,[e[4]||(e[4]=n("h4",null,"Description of Scope",-1)),r.hasAnyPermission(["groups-manage",["application-edit",t.group]])&&!a.editing?(l(),U(m,{key:0,onClick:e[0]||(e[0]=y=>r.$emit("update:editing",!0))})):x("",!0)]),n("div",Ye,[n("p",Xe,[e[5]||(e[5]=h(" Describe the scope of work of the Expert Panel including the disease area(s), genes being addressed, and any specific rationale for choosing the condition(s). See the ")),t.group.is_vcep_or_scvcep?(l(),U(p,{key:0})):x("",!0),t.group.is_gcep?(l(),U(s,{key:1})):x("",!0),e[6]||(e[6]=h(" for more information. "))]),o(R,{name:"fade",mode:"out-in"},{default:d(()=>[a.editing?(l(),u("div",Je,[o(v,{modelValue:t.group.expert_panel.scope_description,"onUpdate:modelValue":[e[1]||(e[1]=y=>t.group.expert_panel.scope_description=y),e[2]||(e[2]=y=>r.$emit("update"))]},null,8,["modelValue"])])):(l(),u("div",Ke,[t.group.expert_panel.scope_description?(l(),u("div",{key:0,innerHTML:t.htmlScopeDescription},null,8,Ze)):(l(),u("p",{key:1,class:"well cursor-pointer",onClick:e[3]||(e[3]=(...y)=>r.showForm&&r.showForm(...y))}," A description of scope has not yet been provided. "))]))]),_:1})])])}const Ct=G(We,[["render",$e]]),et={name:"VcepGeneList",components:{GeneSearchSelect:ie,DiseaseSearchSelect:oe},props:{readonly:{type:Boolean,required:!1,default:!1}},emits:["saved","canceled","editing"],setup(r,e){const a=W(),i=V(!1),_=V({gene:{},disease:{}}),t=A(()=>a.getters["groups/currentItemOrNew"]),m=V({gene:null,disease:null}),p=V(!1),s=V({}),v=V([]),y=A(()=>{const c=[...v.value];return c.sort((E,z)=>E.gene_symbol===z.gene_symbol?0:E.gene_symbol>z.gene_symbol?1:-1),c}),g=()=>{m.value={gene:null,disease:null},s.value={}},D=c=>{c.edit=!0},b=c=>{c.removeTimeout&&(clearTimeout(c.removeTimeout),clearInterval(c.removeInterval),c.removeCountdown=10)},w=c=>{delete c.toDelete,delete c.removeInterval,delete c.removeTimeout},T=c=>{b(c),w(c)},L=c=>{_.value=c,i.value=!0},k=()=>{_.value={gene:{},disease:{}},i.value=!1},I=async()=>{if(t.value.uuid){p.value=!0;try{v.value=await C.get(`/api/groups/${t.value.uuid}/expert-panel/genes?with[]=gene&with[]=disease`).then(c=>c.data),t.value.expert_panel.genes=v.value}catch(c){a.commit("pushError",c.response.data)}p.value=!1}},B=async c=>{try{await C.delete(`/api/groups/${t.value.uuid}/expert-panel/genes/${c.id}`),await I(),k()}catch(E){a.commit("pushError",E.response.data)}},q=async()=>{try{m.value.gene!==null&&m.value.disease!==null&&(await C.post(`/api/groups/${t.value.uuid}/expert-panel/genes`,{genes:[{hgnc_id:m.value.gene.hgnc_id,mondo_id:m.value.disease.mondo_id}]}),await I(),g()),s.value={},e.emit("saved")}catch(c){P(c)&&(s.value=c.response.data.errors)}},X=se(q,500),J=async c=>{try{c.hgnc_id=c.gene.hgnc_id,c.mondo_id=c.disease.mondo_id,await C.put(`/api/groups/${t.value.uuid}/expert-panel/genes/${c.id}`,c),await I(),delete c.edit}catch(E){P(E)&&(s.value=E.response.data.errors)}},K=c=>{delete c.edit},Z=()=>{g()},$=A(()=>le(["ep-applications-manage",["application-edit",t.value]])&&!r.readonly);return Q(()=>{I()}),{group:t,genes:v,newGene:m,orderedGenes:y,errors:s,loading:p,updateGene:J,updateCancel:K,save:q,debounceSave:X,cancel:Z,edit:D,remove:B,cancelPendingRemove:T,canEdit:$,showConfirmRemove:i,confirmRemove:L,cancelRemove:k,selectedGene:_}},computed:{selectedGeneSymbol(){return this.selectedGene&&this.selectedGene.gene?this.selectedGene.gene.gene_symbol:"Unknown Gene Symbols"},selectedDiseaseName(){return this.selectedGene&&this.selectedGene.disease?this.selectedGene.disease.name:"Unknown Disease Name"}}},tt={class:"my-2"},rt={key:0,class:"border-none"},nt={key:0,style:{width:"5rem"}},ot={key:0},it={colspan:"4"},st={class:"p-2 text-center font-bold"},lt={key:0},at={key:1},dt={key:1},ut={key:0},pt={key:0},mt=["onClick"],ct=["onClick"],gt={key:0},_t={colspan:"4"};function bt(r,e,a,i,_,t){const m=f("dropdown-item"),p=f("dropdown-menu"),s=f("GeneSearchSelect"),v=f("input-row"),y=f("DiseaseSearchSelect"),g=f("button-row"),D=f("modal-dialog");return l(),u("div",null,[e[10]||(e[10]=n("header",{class:"flex justify-between items-center"},[n("h4",null,"Gene/Disease List")],-1)),n("div",tt,[i.genes?(l(),u("table",rt,[n("thead",null,[n("tr",null,[e[4]||(e[4]=n("th",{style:{"min-width":"10rem"}}," HGNC Symbol ",-1)),e[5]||(e[5]=n("th",{style:{"min-width":"15rem"}}," Disease ",-1)),i.canEdit?(l(),u("th",nt)):x("",!0)])]),o(R,{name:"fade",mode:"out-in"},{default:d(()=>[i.genes.length==0?(l(),u("tbody",ot,[n("tr",null,[n("td",it,[n("div",st,[i.loading?(l(),u("span",lt,"Loading...")):(l(),u("div",at,e[6]||(e[6]=[n("p",null,"There are no gene/disease pairs in the gene list.",-1)])))])])])])):(l(),u("tbody",dt,[(l(!0),u(F,null,ae(i.orderedGenes,b=>(l(),u("tr",{key:b.id},[b.edit?(l(),u(F,{key:1},[n("td",null,[o(v,{label:"",errors:i.errors.hgnc_id,vertical:!0},{default:d(()=>[o(s,{modelValue:b.gene,"onUpdate:modelValue":w=>b.gene=w},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1032,["errors"])]),n("td",null,[o(v,{label:"",errors:i.errors.mondo_id,vertical:!0},{default:d(()=>[o(y,{modelValue:b.disease,"onUpdate:modelValue":w=>b.disease=w},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1032,["errors"])]),n("td",null,[n("button",{class:"btn btn-xs",onClick:w=>i.updateCancel(b)}," Cancel ",8,mt),n("button",{class:"btn blue btn-xs",onClick:w=>i.updateGene(b)}," Save ",8,ct)])],64)):(l(),u(F,{key:0},[n("td",null,S(b.gene_symbol),1),n("td",null,S(b.disease_name),1),i.canEdit?(l(),u("td",ut,[b.edit?x("",!0):(l(),u("div",pt,[b.toDelete?x("",!0):(l(),U(p,{key:0,"hide-cheveron":!0,class:"relative"},{label:d(()=>e[7]||(e[7]=[n("button",{class:"btn btn-xs"}," … ",-1)])),default:d(()=>[o(m,{onClick:w=>i.edit(b)},{default:d(()=>e[8]||(e[8]=[h(" Edit ")])),_:2},1032,["onClick"]),o(m,{onClick:w=>i.confirmRemove(b)},{default:d(()=>e[9]||(e[9]=[h(" Remove ")])),_:2},1032,["onClick"])]),_:2},1024))]))])):x("",!0)],64))]))),128))]))]),_:1}),i.canEdit?(l(),u("tbody",gt,[n("tr",null,[n("td",null,[o(v,{label:"",errors:i.errors["genes.0.hgnc_id"],vertical:!0},{default:d(()=>[o(s,{modelValue:i.newGene.gene,"onUpdate:modelValue":[e[0]||(e[0]=b=>i.newGene.gene=b),i.debounceSave]},null,8,["modelValue","onUpdate:modelValue"])]),_:1},8,["errors"])]),n("td",_t,[o(v,{label:"",errors:i.errors["diseases.0.hgnc_id"],vertical:!0},{default:d(()=>[o(y,{modelValue:i.newGene.disease,"onUpdate:modelValue":[e[1]||(e[1]=b=>i.newGene.disease=b),i.debounceSave]},null,8,["modelValue","onUpdate:modelValue"])]),_:1},8,["errors"])])])])):x("",!0)])):x("",!0)]),o(D,{modelValue:i.showConfirmRemove,"onUpdate:modelValue":e[3]||(e[3]=b=>i.showConfirmRemove=b),title:"Confirm gene/disease pair delete."},{default:d(()=>[n("p",null,"You are about to delete the gene/disease pair "+S(i.selectedGene.gene_symbol)+"/"+S(i.selectedGene.disease_name)+". Are you sure you want to continue?",1),o(g,{"submit-text":"Yes, delete it.","cancel-text":"No, cancel",onSubmitted:e[2]||(e[2]=b=>i.remove(i.selectedGene)),onCanceled:i.cancelRemove},null,8,["onCanceled"])]),_:1},8,["modelValue"])])}const Gt=G(et,[["render",bt]]);export{wt as A,xt as G,Vt as M,Ct as S,Gt as V,kt as a,yt as b,vt as c};
//# sourceMappingURL=VcepGeneList-_aY7d6wj.js.map
