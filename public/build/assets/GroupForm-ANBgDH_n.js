import{r as V,p as w,a2 as x,_ as G,G as v,A as D,c as d,e as _,f as i,h as N,a as f,w as p,i as m,j as y,a0 as P,b as u}from"./app-kcWpDedC.js";const g=V({}),U=V(!1),k=()=>{U.value=!1,g.value={}},F=async({method:e,url:t,data:a,useFormData:o=!1})=>{try{return await w({method:e,url:t,data:a,headers:{"Content-Type":o?"multipart/form-data":"application/json"}}).then(r=>r.data.data)}catch(n){x(n)&&(g.value={...g,...n.response.data.errors})}},S=()=>{g.value={}},O=()=>({errors:g,editing:U,hideForm:k,submitFormData:F,resetErrors:S}),E={name:"GroupForm",emits:["canceled","saved","update"],setup(e,t){const{errors:a,submitFormData:o,resetErrors:n}=O();return{errors:a,submitFormData:o,resetErrors:n}},data(){return{groupTypes:D.groups.types,groupStatuses:D.groups.statuses,newGroup:new v,parents:[]}},computed:{group:{get(){const e=this.$store.getters["groups/currentItem"];return e||this.newGroup},set(e){try{this.$store.commit("groups/addItem",e)}catch(t){console.log(`Error setting group: ${t}`),this.newGroup=e}}},statusOptions(){return Object.values(this.groupStatuses).map(e=>({value:e.id,label:this.titleCase(e.name)}))},typeOptions(){return Object.values(this.groupTypes).map(e=>({value:e.id,label:e.display_name}))},canSetType(){return this.hasPermission("groups-manage")&&!this.group.id},affiliationIdPlaceholder(){return 5e4},cdwgs(){return this.$store.getters["cdwgs/all"]},namesDirty(){return this.group.expert_panel.isDirty("long_base_name")||this.group.expert_panel.isDirty("short_base_name")},affiliationIdDirty(){return this.group.expert_panel.isDirty("affiliation_id")},parentOptions(){const e=[{value:0,label:"None"}],t=this.group.isEp()?a=>a.isCdwg():a=>a.type.can_be_parent;return this.parents.filter(t).sort((a,o)=>a.displayName.localeCompare(o.displayName)).forEach(a=>{e.push({value:a.id,label:a.displayName})}),e}},beforeMount(){this.getParentOptions(),this.$store.dispatch("cdwgs/getAll")},methods:{async save(){this.resetErrors();try{if(this.group.id){await this.updateGroup(),this.$emit("saved");return}const e=await this.createGroup().then(t=>t.data.data);this.$emit("saved"),this.$store.commit("pushSuccess","Group created."),this.$router.push({name:"AddMember",params:{uuid:e.uuid}})}catch(e){throw x(e)&&(this.errors=e.response.data.errors),e}},createGroup(){let{name:e,parent_id:t,group_type_id:a,group_status_id:o}=this.group.attributes;const{short_base_name:n}=this.group.expert_panel;return e===null&&this.group.expert_panel&&(e=this.group.expert_panel.long_base_name),this.$store.dispatch("groups/create",{name:e,parent_id:t,group_type_id:a,group_status_id:o,short_base_name:n})},updateGroup(){const e=[];return e.push(this.saveGroupData()),this.group.expert_panel&&e.push(this.saveEpData()),Promise.all(e)},saveGroupData(){const e=[];return this.group.isDirty("parent_id")&&e.push(this.saveParent()),this.group.isDirty("name")&&e.push(this.saveName()),this.group.isDirty("group_status_id")&&e.push(this.saveStatus()),Promise.all(e)},async saveEpData(){const e=[];if(this.namesDirty){const{long_base_name:t,short_base_name:a}=this.group.expert_panel;e.push(this.submitFormData({method:"put",url:`/api/groups/${this.group.uuid}/expert-panel/name`,data:{long_base_name:t,short_base_name:a}}))}return this.affiliationIdDirty&&e.push(this.submitFormData({method:"put",url:`/api/groups/${this.group.uuid}/expert-panel/affiliation-id`,data:{affiliation_id:this.group.expert_panel.affiliation_id}})),await Promise.all(e)},isDirty(e){return console.log("Not sure isDirty is supposed to be called here..."),this.group.isDirty(e)},saveParent(){return this.submitFormData({method:"put",url:`/api/groups/${this.group.uuid}/parent`,data:{parent_id:this.group.parent_id}})},saveName(){return this.submitFormData({method:"put",url:`/api/groups/${this.group.uuid}/name`,data:{name:this.group.name}})},saveStatus(){return this.submitFormData({method:"put",url:`/api/groups/${this.group.uuid}/status`,data:{status_id:this.group.group_status_id}})},resetData(){this.group.uuid&&this.$store.dispatch("groups/find",this.group.uuid)},cancel(){this.group.uuid&&this.resetData(),this.$emit("canceled")},async getParentOptions(){const e={"where[group_type_id]":[1,2],without:["coordinators","expertPanel"]};this.parents=await w.get("/api/groups",{params:e}).then(t=>t.data.filter(a=>a.id!==this.group.id).map(a=>new v(a)))},emitUpdate(){this.$emit("update")}}},I={key:0},T={key:0},A={key:0},C={key:1,class:"text-gray-400"},B={key:1},j={key:2};function L(e,t,a,o,n,r){const l=f("input-row"),c=f("dictionary-row"),h=f("note");return u(),d("div",null,[r.canSetType?(u(),_(l,{key:0,modelValue:r.group.group_type_id,"onUpdate:modelValue":t[0]||(t[0]=s=>r.group.group_type_id=s),errors:o.errors.group_type_id,type:"select",options:r.typeOptions,label:"Type"},null,8,["modelValue","errors","options"])):(u(),_(c,{key:1,label:"Type"},{default:p(()=>{var s,b;return[m(y((b=(s=r.group)==null?void 0:s.type)==null?void 0:b.display_name),1)]}),_:1})),i(P,{name:"slide-fade-down",mode:"out-in"},{default:p(()=>[r.group.group_type_id>2&&r.group.expert_panel?(u(),d("div",I,[i(l,{modelValue:r.group.expert_panel.long_base_name,"onUpdate:modelValue":[t[1]||(t[1]=s=>r.group.expert_panel.long_base_name=s),r.emitUpdate],label:"Long Base Name",placeholder:"Long base name",errors:o.errors.long_base_name,"input-class":"w-full"},null,8,["modelValue","errors","onUpdate:modelValue"]),i(l,{modelValue:r.group.expert_panel.short_base_name,"onUpdate:modelValue":[t[2]||(t[2]=s=>r.group.expert_panel.short_base_name=s),r.emitUpdate],label:"Short Base Name",placeholder:"Short base name",errors:o.errors.short_base_name,"input-class":"w-full"},null,8,["modelValue","errors","onUpdate:modelValue"]),e.hasAnyPermission(["groups-manage"])?(u(),d("div",T,[i(l,{modelValue:r.group.expert_panel.affiliation_id,"onUpdate:modelValue":[t[3]||(t[3]=s=>r.group.expert_panel.affiliation_id=s),r.emitUpdate],label:"Affiliation ID",placeholder:r.affiliationIdPlaceholder,errors:o.errors.affiliation_id,"input-class":"w-full"},{label:p(()=>[t[8]||(t[8]=m(" Affiliation ID ")),i(h,null,{default:p(()=>t[7]||(t[7]=[m("admin-only")])),_:1})]),_:1},8,["modelValue","placeholder","errors","onUpdate:modelValue"])])):(u(),_(c,{key:1,label:"Affiliation ID"},{default:p(()=>[r.group.expert_panel.affiliation_id?(u(),d("span",A,y(r.group.expert_panel.affiliation_id),1)):(u(),d("span",C,y("Not yet assigend")))]),_:1}))])):(u(),d("div",B,[i(l,{modelValue:r.group.name,"onUpdate:modelValue":[t[4]||(t[4]=s=>r.group.name=s),r.emitUpdate],placeholder:"Name",label:"Name","input-class":"w-full",errors:o.errors.name},null,8,["modelValue","errors","onUpdate:modelValue"])]))]),_:1}),e.hasPermission("groups-manage")?(u(),d("div",j,[i(l,{modelValue:r.group.group_status_id,"onUpdate:modelValue":[t[5]||(t[5]=s=>r.group.group_status_id=s),r.emitUpdate],type:"select",options:r.statusOptions,errors:o.errors.group_status_id},{label:p(()=>[t[10]||(t[10]=m(" Status: ")),i(h,null,{default:p(()=>t[9]||(t[9]=[m("admin-only")])),_:1})]),_:1},8,["modelValue","options","errors","onUpdate:modelValue"]),i(l,{modelValue:r.group.parent_id,"onUpdate:modelValue":[t[6]||(t[6]=s=>r.group.parent_id=s),r.emitUpdate],type:"select",options:r.parentOptions,errors:o.errors.parent_id},{label:p(()=>[t[12]||(t[12]=m(" Parent group: ")),i(h,null,{default:p(()=>t[11]||(t[11]=[m("admin-only")])),_:1})]),_:1},8,["modelValue","options","errors","onUpdate:modelValue"])])):N("",!0)])}const q=G(E,[["render",L]]);export{q as G,g as e,O as f};
//# sourceMappingURL=GroupForm-ANBgDH_n.js.map
