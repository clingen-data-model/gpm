import{_ as T,p as I,a2 as M,c as l,d as r,f as a,w as g,a as _,i as d,C as q,a8 as pe,b as o,h as w,a0 as j,D as te,aN as me,r as G,q as O,v as ge,x as ce,e as U,j as E,a9 as be,a1 as fe,F as he,aQ as ee,an as H,aX as Q,aO as W,G as re,aY as ye,aZ as ve}from"./app-kcWpDedC.js";import{f as _e}from"./GroupForm-ANBgDH_n.js";import{G as xe}from"./SpecificationsSection-h3CvGTsA.js";const we={name:"AttestationGcep",props:{disabled:{type:Boolean,required:!1,default:!1}},emits:["update"],data(){return{errors:{},gci_training:!1}},computed:{group:{get(){return this.$store.getters["groups/currentItemOrNew"]},set(s){this.$store.commit("groups/addItem",s)}},gciTrainingErrors(){const s=this.errors.gci_training||[],e=this.errors.gci_training_date||[];return[...s,...e]},gci_training_comp(){return!!this.group.expert_panel.gci_training_date}},watch:{group:{immediate:!0,handler(s){this.gci_training=!!s.expert_panel.gci_training_date}}},methods:{async save(){try{this.errors={},await I.post(`/api/groups/${this.group.uuid}/application/attestations/gcep`,this.group.expert_panel.attributes)}catch(s){M(s)&&(this.errors=s.response.data.errors)}},emitUpdate(){this.$emit("update")},checkCompleteness(){if(this.group.expert_panel.utilize_gt&&this.group.expert_panel.utilize_gci&&this.group.expert_panel.curations_publicly_available&&this.group.expert_panel.pub_policy_reviewed&&this.group.expert_panel.draft_manuscripts&&this.group.expert_panel.recuration_process_review&&this.group.expert_panel.biocurator_training&&this.group.expert_panel.gci_training_date!==null&&this.group.expert_panel.biocurator_mailing_list&&this.group.expert_panel.gcep_attestation_date===null){this.group.expert_panel.gcep_attestation_date=new Date;return}this.group.expert_panel.gcep_attestation_date=null}}},ke={class:"ml-4 mt-2"},Ce={class:"ml-4 mt-2"};function Ge(s,e,i,n,f,t){const c=_("checkbox"),h=_("input-row"),u=_("publication-policy-link"),b=_("gcep-recuration-process-link"),k=_("training-materials-link");return o(),l("div",null,[e[36]||(e[36]=r("p",null," The Gene Curation Expert Panel (GCEP) leaders(s) will complete the checkbox attestations document below on behalf of the GCEP. ",-1)),r("ul",ke,[r("li",null,[a(h,{errors:f.errors.utilize_gt,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.utilize_gt,"onUpdate:modelValue":[e[0]||(e[0]=m=>t.group.expert_panel.utilize_gt=m),e[1]||(e[1]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[20]||(e[20]=[d(" This GCEP will utilize the ClinGen Gene Tracker for documentation of all precuration information, consistent with the current Lumping and Splitting working group guidance, for gene-disease relationships. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(h,{errors:f.errors.utilize_gci,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.utilize_gci,"onUpdate:modelValue":[e[2]||(e[2]=m=>t.group.expert_panel.utilize_gci=m),e[3]||(e[3]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[21]||(e[21]=[d(" This GCEP will utilize the ClinGen Gene Curation Interface for documentation of all gene-disease validity classifications. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(h,{errors:f.errors.curations_publicly_available,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.curations_publicly_available,"onUpdate:modelValue":[e[4]||(e[4]=m=>t.group.expert_panel.curations_publicly_available=m),e[5]||(e[5]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[22]||(e[22]=[d(" All curations completed by this group will be made publicly available through the ClinGen website immediately upon completion. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(h,{errors:f.errors.pub_policy_reviewed,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.pub_policy_reviewed,"onUpdate:modelValue":[e[6]||(e[6]=m=>t.group.expert_panel.pub_policy_reviewed=m),e[7]||(e[7]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>[e[23]||(e[23]=d(" The ")),a(u),e[24]||(e[24]=d(" has been reviewed and a manuscript concept sheet will be submitted to the NHGRI and ClinGen Steering Committee before the group prepares a publication for submission. "))]),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(h,{errors:f.errors.draft_manuscripts,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.draft_manuscripts,"onUpdate:modelValue":[e[8]||(e[8]=m=>t.group.expert_panel.draft_manuscripts=m),e[9]||(e[9]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[25]||(e[25]=[d(" Draft manuscripts will be submitted to the ClinGen Gene Curation WG for review prior to submission. Email: "),r("a",{href:"mailto:genecuration@clinicalgenome.org"},"genecuration@clinicalgenome.org",-1)])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(h,{errors:f.errors.recuration_process_review,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.recuration_process_review,"onUpdate:modelValue":[e[10]||(e[10]=m=>t.group.expert_panel.recuration_process_review=m),e[11]||(e[11]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>[e[27]||(e[27]=d(" The ClinGen ")),a(b,null,{default:g(()=>e[26]||(e[26]=[d("Gene-Disease Validity Recuration Process")])),_:1}),e[28]||(e[28]=d(" has been reviewed. "))]),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])])]),r("p",null,[e[30]||(e[30]=d(" Biocurators are expected to become familiar with the ClinGen ")),a(k),e[31]||(e[31]=d(" located on ")),a(k,null,{default:g(()=>e[29]||(e[29]=[d("ClinicalGenome.org")])),_:1}),e[32]||(e[32]=d(". Biocurators are requested to join the mailing list for ClinGen Biocurator Working Group, and expected to attend those calls that focus on gene curation SOP and/or framework updates. "))]),r("ul",Ce,[r("li",null,[a(h,{errors:f.errors.biocurator_training,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.biocurator_training,"onUpdate:modelValue":[e[12]||(e[12]=m=>t.group.expert_panel.biocurator_training=m),e[13]||(e[13]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[33]||(e[33]=[d(" Biocurators have received training and/or there is a plan in place to train any biocurators who have not received all training yet. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(c,{modelValue:f.gci_training,"onUpdate:modelValue":[e[14]||(e[14]=m=>f.gci_training=m),e[15]||(e[15]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[34]||(e[34]=[d(" Biocurators are trained on the use of the Gene Curation Interface (GCI) and/or there is a plan in place to train any biocurators who are not yet trained on the use of the GCI” ")])),_:1},8,["modelValue","disabled"]),q(a(h,{modelValue:t.group.expert_panel.gci_training_date,"onUpdate:modelValue":[e[16]||(e[16]=m=>t.group.expert_panel.gci_training_date=m),e[17]||(e[17]=m=>(t.emitUpdate(),t.checkCompleteness()))],errors:t.gciTrainingErrors,label:"Date Trained",type:"date",class:"ml-6"},null,8,["modelValue","errors"]),[[pe,f.gci_training]])]),r("li",null,[a(h,{errors:f.errors.biocurator_mailing_list,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.biocurator_mailing_list,"onUpdate:modelValue":[e[18]||(e[18]=m=>t.group.expert_panel.biocurator_mailing_list=m),e[19]||(e[19]=m=>(t.emitUpdate(),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[35]||(e[35]=[d(" Biocurators have joined the Biocurator WG mailing list and/or there is a plan in place to have them join mailing list. "),r("br",null,null,-1),d("The calls occur on the 2nd and 4th Thursdays from 12-1pm. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])])])])}const zt=T(we,[["render",Ge]]),Ve={name:"NHGRIDataAvailability",props:{disabled:{type:Boolean,required:!1,default:!1}},emits:["update"],data(){return{errors:{}}},computed:{group:{get(){return this.$store.getters["groups/currentItemOrNew"]},set(s){this.$store.commit("groups/addItem",s)}},attestation:{get(){return!!this.group.expert_panel.nhgri_attestation_date},set(s){s?this.group.expert_panel.nhgri_attestation_date=new Date:this.group.expert_panel.nhgri_attestation_date=null,this.$emit("update")}},checkboxLabel(){return this.group.is_vcep?"I understand that once a variant is approved in the VCI it will become publicly available in the Evidence Repository. They should not be held for publication.":"Please check box to confirm your understanding that once a gene is approved in the GCI, the group should utilize the “publish” functionality within the GCI to make the curation publicly available on the ClinGen website (https://clinicalgenome.org/). They should not be held for publication."}},methods:{async save(){if(this.attestation)try{await I.post(`/api/groups/${this.group.uuid}/application/attestations/nhgri`,{attestation:this.attestation})}catch(s){M(s)&&(this.errors=s.response.data.errors)}}}},Ee={key:0},Be={key:1},Pe={class:"my-4"},Ae={key:2},Te={key:3};function Ie(s,e,i,n,f,t){const c=_("vcep-protocol-link"),h=_("checkbox"),u=_("input-row"),b=_("publication-policy-link");return o(),l("div",null,[t.group.is_vcep?(o(),l("p",Ee,[e[1]||(e[1]=d(" Curated variants and genes are expected to be approved and posted for the community as soon as possible as described in Section 2.4 of the ")),a(c),e[2]||(e[2]=d(". Note that upon approval, a VCEP must finalize their set of variants for upload to the ClinGen Evidence Repository within 30 days. "))])):w("",!0),t.group.is_gcep?(o(),l("p",Be," Curated genes and variants are expected to be approved and posted for the community as soon as possible and should not wait for the publication of a manuscript. ")):w("",!0),r("p",Pe,[a(u,{label:"",vertical:!0},{default:g(()=>[a(h,{id:"nhgri-checkbox",modelValue:t.attestation,"onUpdate:modelValue":e[0]||(e[0]=k=>t.attestation=k),disabled:i.disabled,label:t.checkboxLabel},null,8,["modelValue","disabled","label"])]),_:1})]),t.group.is_vcep_or_scvcep?(o(),l("p",Ae,[e[3]||(e[3]=d(" Please review the ")),a(b),e[4]||(e[4]=d(" and refer to guidance on submissions to a preprint server (e.g. bioRxiv or medRxiv). "))])):w("",!0),t.group.is_gcep?(o(),l("p",Te,e[5]||(e[5]=[r("em",null,"It is expected that, whenever possible, Expert Panel manuscripts will be pre-published (e.g. medRXiv) . If the authors do not anticipate submitting their manuscript to a prepublication resource they must provide a written justification.",-1)]))):w("",!0)])}const Ot=T(Ve,[["render",Ie]]),Ue={name:"ReanalysisForm",props:{disabled:{type:Boolean,required:!1,default:!1}},emits:["update"],data(){return{errors:{},otherCheckbox:!1}},computed:{group:{get(){return this.$store.getters["groups/currentItemOrNew"]},set(s){this.$store.commit("groups/addItem",s)}}},watch:{otherCheckbox(s){s||(this.group.expert_panel.reanalysis_other=null)}},methods:{async save(){try{this.errors={},await I.post(`/api/groups/${this.group.uuid}/application/attestations/reanalysis`,this.group.expert_panel)}catch(s){M(s)&&(this.errors=s.response.data.errors)}},checkCompleteness(){const s=this.group.expert_panel.reanalysis_conflicting&&this.group.expert_panel.reanalysis_review_lp&&this.group.expert_panel.reanalysis_review_lb,e=this.otherCheckbox&&this.group.expert_panel.reanalysis_other.trim().length>=5;if((s||e)&&this.group.expert_panel.gcep_attestation_date===null){this.group.expert_panel.reanalysis_attestation_date=new Date;return}this.group.expert_panel.reanalysis_attestation_date=null}}},Re={class:"ml-4 mt-2"},Se={key:0,class:"ml-4"},De=["disabled"];function Fe(s,e,i,n,f,t){const c=_("checkbox"),h=_("input-row");return o(),l("div",null,[e[15]||(e[15]=r("p",null,[d(" Expert Panels are expected to keep their variant interpretations up-to-date and to expedite the re-review of variants that have a conflicting assertion submitted to ClinVar after the Expert Panel submission. Please check all 3 boxes below to attest that the VCEP will follow the ClinGen-approved schedule described below "),r("strong",null,[r("em",null,"or")]),d(" describe other plans at the bottom of the section. ")],-1)),r("ul",Re,[r("li",null,[a(h,{errors:f.errors.reanalysis_conflicting,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.reanalysis_conflicting,"onUpdate:modelValue":[e[0]||(e[0]=u=>t.group.expert_panel.reanalysis_conflicting=u),e[1]||(e[1]=u=>(s.$emit("update"),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[10]||(e[10]=[d(" VCEPs are expected to reassess any newly submitted conflicting assertion in ClinVar from a one star submitter or above and attempt to resolve or address the conflict within 6 months of being notified about the conflict from ClinGen. Please reach out to the submitter if you need additional information about the conflicting assertion. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(h,{errors:f.errors.reanalysis_review_lp,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.reanalysis_review_lp,"onUpdate:modelValue":[e[2]||(e[2]=u=>t.group.expert_panel.reanalysis_review_lp=u),e[3]||(e[3]=u=>(s.$emit("update"),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[11]||(e[11]=[d(" VCEPs are expected to re-review all LP and VUS classifications made by the EP at least every 2 years to see if new evidence has emerged to re-classify the variants ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(h,{errors:f.errors.reanalysis_review_lb,"hide-label":!0},{default:g(()=>[a(c,{modelValue:t.group.expert_panel.reanalysis_review_lb,"onUpdate:modelValue":[e[4]||(e[4]=u=>t.group.expert_panel.reanalysis_review_lb=u),e[5]||(e[5]=u=>(s.$emit("update"),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[12]||(e[12]=[d(" VCEPs are expected to re-review any LB classifications when new evidence is available or when requested by the public via the ClinGen website. ")])),_:1},8,["modelValue","disabled"])]),_:1},8,["errors"])]),r("li",null,[a(h,{errors:f.errors.reanalysis_other,"hide-label":!0},{default:g(()=>[a(c,{modelValue:f.otherCheckbox,"onUpdate:modelValue":[e[6]||(e[6]=u=>f.otherCheckbox=u),e[7]||(e[7]=u=>(s.$emit("update"),t.checkCompleteness()))],disabled:i.disabled},{default:g(()=>e[13]||(e[13]=[d(" Plans differ from the expectations above. ")])),_:1},8,["modelValue","disabled"]),a(j,{name:"slide-fade-down"},{default:g(()=>[f.otherCheckbox?(o(),l("div",Se,[e[14]||(e[14]=r("label",{for:"reanalysis-other-textarea"},"Explain differences:",-1)),q(r("textarea",{id:"reanalysis-other-textarea","onUpdate:modelValue":[e[8]||(e[8]=u=>t.group.expert_panel.reanalysis_other=u),e[9]||(e[9]=u=>(s.$emit("update"),t.checkCompleteness()))],class:"w-full",disabled:i.disabled},null,8,De),[[te,t.group.expert_panel.reanalysis_other]])])):w("",!0)]),_:1})]),_:1},8,["errors"])])])])}const qt=T(Ue,[["render",Fe]]),Me={name:"GcepGeneList",components:{GeneCurationStatus:xe,GeneSearchSelect:me},props:{editing:{type:Boolean,required:!1,default:!0},readonly:{type:Boolean,required:!1,default:!1}},emits:["saved","canceled","update:editing","geneschanged","update"],setup(s,e){const i=ge(),n=G(!1),f=G(null),t=G([]),c=G(null),h=G(0),u=G(!1),b=G([]),k=G(!1),m=G(""),N=G(null),L=G(!1),{errors:K,resetErrors:X}=_e(),P=O({get(){return i.getters["groups/currentItemOrNew"]},set(v){i.commit("groups/addItem",v)}}),se=async()=>{var v,x;if(c.value){u.value=!0;try{const p={hgnc_id:c.value.hgnc_id,gene_symbol:c.value.gene_symbol??c.value.symbol};await I.post(`/api/groups/${P.value.uuid}/expert-panel/genes`,{genes:[p]}),await R(),e.emit("saved"),i.commit("pushSuccess",`Added ${p.gene_symbol}`)}catch(p){const y=p==null?void 0:p.response;if((y==null?void 0:y.status)===422&&((v=y.data)!=null&&v.errors)){const V=Object.values(y.data.errors).flat();i.commit("pushError",V.join(`
`))}else i.commit("pushError",((x=y==null?void 0:y.data)==null?void 0:x.message)||`Failed to add ${payloadItem.gene_symbol}`)}finally{c.value=null,await ee(),h.value++,u.value=!1}}},R=async()=>{var v,x;if(P.value.uuid&&!n.value){n.value=!0;try{await i.dispatch("groups/getGenes",P.value),f.value=P.value.expert_panel.genes.map(p=>p.gene_symbol).join(", "),t.value=P.value.expert_panel.genes}catch(p){let y="An unexpected error occurred.";p.response?typeof p.response.data=="string"?y=p.response.data:(v=p.response.data)!=null&&v.message?y=p.response.data.message:Array.isArray((x=p.response.data)==null?void 0:x.errors)?y=p.response.data.errors.join(", "):typeof p.response.data=="object"&&(y=JSON.stringify(p.response.data)):p.message&&(y=p.message),i.commit("pushError",y)}n.value=!1}},Y=()=>{e.emit("update:editing",!1),K.value={}},ne=()=>{X(),R(),Y(),e.emit("canceled")};function ie(){k.value=!0,ee(()=>N.value&&N.value.focus())}function oe(){k.value=!1,m.value="",b.value=[]}const ae=O(()=>{const v=Array.isArray(t.value)?t.value:[];return new Set(v.map(x=>String((x==null?void 0:x.gene_symbol)??"").toUpperCase()).filter(Boolean))}),D=G(new Map),F=G([]);async function le(){var x;const v=(m.value||"").split(/[, \n\t]+/).map(p=>p.trim()).filter(Boolean);if(v.length===0){i.commit("pushError","Please paste at least one gene symbol separated by commas.");return}L.value=!0;try{F.value=[...new Set(v.map(B=>B.toUpperCase()))];const p=await I.post("/api/genes/availability",{genes:F.value.join(",")}),y=Array.isArray(p.data)?p.data:((x=p.data)==null?void 0:x.data)||[],V=new Map;for(const B of y){const A=String(B.gene_symbol??"").toUpperCase();A&&V.set(A,B)}D.value=V,b.value=y}catch(p){i.commit("pushError","Failed to review pasted genes."),console.error(p)}finally{L.value=!1}}const J=O(()=>{const v=[],x=[],p=[],y=ae.value;for(const V of F.value){const B=y.has(V),A=D.value.has(V);B?v.push(V):A?p.push(V):x.push(V)}return{ready:p,already:v,notFound:x}}),z=G(!1);async function de(){var V,B,A,Z;const v=J.value.ready;if(!v.length)return;const x=v.map(C=>{const S=D.value.get(C)||{};return{hgnc_id:S.hgnc_id??null,gene_symbol:S.gene_symbol??C}}),p=x.filter(C=>!C.hgnc_id),y=x.filter(C=>C.hgnc_id);if(!y.length){i.commit("pushError","No addable genes were found (missing HGNC IDs).");return}p.length&&i.commit("pushError",`Some genes are missing HGNC IDs and were skipped: ${p.map(C=>C.gene_symbol).join(", ")}`),z.value=!0;try{await I.post(`/api/groups/${P.value.uuid}/expert-panel/genes`,{genes:y}),i.commit("pushSuccess",`Added ${y.length} gene${y.length>1?"s":""}.`),await R(),k.value=!1,b.value=[],m.value="",D.value=new Map,F.value=[]}catch(C){if(M(C)){const S=((B=(V=C.response)==null?void 0:V.data)==null?void 0:B.errors)||{},ue=Object.keys(S).map($=>`${$}: ${[].concat(S[$]).join(", ")}`);i.commit("pushError",ue.join(`
`)||"Validation failed while adding genes.")}else i.commit("pushError",((Z=(A=C==null?void 0:C.response)==null?void 0:A.data)==null?void 0:Z.message)||"Failed to add genes.")}finally{z.value=!1}}return ce(()=>{var v;return(v=P.value)==null?void 0:v.uuid},(v,x)=>{var p;v&&(v===x&&((p=t.value)!=null&&p.length)||R())},{immediate:!0}),{group:P,genesAsText:f,loading:n,errors:K,resetErrors:X,hideForm:Y,cancel:ne,geneCheckResults:t,selectedGene:c,adding:u,addGene:se,onChildChange:async()=>{await R(),e.emit("geneschanged"),e.emit("update")},selectKey:h,showPasteModal:k,pasteText:m,pasteArea:N,openPasteModal:ie,closePasteModal:oe,onReviewClick:le,reviewing:L,bulkCheckResults:b,reviewBuckets:J,submitBulkFromReviewUI:de,submittingBulk:z}},computed:{canEdit(){return this.hasAnyPermission(["groups-manage",["application-edit",this.group]])}},methods:{showForm(){this.canEdit&&(this.resetErrors(),this.$emit("update:editing",!0))}}},je={class:"flex justify-between mb-2"},Ne={key:0,class:"mb-2"},Le={key:2,class:"border rounded bg-gray-50 p-4 mb-4"},ze={class:"flex items-center gap-2"},Oe=["disabled"],qe={key:3},He={class:"w-[min(52rem,92vw)] bg-white rounded-lg shadow-xl"},Qe={class:"flex items-center justify-between border-b px-4 py-3"},We={class:"px-4 py-4"},Ke={class:"flex justify-end gap-2 border-t px-4 py-3"},Xe=["disabled"],Ye=["disabled"],Je={key:0,class:"px-4 py-3"},Ze={class:"flex flex-wrap gap-2 mb-3"},$e={class:"inline-flex items-center gap-2 rounded-full border px-3 py-1 text-sm"},et={class:"font-semibold"},tt={class:"inline-flex items-center gap-2 rounded-full border px-3 py-1 text-sm"},rt={class:"font-semibold"},st={class:"inline-flex items-center gap-2 rounded-full border px-3 py-1 text-sm"},nt={class:"font-semibold"},it={class:"space-y-2 text-sm"},ot={key:0,class:"text-gray-500"},at={key:1},lt={key:0,class:"text-gray-500"},dt={key:1},ut={key:0,class:"text-gray-500"},pt={key:1};function mt(s,e,i,n,f,t){const c=_("edit-icon-button"),h=_("GeneSearchSelect"),u=_("GeneCurationStatus");return o(),l(he,null,[r("div",null,[r("h4",je,[e[10]||(e[10]=d(" Gene List ")),s.hasAnyPermission(["groups-manage",["application-edit",n.group]])&&!i.editing&&!i.readonly?(o(),U(c,{key:0,onClick:t.showForm},null,8,["onClick"])):w("",!0)]),n.genesAsText!=""?(o(),l("div",Ne,E(n.genesAsText),1)):(o(),l("div",{key:1,class:"well cursor-pointer mb-2",onClick:e[0]||(e[0]=(...b)=>t.showForm&&t.showForm(...b))},E(n.loading?"Loading...":"No genes have been added to the gene list."),1)),i.editing&&!i.readonly?(o(),l("div",Le,[e[12]||(e[12]=r("label",{class:"block text-sm font-semibold mb-2"},"Add gene",-1)),r("div",ze,[(o(),U(h,{modelValue:n.selectedGene,"onUpdate:modelValue":e[1]||(e[1]=b=>n.selectedGene=b),placeholder:"Search gene by HGNC symbol…",class:"w-full max-w-xl",key:n.selectKey},null,8,["modelValue"])),r("button",{type:"button",class:"rounded bg-blue-600 text-white px-3 py-1.5 text-sm disabled:opacity-50",disabled:!n.selectedGene||n.adding,onClick:e[2]||(e[2]=(...b)=>n.addGene&&n.addGene(...b))},E(n.adding?"Adding…":"Add"),9,Oe),e[11]||(e[11]=d("   OR   ")),r("button",{type:"button",class:"rounded border border-gray-300 px-3 py-1.5 text-sm hover:bg-gray-100",onClick:e[3]||(e[3]=(...b)=>n.openPasteModal&&n.openPasteModal(...b))},"Bulk paste genes")])])):w("",!0),n.geneCheckResults.length?(o(),l("div",qe,[a(u,{genes:n.geneCheckResults,groupID:n.group.uuid,editing:i.editing,readonly:i.readonly,onRemoved:n.onChildChange},null,8,["genes","groupID","editing","readonly","onRemoved"])])):w("",!0)]),(o(),U(fe,{to:"body"},[n.showPasteModal?(o(),l("div",{key:0,class:"fixed inset-0 z-[1000] flex items-center justify-center bg-black/50",onClick:e[9]||(e[9]=be((...b)=>n.closePasteModal&&n.closePasteModal(...b),["self"]))},[r("div",He,[r("div",Qe,[e[13]||(e[13]=r("h3",{class:"text-base font-semibold"},"Paste genes",-1)),r("button",{class:"text-xl leading-none px-2 py-1","aria-label":"Close",onClick:e[4]||(e[4]=(...b)=>n.closePasteModal&&n.closePasteModal(...b))},"×")]),r("div",We,[e[14]||(e[14]=r("p",{class:"text-sm text-gray-600 mb-2"}," Enter gene symbols separated by commas or spaces. ",-1)),q(r("textarea",{ref:"pasteArea","onUpdate:modelValue":e[5]||(e[5]=b=>n.pasteText=b),class:"w-full min-h-[260px] border rounded-md p-3 font-mono text-sm outline-none focus:ring focus:ring-blue-200",placeholder:"BRCA1 BRCA2 CFTR"},null,512),[[te,n.pasteText]])]),r("div",Ke,[r("button",{class:"rounded border border-gray-300 px-3 py-1.5 text-sm hover:bg-gray-100",onClick:e[6]||(e[6]=(...b)=>n.closePasteModal&&n.closePasteModal(...b))},"Cancel"),r("button",{class:"rounded bg-blue-600 text-white px-3 py-1.5 text-sm disabled:opacity-50",disabled:!n.pasteText.trim()||n.reviewing,onClick:e[7]||(e[7]=(...b)=>n.onReviewClick&&n.onReviewClick(...b))},E(n.reviewing?"Reviewing…":"Review"),9,Xe),r("button",{class:"rounded bg-green-600 text-white px-3 py-1.5 text-sm disabled:opacity-50",disabled:n.reviewBuckets.ready.length===0||n.submittingBulk,onClick:e[8]||(e[8]=(...b)=>n.submitBulkFromReviewUI&&n.submitBulkFromReviewUI(...b)),title:"Add only genes that exist in GT and aren’t already in this list"},E(n.submittingBulk?"Adding…":`Add ${n.reviewBuckets.ready.length} gene${n.reviewBuckets.ready.length!==1?"s":""}`),9,Ye)]),n.bulkCheckResults.length?(o(),l("div",Je,[r("div",Ze,[r("span",$e,[e[15]||(e[15]=d(" Ready to add ")),r("span",et,E(n.reviewBuckets.ready.length),1)]),r("span",tt,[e[16]||(e[16]=d(" Already in list ")),r("span",rt,E(n.reviewBuckets.already.length),1)]),r("span",st,[e[17]||(e[17]=d(" Not found in GT ")),r("span",nt,E(n.reviewBuckets.notFound.length),1)])]),r("div",it,[r("div",null,[e[18]||(e[18]=r("span",{class:"font-semibold"},"Ready to add: ",-1)),n.reviewBuckets.ready.length?(o(),l("span",at,E(n.reviewBuckets.ready.join(", ")),1)):(o(),l("span",ot," — "))]),r("div",null,[e[19]||(e[19]=r("span",{class:"font-semibold"},"Already in list: ",-1)),n.reviewBuckets.already.length?(o(),l("span",dt,E(n.reviewBuckets.already.join(", ")),1)):(o(),l("span",lt," — "))]),r("div",null,[e[20]||(e[20]=r("span",{class:"font-semibold"},"Not found in GT: ",-1)),n.reviewBuckets.notFound.length?(o(),l("span",pt,E(n.reviewBuckets.notFound.join(", ")),1)):(o(),l("span",ut," — "))])])])):w("",!0)])])):w("",!0)]))],64)}const Ht=T(Me,[["render",mt]]),gt={name:"GroupDescriptionForm",components:{EditIconButton:Q,RichTextEditor:H},props:{editing:{type:Boolean,required:!1,default:!0},errors:{type:Object,required:!1,default:()=>({})}},emits:["update:editing","update:group","update"],computed:{group:{get(){return this.$store.getters["groups/currentItem"]||new re},set(s){this.$store.commit("groups/addItem",s)}},htmlDescription(){return W(this.group.description)}}},ct={class:"flex justify-between items-center"},bt={class:"mt-2"},ft={key:0,class:"mt-2"},ht={key:1,class:"border-2 mt-8 p-2"},yt=["innerHTML"];function vt(s,e,i,n,f,t){const c=_("EditIconButton"),h=_("RichTextEditor");return o(),l("div",null,[r("header",ct,[e[4]||(e[4]=r("h4",null,"Website Summary Description of Group",-1)),s.hasAnyPermission(["groups-manage",["application-edit",t.group]])&&!i.editing?(o(),U(c,{key:0,onClick:e[0]||(e[0]=u=>s.$emit("update:editing",!0))})):w("",!0)]),r("div",bt,[e[5]||(e[5]=r("p",{class:"text-sm"}," This is a description of the group's purpose, goals, and objectives as intended for public display (e.g., at the clinicalgenome.org site). This may be more concise than the full scope of work. ",-1)),a(j,{name:"fade",mode:"out-in"},{default:g(()=>[i.editing?(o(),l("div",ft,[a(h,{modelValue:t.group.description,"onUpdate:modelValue":[e[1]||(e[1]=u=>t.group.description=u),e[2]||(e[2]=u=>s.$emit("update"))]},null,8,["modelValue"])])):(o(),l("div",ht,[t.group.description?(o(),l("div",{key:0,innerHTML:t.htmlDescription},null,8,yt)):(o(),l("p",{key:1,class:"well cursor-pointer",onClick:e[3]||(e[3]=(...u)=>s.showForm&&s.showForm(...u))}," A website summary description has not yet been provided. "))]))]),_:1})])])}const Qt=T(gt,[["render",vt]]),_t={name:"MembershipDescriptionForm",components:{EditIconButton:Q,RichTextEditor:H},props:{editing:{type:Boolean,required:!1,default:!1},errors:{type:Object,required:!1,default:()=>({})}},emits:["update:editing","saved","canceled","update"],computed:{group:{get(){return this.$store.getters["groups/currentItemOrNew"]},set(s){this.$store.commit("groups/addItem",s)}},htmlMembershipDescription(){return W(this.group.expert_panel.membership_description)}},methods:{emitUpdate(){this.$emit("update")}}},xt={class:"flex justify-between items-center"},wt={class:"mt-4"},kt={key:0,class:"mt-2"},Ct={key:1,class:"border-2 mt-8 p-2"},Gt=["innerHTML"];function Vt(s,e,i,n,f,t){const c=_("EditIconButton"),h=_("RichTextEditor");return o(),l("div",null,[r("header",xt,[e[3]||(e[3]=r("h4",null,"Description of Expertise",-1)),s.hasAnyPermission(["groups-manage"],["edit-info",t.group])&&!i.editing?(o(),U(c,{key:0,onClick:e[0]||(e[0]=u=>s.$emit("update:editing",!0))})):w("",!0)]),r("div",wt,[e[4]||(e[4]=r("p",{class:"text-sm"}," Describe the expertise of VCEP members who regularly use the ACMG/AMP guidelines to classify variants and/or review variants during clinical laboratory case sign-out. ",-1)),a(j,{name:"fade",mode:"out-in"},{default:g(()=>[i.editing?(o(),l("div",kt,[a(h,{modelValue:t.group.expert_panel.membership_description,"onUpdate:modelValue":[e[1]||(e[1]=u=>t.group.expert_panel.membership_description=u),t.emitUpdate]},null,8,["modelValue","onUpdate:modelValue"])])):(o(),l("div",Ct,[t.group.expert_panel.membership_description?(o(),l("div",{key:0,innerHTML:t.htmlMembershipDescription},null,8,Gt)):(o(),l("p",{key:1,class:"well cursor-pointer",onClick:e[2]||(e[2]=(...u)=>s.showForm&&s.showForm(...u))}," A description of expertise has not yet been provided. "))]))]),_:1})])])}const Wt=T(_t,[["render",Vt]]),Et={name:"ScopeDescriptionForm",components:{GcepQuickGuideLink:ve,VcepProtocolLink:ye,EditIconButton:Q,RichTextEditor:H},props:{editing:{type:Boolean,required:!1,default:!0},errors:{type:Object,required:!1,default:()=>({})}},emits:["update:editing","update:group","update"],computed:{group:{get(){return this.$store.getters["groups/currentItem"]||new re},set(s){this.$store.commit("groups/addItem",s)}},htmlScopeDescription(){return W(this.group.expert_panel.scope_description)},expertPanel(){var s;return((s=this.group)==null?void 0:s.expert_panel)||{}},genes(){var e;const s=(e=this.expertPanel)==null?void 0:e.genes;return Array.isArray(s)?s:[]},curatedGenesCount(){return this.genes.reduce((s,e)=>s+(Array.isArray(e.details)&&e.details.length>0?1:0),0)}}},Bt={class:"flex justify-between items-center"},Pt={class:"mt-2 text-sm"},At={key:0},Tt={key:1},It={class:"list-disc list-inside mt-2"},Ut={key:2,role:"note",class:"mt-3 border-l-4 border-amber-400 bg-amber-50 px-3 py-2 text-sm text-amber-900 rounded-md dark:border-amber-400 dark:bg-amber-900/20 dark:text-amber-100"},Rt={key:0,class:"mt-2"},St={key:1,class:"border-2 mt-8 p-2"},Dt=["innerHTML"];function Ft(s,e,i,n,f,t){const c=_("EditIconButton"),h=_("VcepProtocolLink"),u=_("GcepQuickGuideLink"),b=_("RichTextEditor");return o(),l("div",null,[r("header",Bt,[e[4]||(e[4]=r("h4",null,"Description of Scope",-1)),s.hasAnyPermission(["groups-manage",["application-edit",t.group]])&&!i.editing?(o(),U(c,{key:0,onClick:e[0]||(e[0]=k=>s.$emit("update:editing",!0))})):w("",!0)]),r("div",Pt,[t.group.is_vcep_or_scvcep?(o(),l("p",At,[e[5]||(e[5]=d(" Describe the scope of work of the Expert Panel including the disease area(s), genes being addressed, and any specific rationale for choosing the condition(s). See the ")),a(h),e[6]||(e[6]=d(" for more information. "))])):w("",!0),t.group.is_gcep?(o(),l("div",Tt,[e[13]||(e[13]=d(" Describe the scope of work of the expert panel including the following: ")),r("ul",It,[e[9]||(e[9]=r("li",null,"Describe the disease area of focus",-1)),e[10]||(e[10]=r("li",null,"Indicate why curation efforts would benefit this disease area",-1)),e[11]||(e[11]=r("li",null,"Indicate how the gene list will be prioritized",-1)),e[12]||(e[12]=r("li",null,"Describe plans to collaborate with other GCEPs on any genes on your gene list that overlap in scope",-1)),r("li",null,[e[7]||(e[7]=d("see the ")),a(u),e[8]||(e[8]=d(" for more information"))])])])):w("",!0),t.curatedGenesCount>0?(o(),l("div",Ut,[r("strong",null,"You have added curated genes: "+E(t.curatedGenesCount)+"/"+E(t.genes.length)+" gene(s)",1),e[14]||(e[14]=d(" — Please include how you prioritized the list, your plan for overlaps (other GCEPs), the scope boundaries, and your throughput/update cadence. "))])):w("",!0),a(j,{name:"fade",mode:"out-in"},{default:g(()=>[i.editing?(o(),l("div",Rt,[a(b,{modelValue:t.group.expert_panel.scope_description,"onUpdate:modelValue":[e[1]||(e[1]=k=>t.group.expert_panel.scope_description=k),e[2]||(e[2]=k=>s.$emit("update"))]},null,8,["modelValue"])])):(o(),l("div",St,[t.group.expert_panel.scope_description?(o(),l("div",{key:0,innerHTML:t.htmlScopeDescription},null,8,Dt)):(o(),l("p",{key:1,class:"well cursor-pointer",onClick:e[3]||(e[3]=(...k)=>s.showForm&&s.showForm(...k))}," A description of scope has not yet been provided. "))]))]),_:1})])])}const Kt=T(Et,[["render",Ft]]);export{qt as A,Ht as G,Wt as M,Kt as S,Qt as a,Ot as b,zt as c};
//# sourceMappingURL=ScopeDescriptionForm-DhgWOMRx.js.map
