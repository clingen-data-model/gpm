import{s as M}from"./router_aware_sort_and_filter-BlRiHRKx.js";import{_ as g,a2 as V,aZ as k,c as v,f as l,a as i,b as p,p as x,i as a,w as s,j as _,b5 as U,d as u,e as y,h as I,C as E,D as F,a1 as O}from"./app-M9a5cX1z.js";const N={name:"InstitutionCreateForm",props:{modelValue:{type:Object,required:!0}},emits:["update:modelValue","saved","canceled"],setup(t,e){const{workingCopy:c}=k(t,e);return{workingCopy:c}},data(){return{errors:{}}},methods:{async save(){try{this.initErrors(),console.log("save!");const t=await this.$store.dispatch("credentials/update",this.workingCopy).then(e=>e.data);console.log(t),this.$emit("update:modelValue",t),this.$emit("saved",t)}catch(t){V(t)&&(this.errors=t.response.data.errors)}},cancel(){this.$emit("canceled"),this.initInstitution()},initErrors(){this.errors={}}}};function B(t,e,c,m,o,r){const d=i("input-row"),h=i("button-row");return p(),v("div",null,[l(d,{modelValue:m.workingCopy.name,"onUpdate:modelValue":e[0]||(e[0]=b=>m.workingCopy.name=b),label:"Name",errors:o.errors.name},null,8,["modelValue","errors"]),l(h,{"submit-text":"Save",onSubmitted:r.save,onCancel:r.cancel},null,8,["onSubmitted","onCancel"])])}const T=g(N,[["render",B]]),j={name:"ComponentName",props:{modelValue:{type:Object,required:!0}},emits:["saved","canceled","update:modelValue"],methods:{async approve(){const t=await x.put(`/api/credentials/${this.modelValue.id}`,{name:this.modelValue.name,approved:1}).then(e=>e.data);this.$emit("update:modelValue",t),this.$emit("saved",t)},cancelApproval(){this.$emit("canceled")}}};function Y(t,e,c,m,o,r){const d=i("dictionary-row"),h=i("button-row");return p(),v("div",null,[e[0]||(e[0]=a(" Are you sure you want to approve this institution? ")),l(d,{label:"Name"},{default:s(()=>[a(_(c.modelValue.name),1)]),_:1}),l(h,{"submit-text":"Approve",onSubmitted:r.approve,onCancel:r.cancelApproval},null,8,["onSubmitted","onCancel"])])}const q=g(j,[["render",Y]]),L={name:"CredentialMergeForm",components:{SearchSelect:U},props:{obsoletes:{type:Array,default:()=>[]},credentials:{type:Array,default:()=>[]}},emits:["saved","canceled"],data(){return{selectedAuthority:null,selectedObsolete:null,errors:{}}},watch:{authority:{immediate:!0,handler(t){t&&(this.authorityId=t.id)}},obsoletes:{immediate:!0,deep:!0,handler(t){this.handleObsoleteUpdate(t)}}},methods:{handleObsoleteUpdate(t){this.selectedObsolete=t},async commitMerge(){if(console.log("committing merge",this.selectedAuthority,this.selectedObsolete),!(!this.selectedAuthority||!this.selectedObsolete))try{this.errors={},await this.$store.dispatch("credentials/merge",{authority:this.selectedAuthority,obsolete:this.selectedObsolete}),this.selectedAuthority=null,this.selectedObsolete=null,this.$emit("saved")}catch(t){V(t)&&(this.errors=t.response.data.errors)}},cancelMerge(){this.authorityId=null,this.obsoleteIds=[],this.$emit("canceled")}}};function P(t,e,c,m,o,r){const d=i("note"),h=i("SearchSelect"),b=i("input-row"),w=i("button-row");return p(),v("div",null,[e[6]||(e[6]=u("p",{class:"mb-8"},[a(" Merging credentials will do the following: "),u("ol",{class:"list-decimal ml-6"},[u("li",null,"Transfer all people with the obsolete credential to the authoritiative credential."),u("li",null,"Delete the obsolete credential.")])],-1)),l(b,{label:"Merge",vertical:""},{label:s(()=>[e[3]||(e[3]=a(" Merge ")),l(d,{class:"inline-block"},{default:s(()=>e[2]||(e[2]=[a(" (Obsolete credential that will be deleted) ")])),_:1})]),default:s(()=>[l(h,{modelValue:o.selectedObsolete,"onUpdate:modelValue":e[0]||(e[0]=f=>o.selectedObsolete=f),options:c.credentials,"show-options-on-focus":!0,"key-by":"id"},null,8,["modelValue","options"])]),_:1}),l(b,{label:"Into",errors:o.errors.authority_id,vertical:""},{label:s(()=>[e[5]||(e[5]=a(" Into ")),l(d,{class:"inline"},{default:s(()=>e[4]||(e[4]=[a(" (Authoritative credential) ")])),_:1})]),default:s(()=>[l(h,{modelValue:o.selectedAuthority,"onUpdate:modelValue":e[1]||(e[1]=f=>o.selectedAuthority=f),options:c.credentials,"show-options-on-focus":!0,"key-by":"id"},null,8,["modelValue","options"])]),_:1},8,["errors"]),l(w,{"submit-text":"Merge",onSubmitted:r.commitMerge,onCanceled:r.cancelMerge},null,8,["onSubmitted","onCanceled"])])}const z=g(L,[["render",P]]),R={name:"CredentialList",components:{CredentialUpdateForm:T,CredentialsApprovalForm:q,CredentialMergeForm:z},setup(){const{sort:t,filter:e}=M({field:"name",desc:!1});return{sort:t,filter:e}},data(){return{fields:[{name:"id",label:"ID",type:Number,sortable:!0,class:"w-12"},{name:"name",type:String,sortable:!0},{name:"people_count",label:"# People",type:Number,sortable:!0},{name:"approved",type:Boolean,sortable:!0,resolveValue(t){return t.approved?"Approved":null},resolveSort(t){return t.approved}},{name:"actions",label:"",sortable:!1}],currentItem:{},showApproveDialog:!1,showEditDialog:!1,showMergeDialog:!1,showDeleteConfirmation:!1}},computed:{items(){return this.$store.getters["credentials/items"]},filteredItems(){if(!this.filter)return this.items;const t=new RegExp(`.*${this.filter}.*`,"i");return this.items.filter(e=>e.name.match(t)||e.abbreviation&&e.abbreviation.match(t)||e.country&&e.country.name.match(t))},currentIndex(){return this.items.findIndex(t=>t.id===this.currentItem.id)}},mounted(){this.$store.dispatch("credentials/getItems")},methods:{edit(t){this.showEditDialog=!0,this.currentItem=t},initApprove(t){this.showApproveDialog=!0,this.currentItem=t},initMerge(t){this.currentItem=t,this.showMergeDialog=!0},handleSaved(){this.showApproveDialog=!1,this.showEditDialog=!1,this.updateItem(),this.$store.commit("pushSuccess","Credential saved.")},handleCancel(){this.showApproveDialog=!1,this.showEditDialog=!1,this.updateItem(),this.currentItem={country:{}}},handleMerge(){this.items.splice(this.currentIndex,1),this.showMergeDialog=!1,this.$store.commit("pushSuccess","Credential merged."),this.currentItem={}},updateItem(){this.currentItem.id&&this.currentIndex>-1&&(this.items[this.currentIndex]={...this.currentItem})},initDelete(t){this.showDeleteConfirmation=!0,this.currentItem=t},async deleteItem(){this.currentItem.id&&(this.currentItem.people_count>0&&alert("You cannot delete an credential because it is in use.  Please edit the credential or merge it into another."),await this.$store.dispatch("credentials/delete",this.currentItem),this.showDeleteConfirmation=!1,this.$store.commit("pushSuccess",`${this.currentItem.name} deleted.`))}}},Z={key:0},G={key:1};function H(t,e,c,m,o,r){const d=i("dropdown-item"),h=i("dropdown-menu"),b=i("data-table"),w=i("CredentialsApprovalForm"),f=i("modal-dialog"),D=i("CredentialUpdateForm"),S=i("CredentialMergeForm"),A=i("button-row");return p(),v("div",null,[e[17]||(e[17]=u("h1",null,"Credentials",-1)),l(b,{sort:m.sort,"onUpdate:sort":e[1]||(e[1]=n=>m.sort=n),paginated:"",data:r.filteredItems,fields:o.fields,"reset-page-on-data-change":!1},{header:s(()=>[u("label",null,[e[10]||(e[10]=a(" Filter: ")),E(u("input",{"onUpdate:modelValue":e[0]||(e[0]=n=>m.filter=n),type:"text"},null,512),[[F,m.filter]])])]),"cell-actions":s(({item:n})=>[l(h,{"hide-cheveron":""},{label:s(()=>e[11]||(e[11]=[u("button",{class:"btn btn-xs"}," â€¦ ",-1)])),default:s(()=>[l(d,{onClick:C=>r.edit(n)},{default:s(()=>e[12]||(e[12]=[a(" Edit ")])),_:2},1032,["onClick"]),n.approved?I("",!0):(p(),y(d,{key:0,onClick:C=>r.initApprove(n)},{default:s(()=>e[13]||(e[13]=[a(" Approve ")])),_:2},1032,["onClick"])),l(d,{onClick:C=>r.initMerge(n)},{default:s(()=>e[14]||(e[14]=[a(" Merge into another ")])),_:2},1032,["onClick"]),l(d,{onClick:C=>r.initDelete(n)},{default:s(()=>e[15]||(e[15]=[a(" Delete ")])),_:2},1032,["onClick"])]),_:2},1024)]),_:1},8,["sort","data","fields"]),(p(),y(O,{to:"body"},[l(f,{modelValue:o.showApproveDialog,"onUpdate:modelValue":e[3]||(e[3]=n=>o.showApproveDialog=n),title:`Approve ${o.currentItem.name}`},{default:s(()=>[l(w,{modelValue:o.currentItem,"onUpdate:modelValue":e[2]||(e[2]=n=>o.currentItem=n),onSaved:r.handleSaved,onCanceled:r.handleCancel},null,8,["modelValue","onSaved","onCanceled"])]),_:1},8,["modelValue","title"]),l(f,{modelValue:o.showEditDialog,"onUpdate:modelValue":e[5]||(e[5]=n=>o.showEditDialog=n),title:`Edit ${o.currentItem.name}`},{default:s(()=>[l(D,{modelValue:o.currentItem,"onUpdate:modelValue":e[4]||(e[4]=n=>o.currentItem=n),onSaved:r.handleSaved,onCanceled:r.handleCancel},null,8,["modelValue","onSaved","onCanceled"])]),_:1},8,["modelValue","title"]),l(f,{modelValue:o.showMergeDialog,"onUpdate:modelValue":e[7]||(e[7]=n=>o.showMergeDialog=n),title:"Merge Credentials"},{default:s(()=>[o.currentItem.id?(p(),y(S,{key:0,obsoletes:o.currentItem,credentials:r.items,onSaved:r.handleMerge,onCanceled:e[6]||(e[6]=n=>o.showMergeDialog=!1)},null,8,["obsoletes","credentials","onSaved"])):I("",!0)]),_:1},8,["modelValue"]),l(f,{modelValue:o.showDeleteConfirmation,"onUpdate:modelValue":e[9]||(e[9]=n=>o.showDeleteConfirmation=n),title:"Delete Credential",size:"sm"},{default:s(()=>[o.currentItem.people_count>0?(p(),v("div",Z,e[16]||(e[16]=[u("p",null,"You cannot delete an credential people are using.",-1),u("p",null,"Either edit this this credential or merge it into another.",-1)]))):(p(),v("div",G,[a(" You are about to delete the "+_(o.currentItem.name)+" ",1),l(A,{"submit-text":"Delete",onSubmitted:r.deleteItem,onCanceled:e[8]||(e[8]=n=>o.showDeleteConfirmation=!1)},null,8,["onSubmitted"])]))]),_:1},8,["modelValue"])]))])}const Q=g(R,[["render",H]]);export{Q as default};
//# sourceMappingURL=CredentialsList-Rej-Q51M.js.map
