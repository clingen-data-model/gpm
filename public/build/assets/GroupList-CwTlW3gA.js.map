{"version":3,"file":"GroupList-CwTlW3gA.js","sources":["../../../resources/js/views/groups/GroupList.vue"],"sourcesContent":["<script>\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\nimport {computed, ref} from 'vue'\nimport GroupForm from '@/components/groups/GroupForm.vue'\nimport SubmissionWrapper from '@/components/groups/SubmissionWrapper.vue'\n\nexport default {\n    name: 'ComponentName',\n    components: {\n        GroupForm,\n        SubmissionWrapper\n    },\n    props: {\n\n    },\n    setup() {\n        const store = useStore();\n        const router = useRouter();\n\n\n        const tabDefinitions = computed( () => {\n            const tabs = [\n                {\n                    label: 'VCEPs',\n                    typeId: 4,\n                    filter: (g) => g.is_vcep_or_scvcep,\n                },\n                {\n                    label: 'GCEPs',\n                    typeId: 3,\n                    filter: (g) => g.is_gcep,\n                },\n{\n                    label: 'CDWGs',\n                    typeId: 2,\n                    filter: g => g.isCdwg()\n                },\n                {\n                    label: 'WGs',\n                    typeId: 1,\n                    filter: g => g.isWg()\n                },\n            ];\n\n            return tabs;\n        })\n\n\n\n        const filterString = ref(null);\n\n        const groups = computed(() => store.getters['groups/all']);\n\n        const filteredGroups = computed(() => groups.value.filter(group => {\n            if (!filterString.value) {\n                return true;\n            }\n\n            const pattern = new RegExp(`.*${filterString.value}.*`, 'i');\n\n            return group.name && group.name.match(pattern)\n                || group.displayName && group.displayName.match(pattern)\n                || (\n                    group.expert_panel &&\n                    group.expert_panel.full_short_base_name &&\n                    group.expert_panel.full_short_base_name.match(pattern)\n                )\n                || Number.parseInt(group.id) === Number.parseInt(filterString.value)\n                || group.status.name.match(pattern)\n                || (\n                    group.expert_panel &&\n                    group.expert_panel.currentStepName &&\n                    group.expert_panel.currentStepName.match(pattern)\n                    )\n                || group.coordinators.filter(c => c.person.name.match(pattern)).length > 0\n        }))\n\n        const goToItem = (item) => {\n            router.push({\n                name: 'GroupDetail',\n                params: {uuid: item.uuid}\n            })\n        }\n\n        return {\n            filterString,\n            groups,\n            filteredGroups,\n            tabDefinitions,\n            goToItem,\n            goToGroup: goToItem,\n        }\n    },\n    data() {\n        return {\n            loading: false,\n            showCreateForm: false,\n            loadedFor: {\n                'VCEPs': false,\n                'GCEPs': false,\n                'CDWGs': false,\n                'WGs': false,\n            },\n            sort: {\n                field: 'id',\n                desc: false\n            },\n            fields: [\n                {\n                    name: 'id',\n                    label: 'ID',\n                    sortable: true\n                },\n                {\n                    name: 'name',\n                    label: 'Name',\n                    sortable: true,\n                    resolveValue: (item) => {\n                        return item.displayName\n                    }\n                },\n                {\n                    name: 'coordinators',\n                    sortable: false\n                },\n                {\n                    name: 'displayStatus',\n                    sortable: true,\n                    label: 'status'\n                },\n            ]\n        }\n    },\n    methods: {\n        startCreateGroup () {\n            this.showCreateForm = true;\n        },\n        async getGroupsForType (tabLabel) {\n            const typeTab = this.tabDefinitions.find(t => t.label === tabLabel);\n            if (this.loadedFor[tabLabel]) {\n                return;\n            }\n            this.loading = true;\n            await this.$store.dispatch('groups/getItems', {where: {group_type_id: typeTab.typeId}});\n            this.loadedFor[tabLabel] = true;\n            this.loading = false;\n        }\n\n    }\n\n}\n</script>\n<template>\n  <div>\n    <h1 class=\"flex justify-between items-center\">\n      Groups\n      <button v-if=\"hasPermission('groups-manage')\" class=\"btn btn-xs\" @click=\"startCreateGroup\">\n        Create a group\n      </button>\n    </h1>\n    <tabs-container @tab-changed=\"getGroupsForType\">\n      <tab-item v-for=\"def in tabDefinitions\" :key=\"def.label\" :label=\"def.label\">\n        <div v-if=\"loading\" class=\"text-center w-full\">\n          Loading...\n        </div>\n        <div v-else>\n          <div class=\"mb-2\">\n            Filter: <input v-model=\"filterString\" type=\"text\" placeholder=\"name,id,status,coordinator name\">\n          </div>\n          <data-table\n\n            v-model:sort=\"sort\"\n            v-remaining-height\n            :data=\"filteredGroups.filter(def.filter)\"\n            :fields=\"fields\"\n            :row-click-handler=\"goToGroup\"\n            row-class=\"cursor-pointer active:bg-blue-100\"\n          >\n            <template #cell-displayStatus=\"{item}\">\n              <badge class=\"text-xs\" :color=\"item.statusColor\">\n                {{ item.displayStatus\n                }}<span v-if=\"item.status.id == 1 && item.is_ep\">&nbsp;-&nbsp;{{\n                  item.expert_panel.currentStepAbbr\n                }}</span>\n              </badge>\n            </template>\n            <template #cell-coordinators=\"{value}\">\n              <div v-if=\"value.length == 0\" />\n              <span v-for=\"(coordinator, idx) in value\" :key=\"coordinator.id\">\n                <span v-if=\"idx > 0\">, </span>\n                <router-link\n                  :to=\"{name: 'PersonDetail', params: {uuid: coordinator.person.uuid}}\"\n                  class=\"link\"\n                  @click.stop\n                >\n                  {{ coordinator.person.name }}\n                </router-link>\n              </span>\n            </template>\n          </data-table>\n        </div>\n      </tab-item>\n    </tabs-container>\n\n    <modal-dialog v-model=\"showCreateForm\" title=\"Create a New Group\" size=\"sm\">\n      <SubmissionWrapper @submitted=\"$refs.groupForm.save()\" @canceled=\"$refs.groupForm.cancel()\">\n        <GroupForm ref=\"groupForm\" @canceled=\"showCreateForm = false\" @saved=\"showCreateForm = false\" />\n      </SubmissionWrapper>\n    </modal-dialog>\n  </div>\n</template>\n"],"names":["_sfc_main","GroupForm","SubmissionWrapper","store","useStore","router","useRouter","tabDefinitions","computed","g","filterString","ref","groups","filteredGroups","group","pattern","c","goToItem","item","tabLabel","typeTab","t","_hoisted_1","_hoisted_4","_createElementBlock","_createElementVNode","_cache","_createTextVNode","_ctx","$options","args","_createCommentVNode","_createVNode","_component_tabs_container","_withCtx","_openBlock","_Fragment","_renderList","$setup","def","_createBlock","_component_tab_item","$data","_hoisted_2","_hoisted_3","$event","_component_data_table","_component_badge","_toDisplayString","_hoisted_5","value","_hoisted_6","coordinator","idx","_hoisted_7","_component_router_link","_withModifiers","_component_modal_dialog","_component_SubmissionWrapper","_component_GroupForm"],"mappings":"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"}