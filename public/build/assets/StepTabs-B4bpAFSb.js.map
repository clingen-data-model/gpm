{"version":3,"file":"StepTabs-B4bpAFSb.js","sources":["../../../resources/js/components/applications/ApplicationLog.vue","../../../resources/js/components/applications/ProgressStep.vue","../../../resources/js/components/applications/ProgressChart.vue","../../../resources/js/components/applications/SubmissionInfo.vue","../../../resources/js/components/applications/ApproveStepForm.vue","../../../resources/js/components/applications/StepApproveControl.vue","../../../resources/js/components/expert_panels/ReviewCommentAnonymous.vue","../../../resources/js/components/applications/CommentSummary.vue","../../../resources/js/components/applications/StepSendToChairsControl.vue","../../../resources/js/components/applications/RejectStepForm.vue","../../../resources/js/components/applications/StepRequestRevisionsControl.vue","../../../resources/js/components/applications/StepControls.vue","../../../resources/js/components/applications/BaseStep.vue","../../../resources/js/components/applications/StepOne.vue","../../../resources/js/components/applications/StepTwo.vue","../../../resources/js/components/applications/StepThree.vue","../../../resources/js/components/applications/StepFour.vue","../../../resources/js/components/applications/StepTabs.vue"],"sourcesContent":["<script>\nimport {computed, watch} from 'vue'\nimport {useStore} from 'vuex';\n\n\nimport LogEntryForm from '@/components/log_entries/LogEntryForm.vue'\nimport {logEntries, fetchEntries} from '@/adapters/log_entry_repository';\n\n\nconst fields = [\n    {\n        name: 'created_at',\n        label: 'Created',\n        sortName: 'created_at',\n        sortable: true,\n        type: Date,\n    },\n    {\n        name: 'description',\n        label: 'Entry',\n        sortable: true,\n        type: String\n    },\n    {\n        name: 'causer.name',\n        label: 'User',\n        sortable: true\n    },\n    {\n        name: 'id',\n        label: '',\n        sortable: false,\n    }\n];\n\nexport default {\n    components: {\n        LogEntryForm\n    },\n    props: {\n        step: {\n            required: false,\n            type: Number,\n        }\n    },\n    setup () {\n        const store  = useStore();\n        const group = computed(() => {\n            return store.getters['groups/currentItemOrNew']\n        })\n\n        const application = computed(() => {\n            return group.value.expert_panel;\n        })\n\n        watch(group, () => {\n            if (group.value.uuid) {\n                fetchEntries(`/api/groups/${group.value.uuid}/activity-logs`)\n            }\n        }, {\n            immediate: true\n        })\n        return {\n            group,\n            application,\n            logEntries\n        }\n    },\n    data() {\n        return {\n            sort: {\n                field: 'created_at',\n                desc: true\n            },\n            selectedLogEntry: {},\n            editingEntry: false,\n        }\n    },\n    computed: {\n        fields () {\n            if (Number.parseInt(this.group.group_type_id) === 4 && !fields.map(f => f.name).includes('step')) {\n                fields.splice(2, 0, {\n                    name: 'step',\n                    sortable: true,\n                })\n            }\n\n            return fields;\n        },\n        hasLogEntries(){\n            return this.filteredLogEntries.length > 0;\n        },\n        filteredLogEntries() {\n            if(this.logEntries && this.step) {\n                return this.logEntries.filter(entry => Number.parseInt(entry.step) === this.step);\n            }\n\n            if (this.logEntries) {\n                return this.logEntries;\n            }\n\n            return []\n        },\n        noResultsMessage() {\n            if (typeof this.step == 'number') {\n                return `No progress log entries have been entered for step ${this.step}`;\n            }\n\n            return 'There are no log entries for this application';\n        }\n    },\n    mounted() {\n        // this.getLogEntries()\n    },\n    methods: {\n        async getLogEntries() {\n            await fetchEntries();\n        },\n        editLogEntry(entry) {\n            this.editingEntry = true;\n            this.selectedLogEntry = entry;\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <div v-if=\"!hasLogEntries\" class=\"px-3 py-2 rounded border border-gray-300 text-gray-500 bg-gray-200\">\n      {{ noResultsMessage }}\n    </div>\n    <data-table v-else v-model:sort=\"sort\" :fields=\"fields\" :data=\"filteredLogEntries\">\n      <template #cell-id=\"{item}\">\n        <div class=\"flex space-x-1\">\n          <router-link :to=\"{name: 'EditLogEntry', params:{id: item.id}}\" class=\"btn btn-xs inline-block\">\n            <icon-edit width=\"12\" />\n          </router-link>\n          <router-link\n            v-if=\"item.activity_type === null\"\n            :to=\"{name: 'ConfirmDeleteLogEntry', params:{id: item.id}}\"\n            class=\"btn btn-xs inline-block\"\n          >\n            <icon-trash width=\"12\" />\n          </router-link>\n        </div>\n      </template>\n      <template #cell-description=\"{item}\">\n        <div class=\"links-blue\" v-html=\"item.description\" />\n      </template>\n      <!-- <template v-slot:cell-step=\"{item}\">\n                <pre>\n                    {{item}}\n                </pre>\n            </template> -->\n    </data-table>\n    <modal-dialog v-model=\"editingEntry\" title=\"Edit log entry\">\n      <LogEntryForm />\n    </modal-dialog>\n  </div>\n</template>\n<style lang=\"postcss\">\n    .links-blue a {\n        @apply text-blue-500;\n    }\n</style>\n","<script>\nimport { formatDate } from '@/date_utils'\n\nexport default {\n    props: {\n        step: {\n            type: Number,\n            required: true,\n        },\n        application: {\n            type: Object,\n            required: true\n        }\n    },\n    data() {\n        return {\n\n        }\n    },\n    computed: {\n        dateInitiated () {\n            return formatDate(this.application.date_initiated)\n        },\n        approvalDate() {\n            if (this.application.approvalDateForStep(this.step)) {\n                return formatDate(this.application.approvalDateForStep(this.step))\n            }\n\n            return ' '\n        },\n        displayClass () {\n            const classes = [];\n            if (this.isApproved) {\n                classes.push('approved');\n            } else if (this.isCurrentStep) {\n                classes.push('active');\n            }\n            if (this.isFirstStep) {\n                classes.push('rounded-l')\n            }\n            if (this.isLastStep) {\n                classes.push('rounded-r')\n            }\n            return classes.join(' ');\n        },\n        isCurrentStep () {\n            return Number.parseInt(this.application.current_step) === Number.parseInt(this.step)\n        },\n        isApproved () {\n            return this.application.stepIsApproved(this.step);\n        },\n        isFirstStep () {\n            return Number.parseInt(this.step) === 1;\n        },\n        isLastStep () {\n            const lastStep = Math.max(...this.application.steps);\n            return Number.parseInt(this.step) === Number.parseInt(lastStep);\n        }\n    },\n    methods: {\n    }\n}\n</script>\n<template>\n  <div class=\"flex-1\">\n    <div class=\"progress-step\" :class=\"displayClass\" />\n    <div class=\"flex flex-row-reverse justify-between bg-transparent mt-1\">\n      <div :class=\"{'-mr-10': !isLastStep}\">\n        {{ approvalDate }}\n      </div>\n      <div v-if=\"isFirstStep\">\n        {{ dateInitiated }}\n      </div>\n    </div>\n  </div>\n</template>\n<style lang=\"postcss\">\n    .progress-step {\n        @apply h-4 bg-green-100 border border-green-200 flex-1;\n    }\n    .progress-step.approved {\n        @apply bg-green-500 border-green-600;\n    }\n    .progress-step.active {\n        @apply ring-green-400 ring-2 border-green-400 border-2;\n    }\n</style>\n","<script>\nimport ProgressStep from '@/components/applications/ProgressStep.vue'\n\nexport default {\n    components: {\n        ProgressStep\n    },\n    props: {\n        application: {\n            required: true,\n            type: Object\n        }\n    },\n    computed: {\n        steps () {\n            return this.application.steps\n        },\n    }\n}\n</script>\n<template>\n  <div>\n    <h3 class=\"pb-2\">\n      EP Progress\n    </h3>\n    <div class=\"flex flex-row space-x-1\">\n      <ProgressStep v-for=\"i in steps\" :key=\"i\" :step=\"i\" :application=\"application\" />\n    </div>\n  </div>\n</template>\n<style lang=\"postcss\" scoped>\n    .progress-date {\n        @apply text-xs;\n        width: 10em;\n    }\n</style>","<script setup>\n    import {computed} from 'vue'\n    import {formatDate} from '@/date_utils.js'\n    import {judgementColor} from '@/composables/judgement_utils.js'\n    import { featureIsEnabled } from '@/utils.js';\nimport MarkdownBlock from '../MarkdownBlock.vue';\n\n    const props = defineProps({\n        group: {\n            type: Object,\n            required: true\n        },\n        step: {\n            type: Number,\n            required: true\n        }\n    })\n\n    const submissions = computed(() => {\n        return props.group.expert_panel.submissionsForStep(props.step);\n    })\n\n    const stepHasBeenSubmitted = computed(() => {\n        return submissions.value && submissions.value.length > 0;\n    });\n\n    // const firstSubmission = computed(() => {\n    //     if (!submissions.value) return null\n\n    //     return submissions.value[0];\n    // })\n\n    const latestSubmission = computed(() => {\n        return props.group.expert_panel.latestPendingSubmissionForStep(props.step);\n    });\n\n    const latestJudgements = computed(() => {\n        if (!submissions.value)  return [];\n\n        if (\n            Number.parseInt(submissions.value.length) === 1\n            || Number.parseInt(latestSubmission.value.submission_status_id) === 3\n            || Number.parseInt(latestSubmission.value.submission_status_id) === 2\n        ) {\n            return latestSubmission.value.judgements;\n        }\n\n        return submissions.value[submissions.value.length-2].judgements;\n    });\n\n\n</script>\n\n<template>\n  <div v-if=\"step == group.expert_panel.current_step\">\n    <static-alert\n      v-if=\"stepHasBeenSubmitted\"\n      class=\"mb-4 border-blue-700\"\n      variant=\"bland\"\n    >\n      <div v-if=\"!latestSubmission.sent_to_chairs_at\">\n        <strong>Submitted</strong> by {{ latestSubmission.submitter ? latestSubmission.submitter.name : '' }} on\n        <strong>{{ formatDate(latestSubmission.created_at) }}</strong>\n        <MarkdownBlock v-if=\"latestSubmission.notes\" class=\"ml-4\" :markdown=\"latestSubmission.notes\" />\n      </div>\n      <div v-if=\"latestSubmission.submission_status_id == 3\">\n        <strong>Sent to chairs</strong> on <strong>{{ formatDate(latestSubmission.sent_to_chairs_at) }}</strong>.\n      </div>\n      <div v-if=\"latestSubmission.submission_status_id == 2\">\n        <strong>{{ formatDate(latestSubmission.updated_at) }}</strong> - Revisions Requested.\n      </div>\n      <div v-if=\"featureIsEnabled('chair_review') && (latestSubmission.submission_status_id == 3)\">\n        <hr class=\"my-1\">\n        <strong>Latest Chair Decisions:</strong>\n        <ul v-if=\"latestJudgements && latestJudgements.length > 0\" class=\"list-disc pl-6\">\n          <li v-for=\"judgement in latestJudgements\" :key=\"judgement.id\">\n            <strong>{{ judgement.person.name }}:</strong>\n                        &nbsp;\n            <badge :color=\"judgementColor(judgement)\">\n              {{ judgement.decision }}\n            </badge>\n            <div v-if=\"judgement.notes\" class=\"text-sm\">\n              <strong>Notes:</strong> {{ judgement.notes }}\n            </div>\n          </li>\n        </ul>\n        <div v-else class=\"ml-4 text-gray-500\">\n          Awaiting decisions...\n        </div>\n      </div>\n    </static-alert>\n  </div>\n</template>\n\n<style scoped>\n    .submission-log-table {\n        @apply text-sm;\n    }\n    .submission-log-table td,\n    .submission-log-table th {\n        @apply border-0 border-b py-2;\n    }\n</style>\n","<script>\nimport {mapGetters} from 'vuex'\nimport api from '@/http/api';\nimport isValidationError from '@/http/is_validation_error';\nimport UserDefinedMailForm from '@/components/forms/UserDefinedMailForm.vue'\n\nconst templateForStep = {\n    1: 'App\\\\Mail\\\\UserDefinedMailTemplates\\\\InitialApprovalMailTemplate',\n    2: 'App\\\\Mail\\\\UserDefinedMailTemplates\\\\SpecificationDraftMailTemplate',\n    3: 'App\\\\Mail\\\\UserDefinedMailTemplates\\\\SpecificationPilotMailTemplate',\n    4: 'App\\\\Mail\\\\UserDefinedMailTemplates\\\\SustainedCurationApprovalMailTemplate',\n}\n\nexport default {\n    components: {\n        UserDefinedMailForm\n    },\n    emits: [\n        'canceled',\n        'saved'\n    ],\n    data() {\n        return {\n            dateApproved: null,\n            notifyContacts: false,\n            email: {\n                subject: '',\n                body: '',\n                cc: [],\n                to: [],\n                files: []\n            },\n            errors: {}\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        },\n    },\n    watch: {\n        notifyContacts (to) {\n            if (to) {\n                api.get(\n                        `/api/email-drafts/groups/${this.group.uuid}`,\n                        {\n                            params: {\n                                templateClass: templateForStep[this.group.expert_panel.current_step]\n                            }\n                        }\n                    )\n                    .then(response => {\n                        this.email = response.data;\n                        this.email.files = [];\n                    })\n            }\n        }\n    },\n    mounted() {\n    },\n    methods: {\n        clearForm() {\n            this.dateApproved = null;\n            this.notifyContacts = false;\n        },\n        cancel () {\n            this.clearForm();\n            this.$emit('canceled');\n        },\n        async save () {\n            const data = {\n                group: this.group, \n                dateApproved: this.dateApproved,\n                notifyContacts: this.notifyContacts,\n                subject: this.email.subject,\n                body: this.email.body,\n                attachments: this.email.files\n            };\n\n            try {\n                await this.$store.dispatch('groups/approveCurrentStep', data)\n                this.clearForm();\n                this.$emit('saved');\n            } catch (e) {\n                if (isValidationError(e)) {\n                    this.errors = e.response.data.errors\n                }\n            }\n        }\n    }\n\n}\n</script>\n<template>\n  <form-container>\n    <h2>Approve Step {{ application.current_step }}</h2>\n\n    <input-row v-model=\"dateApproved\" type=\"date\" :errors=\"errors.date_approved\" label=\"Date Approved\" />\n\n    <dictionary-row label=\"\">\n      <div>\n        <label class=\"text-sm\">\n          <input v-model=\"notifyContacts\" type=\"checkbox\" :value=\"true\"> \n          <div>Send notification email to contacts</div>\n        </label>\n      </div>\n    </dictionary-row>\n    <static-alert\n      v-if=\"!application.hasPendingSubmissionForCurrentStep\"\n      variant=\"warning\"\n    >\n      The expert panel has not yet submitted the application for approval.  \n      <br>\n      You can approve this application but be aware that it is not part of the \"normal\" application workflow.\n    </static-alert>\n        \n    <transition name=\"slide-fade-down\">\n      <UserDefinedMailForm v-show=\"notifyContacts\" v-model=\"email\" />\n    </transition>\n\n    <button-row>\n      <button class=\"btn\" @click=\"cancel\">\n        Cancel\n      </button>\n      <button class=\"btn blue\" @click=\"save\">\n        Approve step {{ application.current_step }}\n        <span v-if=\"notifyContacts\">\n          and notify\n        </span>\n      </button>\n    </button-row>\n  </form-container>\n</template>","<script setup>\n    import { ref, computed, useAttrs } from 'vue';\n    import ApproveStepForm from '@/components/applications/ApproveStepForm.vue'\n\n    const props = defineProps({\n        group: {\n            type: Object,\n            required: true\n        },\n        step: {\n            type: Number,\n            required: true\n        }\n    });\n    const emits = defineEmits(['stepApproved']);\n    const attrs = useAttrs();\n    const showApproveForm = ref(false);\n    const isCurrentStep = computed(() => props.step === Number.parseInt(props.group.expert_panel.current_step))\n    const buttonTitle = computed(() => {\n\t\t\t\t\t\t\tif (isAffiliationMissing.value) {\n\t\t\t\t\t\t\t\treturn 'Cannot approve: Affiliation ID is missing';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn isCurrentStep.value\n\t\t\t\t\t\t\t\t? 'Approve this step'\n\t\t\t\t\t\t\t\t: 'You can only approve the application\\'s current step';\n\t\t\t\t\t\t});\n\n\tconst isAffiliationMissing = computed(() => {\n\t\tif (props.step !== 1) return false;\n\t\tconst id = props.group?.expert_panel?.affiliation_id;\n\t\treturn !id || !id.toString().trim();\n\t});\n\n    const startApproveStep = () => {\n      \tif (isAffiliationMissing.value) {\n\t\t\talert('Cannot approve: Affiliation ID is missing.');\n\t\t\treturn;\n\t\t}\n\n        showApproveForm.value = true;\n    };\n\n    const hideApproveForm = () => {\n        showApproveForm.value = false;\n    };\n\n    const handleApproved = () => {\n            hideApproveForm();\n            emits('stepApproved');\n    };\n\n</script>\n\n<template>\n\t<div>\n\t\t<button\n\t\t\t:disabled=\"!isCurrentStep || isAffiliationMissing\"\n\t\t\t:title=\"buttonTitle\"\n\t\t\tclass=\"btn btn-lg w-full\"\n\t\t\tv-bind=\"attrs\"\n\t\t\t@click=\"startApproveStep\"\n\t\t\t>\n\t\t\t<slot />\n\t\t</button>\n\t\t<p v-if=\"isAffiliationMissing && props.step === 1\" class=\"text-red-600 text-sm mt-1\">\n\t\t\tThis step cannot be approved until an Affiliation ID is provided.\n\t\t</p>\n\n\t\t<teleport to=\"body\">\n\t\t\t<modal-dialog v-model=\"showApproveForm\" size=\"xl\" @closed=\"$refs.approvestepform.clearForm()\">\n\t\t\t\t<ApproveStepForm\n\t\t\t\tref=\"approvestepform\"\n\t\t\t\t@saved=\"handleApproved\"\n\t\t\t\t@canceled=\"hideApproveForm\"\n\t\t\t\t/>\n\t\t\t</modal-dialog>\n\t\t</teleport>\n\t</div>\n</template>\n","<script setup>\n    import {ref} from 'vue'\n    import commentManagerFactory from '@/composables/comment_manager.js'\n\n    const props = defineProps({\n        comment: {\n            type: Object,\n            required: true\n        }\n    });\n\n    const replyManager = ref(commentManagerFactory('App\\\\Models\\\\Comment', props.comment.id))\n\n\n    const getVariant = comment => {\n        switch (comment.type.name) {\n            case 'required revision':\n                return 'yellow'\n            case 'suggestion':\n                return 'blue'\n            case 'internal comment':\n                return 'gray'\n            default:\n                return null\n        }\n    }\n\n    const showReplyList = ref(false);\n    const toggleReplies = async () => {\n        if (!showReplyList.value) {\n            await replyManager.value.getComments();\n        }\n        showReplyList.value = !showReplyList.value;\n    }\n</script>\n<template>\n  <div>\n    <div class=\"comment-container\">\n      <div class=\"flex items-start space-x-2\">\n        <popper :content=\"titleCase(comment.type.name)\" hover arrow placement=\"left\">\n          <badge class=\"block\" :color=\"getVariant(comment)\" size=\"xxs\">\n            {{ titleCase(comment.type.name.substr(0,1)) }}\n          </badge>\n        </popper>\n        <div>\n          <markdown-block :markdown=\"comment.content\" class=\"text-sm\" />\n          <div class=\"replies ml-1\">\n            <ul v-if=\"showReplyList\" class=\"\">\n              <li v-for=\"reply in replyManager.comments\" :key=\"reply.id\" class=\"border-l-2 mt-2 px-2 py-1\">\n                <ReviewCommentAnonymous :comment=\"reply\" :comment-manager=\"replyManager\" @deleted=\"handleReplyRemoved\" />\n              </li>\n            </ul>\n            <button v-if=\"comment.comments_count > 0\" class=\"link text-sm\" @click=\"toggleReplies\">\n              {{ showReplyList ? 'Hide' : 'Show' }}\n              {{ comment.comments_count }}\n              {{ comment.comments_count > 1 ? 'replies' : 'reply' }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\n    import {computed} from 'vue';\n    import ReviewCommentAnonymous from '@/components/expert_panels/ReviewCommentAnonymous.vue'\n\n    const props = defineProps({\n        comments: {\n            type: Array,\n            required: true\n        }\n    });\n\n    const commentsBySection = computed(() => {\n        const sections = {}\n        props.comments.forEach(c => {\n            const section = c.metadata.section || 'general'\n            if (!sections[c.metadata.section]) {\n                sections[section] = [];\n            }\n            sections[section].push(c)\n        })\n        return sections\n    });\n</script>\n\n<template>\n  <div>\n    <div\n      v-for=\"(sectionComments, section) in commentsBySection\" :key=\"section\"\n      class=\"md:flex md:space-x-4 mt-3 ml-2\"\n    >\n      <h4 class=\"md:w-1/5 flex-shrink-0\">\n        {{ titleCase(section) }}\n      </h4>\n      <ReviewCommentAnonymous\n        v-for=\"comment in sectionComments\"\n        :key=\"comment.id\"\n        :comment=\"comment\"\n        class=\"mb-1 flex-grow-0\"\n      />\n      <div v-if=\"sectionComments.length == 0\">\n        No comments\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup>\n    import {ref, inject, useAttrs} from 'vue'\n    import CommentSummary from './CommentSummary.vue';\n    import {api} from '@/http';\n\n    const props = defineProps({\n        group: {\n            type: Object,\n            required: true\n        }\n    })\n    const emits = defineEmits(['sentToChairs'])\n    const attrs = useAttrs();\n    const commentManager = inject('commentManager');\n    const additionalComments = ref();\n    \n    const showModal = ref(false)\n    const initSendToChairs = () => {\n\n        commentManager.value.getComments();\n        showModal.value = true\n    }\n    const sendToChairs = async () => {\n        await api.post(\n            `/api/groups/${props.group.uuid}/command`, \n            {\n                command: 'app.modules.group.actions.applicationSendToChairs',\n                additionalComments: additionalComments.value || null\n            }\n        )\n        emits('sentToChairs');\n        showModal.value = false;\n    }\n    const cancel = () => {\n        showModal.value = false;\n    }\n</script>\n\n<template>\n  <div>\n    <button \n      class=\"btn btn-lg w-full\" \n      v-bind=\"attrs\"\n      @click=\"initSendToChairs\"\n    >\n      Send to Chairs for Review\n    </button>\n\n    <teleport to=\"body\">\n      <modal-dialog v-model=\"showModal\" title=\"Send to CDWG OC co-chairs for approval\">\n        <p>\n          Sending the application to the chairs for approval will send a message to the <em>cdwgoc_approvals</em> with a PDF of the application and the Core Group comments shown below.\n        </p>\n\n        <h3>Comments from the Core Group</h3>\n        <CommentSummary :comments=\"commentManager.openComments\" />\n\n        <input-row \n          v-model=\"additionalComments\" \n          vertical \n          type=\"large-text\"\n          label=\"Additional notes for chairs\"\n          label-class=\"font-bold\"\n        >\n          <template #after-input>\n            <note>This is not intended for additional comments about the applicaiton. This is intended for notes about process, timeing, etc.  To add comments related to the content of the application click 'Cancel' and add notes alongside the application.</note>\n          </template>\n        </input-row>\n\n                \n        <template #footer>\n          <button-row submit-text=\"Send to Chairs\" @submitted=\"sendToChairs\" @canceled=\"cancel\" />\n        </template>\n      </modal-dialog>\n    </teleport>\n  </div>\n</template>\n","<script>\nimport {mapGetters} from 'vuex';\nimport {api} from '@/http';\nimport isValidationError from '@/http/is_validation_error';\nimport UserDefinedMailForm from '@/components/forms/UserDefinedMailForm.vue';\n\nexport default {\n    components: {\n        UserDefinedMailForm\n    },\n    emits: [\n        'canceled',\n        'saved'\n    ],\n    data() {\n        return {\n            notifyContacts: true,\n            email: {\n                subject: '',\n                body: '',\n                cc: [],\n                to: [],\n                files: []\n            },\n            errors: {}\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        },\n        submissionText () {\n            return `Request Revisions${this.notifyContacts ? ' and notify' : ''}`\n        }\n    },\n    watch: {\n        notifyContacts: {\n            immediate: true,\n            handler (to) {\n                if (to) {\n                    this.getEmailTemplate();\n                }\n            }\n        }\n    },\n    mounted() {\n    },\n    methods: {\n        clearForm() {\n            this.dateApproved = null;\n            this.notifyContacts = true;\n        },\n        cancel () {\n            this.clearForm();\n            this.$emit('canceled');\n        },\n        async save () {\n\n            try {\n                const data = {\n                    notify_contacts: this.notifyContacts,\n                    subject: this.email.subject,\n                    body: this.email.body,\n                    attachments: this.email.files\n                };\n\n                const url = `/api/groups/${this.group.uuid}/application/submission/${this.group.expert_panel.pendingSubmission.id}/rejection`;\n                await api.post(url, data)\n                    .then(rsp => rsp.data);\n\n\n                this.clearForm();\n                this.$emit('saved');\n\n            } catch (e) {\n                if (isValidationError(e)) {\n                    this.errors = e.response.data.errors\n                    return;\n                }\n                throw e;\n            }\n        },\n        getEmailTemplate () {\n            api.get(`/api/email-drafts/groups/${this.group.uuid}`,\n                {params: {templateClass: 'App\\\\Mail\\\\UserDefinedMailTemplates\\\\ApplicationRevisionRequestTemplate'}})\n                .then(response => {\n                    this.email = response.data;\n                    this.email.files = [];\n                })\n\n        }\n    }\n\n}\n</script>\n<template>\n  <form-container>\n    <dictionary-row label=\"\">\n      <div>\n        <label class=\"text-sm\">\n          <input v-model=\"notifyContacts\" type=\"checkbox\" :value=\"true\">\n          <div>Send notification email to contacts</div>\n        </label>\n      </div>\n    </dictionary-row>\n    <static-alert\n      v-if=\"!application.hasPendingSubmissionForCurrentStep\"\n      variant=\"warning\"\n    >\n      The expert panel has not yet submitted the application for approval.\n      <br>\n      You can approve this application but be aware that it is not part of the \"normal\" application workflow.\n    </static-alert>\n\n    <transition name=\"slide-fade-down\">\n      <UserDefinedMailForm v-show=\"notifyContacts\" v-model=\"email\" />\n    </transition>\n\n    <button-row :submit-text=\"submissionText\" @canceled=\"cancel\" @submitted=\"save\" />\n  </form-container>\n</template>\n","<script setup>\n    import {ref, useAttrs} from 'vue'\n\n    import RejectStepForm from '@/components/applications/RejectStepForm.vue'\n\n    // eslint-disable-next-line unused-imports/no-unused-vars\n    const props = defineProps({\n        group: {\n            type: Object,\n            required: true\n        }\n    })\n    const emits = defineEmits(['revisionsRequested'])\n    const attrs = useAttrs();\n    const rejectsubmissionform = ref(null);\n    const showRejectForm = ref(false);\n    const startRejectSubmission = () => {\n        showRejectForm.value = true;\n        rejectsubmissionform.value.getEmailTemplate()\n    };\n    const hideRejectForm = () => {\n        showRejectForm.value = false;\n    };\n    const handleRejected = () => {\n        hideRejectForm();\n        emits('revisionsRequested');\n    };\n\n</script>\n<template>\n  <div>\n    <button\n      v-if=\"group.expert_panel.hasPendingSubmissionForCurrentStep\"\n      class=\"btn btn-lg w-full\"\n      v-bind=\"attrs\"\n      @click=\"startRejectSubmission\"\n    >\n      Request revisions\n    </button>\n    <teleport to=\"body\">\n      <modal-dialog\n        v-model=\"showRejectForm\"\n        title=\"Request Revisions to Application\"\n        size=\"xl\"\n        @closed=\"$refs.rejectsubmissionform.clearForm()\"\n      >\n        <RejectStepForm\n          ref=\"rejectsubmissionform\"\n          @saved=\"handleRejected\"\n          @canceled=\"hideRejectForm\"\n        />\n      </modal-dialog>\n    </teleport>\n  </div>\n</template>\n","<script setup>\nimport {computed} from 'vue'\nimport {useStore} from 'vuex';\nimport SubmissionInfo from './SubmissionInfo.vue';\nimport StepApproveControl from './StepApproveControl.vue'\nimport StepSendToChairsControl from './StepSendToChairsControl.vue'\nimport StepRequestRevisionsControl from './StepRequestRevisionsControl.vue'\n\nconst props = defineProps({\n    step: {\n        type: Number,\n        required: true\n    },\n    approveLabel: {\n        type: String,\n        required: false,\n        default: 'Approve'\n    }\n});\n\nconst emit = defineEmits([\n  'updated',\n  'stepApproved',\n  'sentToChairs',\n  'revisionsRequested',\n])\n\nconst store = useStore()\n\nconst group = computed(() => store.getters['groups/currentItemOrNew'])\n\nconst showSendToChairsControl = computed(() => {\n    if (!group.value) {\n        return false;\n    }\n    const latestSubmission = group.value.expert_panel.latestPendingSubmissionForStep(props.step);\n    return latestSubmission\n        && Number.parseInt(latestSubmission.submission_status_id) === 1;\n})\n\n</script>\n\n<template>\n  <div class=\"border-t border-b py-4 mb-6\">\n    <SubmissionInfo class=\"mb-4\" :group=\"group\" :step=\"step\" />\n    <div class=\"flex w-full space-x-4\">\n      <StepApproveControl\n        class=\"flex-1\"\n        :group=\"group\"\n        :step=\"step\"\n        @step-approved=\"() => {emit('stepApproved'); emit('updated')}\"\n      >\n        {{ approveLabel }}\n      </StepApproveControl>\n\n      <StepSendToChairsControl\n        v-if=\"showSendToChairsControl\"\n        class=\"flex-1\"\n        :group=\"group\"\n        @sent-to-chairs=\"() => {emit('sentToChairs'); emit('updated'); }\"\n      />\n\n      <StepRequestRevisionsControl\n        v-if=\"group.expert_panel.hasPendingSubmissionForCurrentStep\"\n        class=\"flex-1\"\n        :group=\"group\"\n        @revisions-requested=\"() => {emit('revisionsRequested'); emit('updated')}\"\n      />\n    </div>\n  </div>\n</template>\n","<script>\nimport { mapGetters } from 'vuex'\nimport { formatDate } from '@/date_utils'\nimport ApplicationLog from '@/components/applications/ApplicationLog.vue'\nimport StepControls from '@/components/applications/StepControls.vue'\nimport RemoveButton from '@/components/buttons/RemoveButton.vue'\nimport is_validation_error from '@/http/is_validation_error'\n\nexport default {\n    components: {\n        ApplicationLog,\n        StepControls,\n        RemoveButton\n    },\n    props: {\n        title: {\n            type: String,\n            required: false,\n            default: 'YOU SHOULD SET A TITLE'\n        },\n        step: {\n            type: Number,\n            required: true\n        },\n        documentName: {\n            type: String,\n            required: false,\n            default: 'Set a document-type attribute if you don\\'t use the \"document\" slot'\n        },\n        documentType: {\n            type: Number,\n            required: false,\n            default: 1\n        },\n        documentGetsReviewed: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        approveButtonLabel: {\n            type: String,\n            required: false,\n            default: 'Set \"approve-button-label\" if not overriding slot \"approve-button\"'\n        }\n    },\n    emits: ['documentUploaded', 'approved', 'updated'],\n    data() {\n        return {\n            showApproveForm: false,\n            editApprovalDate: false,\n            newApprovalDate: null,\n            showRejectForm: false\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        },\n        isCurrentStep () {\n            return Number.parseInt(this.step) === Number.parseInt(this.application.current_step)\n        },\n        dateApproved () {\n            if (this.application.approvalDateForStep(this.step)) {\n                return formatDate(this.application.approvalDateForStep(this.step))\n            }\n\n            return null;\n        },\n    },\n    methods: {\n        goToPrintable () {\n            window.open(`/groups/${this.group.uuid}/application/review`);\n        },\n\n        handleUpdated () {\n            this.$emit('updated');\n        },\n\n        initEditApprovalDate () {\n            this.editApprovalDate = true;\n            this.newApprovalDate = this.dateApproved;\n        },\n        async updateApprovalDate() {\n            try {\n                await this.$store.dispatch(\n                    'groups/updateApprovalDate',\n                    {\n                        group: this.group,\n                        dateApproved: this.newApprovalDate,\n                        step: this.step\n                    }\n                );\n                // this.group.expert_panel.updateApprovalDate(this.newApprovalDate, this.step);\n                this.editApprovalDate = false;\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        }\n    }\n}\n</script>\n\n<template>\n  <div class=\"overflow-x-auto\">\n    <div class=\"mb-6\">\n      <StepControls\n        v-if=\"!application.stepIsApproved(step)\"\n        :step=\"step\"\n        @updated=\"handleUpdated\"\n      />\n      <div class=\"flex justify-between text-lg font-bold pb-2 mb-2 border-b\">\n        <div class=\"flex space-x-2\">\n          <h2>\n            {{ title }}\n          </h2>\n          <div v-if=\"dateApproved\">\n            <div v-if=\"!editApprovalDate\" class=\"flex space-x-1\">\n              <div class=\"text-white bg-green-600 rounded-xl px-2\">\n                Approved: {{ dateApproved }}\n              </div>\n              <edit-icon-button class=\"text-black\" @click=\"initEditApprovalDate\" />\n            </div>\n            <div v-else class=\"flex space-x-1\">\n              <date-input v-model=\"newApprovalDate\" />\n              <button class=\"btn blue\" @click=\"updateApprovalDate\">\n                Save\n              </button>\n              <RemoveButton @click=\"editApprovalDate = false\" />\n            </div>\n          </div>\n        </div>\n        <div>\n          <button class=\"btn btn-xs\" @click=\"goToPrintable\">\n            Printable Application\n          </button>\n        </div>\n      </div>\n\n      <div class=\"screen-block-container\">\n        <slot name=\"sections\">\n          Step sections here!\n        </slot>\n      </div>\n    </div>\n\n    <div>\n      <slot />\n    </div>\n\n    <slot name=\"log\">\n      <div class=\"mb-6 mt-4 border-t pt-4\">\n        <h3 class=\"mb-2\">\n          Step {{ step }} Progress Log\n        </h3>\n        <ApplicationLog :step=\"step\" />\n      </div>\n    </slot>\n  </div>\n</template>\n","<script>\nimport {mapGetters} from 'vuex'\nimport BaseStep from '@/components/applications/BaseStep.vue'\nimport DefinitionReview from '@/components/expert_panels/DefinitionReview.vue'\n\nexport default {\n    name: 'StepOne',\n    components: {\n        BaseStep,\n        DefinitionReview\n    },\n    emits: ['approved', 'updated'],\n    data() {\n        return {\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        },\n    },\n    methods: {\n    }\n}\n</script>\n<template>\n  <div class=\"application-review\">\n    <BaseStep \n      :step=\"1\" \n      document-name=\"Scope and Membership Application\" \n      title=\"Scope and Membership\" \n      :document-type=\"1\" \n      :document-gets-reviewed=\"true\"\n      approve-button-label=\"Approve Scope and Membership\"\n      @updated=\"$emit('updated')\"\n    >\n      <template #sections>\n        <DefinitionReview />\n      </template>\n    </BaseStep>\n  </div>\n</template>","<script>\nimport {mapGetters} from 'vuex'\nimport BaseStep from '@/components/applications/BaseStep.vue'\nimport SpecificationsSection from '@/components/expert_panels/SpecificationsSection.vue'\n\nexport default {\n    name: 'StepTwo',\n    components: {\n        BaseStep,\n        SpecificationsSection\n    },\n    props: {\n\n    },\n    emits: ['approved', 'updated'],\n    data() {\n        return {\n\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        },\n    },\n    methods: {\n\n    }\n}\n</script>\n<template>\n  <BaseStep\n    :step=\"2\"\n    :document-type=\"2\"\n    document-name=\"Draft Specifications\"\n    :document-gets-reviewed=\"false\"\n    approve-button-label=\"Approve Draft Specifications\"\n    title=\"Draft ACMG Guideline Specifications\"\n    @updated=\"$emit('updated')\"\n  >\n    <template #sections>\n      <div class=\"application-section screen-block\">\n        <h2>Draft Specifications</h2>\n        <SpecificationsSection :doc-type-id=\"2\" />\n      </div>\n    </template>\n  </BaseStep>\n</template>\n","<script>\nimport {mapGetters} from 'vuex'\nimport {formatDate} from '@/date_utils'\nimport BaseStep from '@/components/applications/BaseStep.vue'\nimport SpecificationsSection from '../expert_panels/SpecificationsSection.vue'\n\nexport default {\n    name: 'StepThree',\n    components: {\n        BaseStep,\n        SpecificationsSection\n    },\n    props: {\n\n    },\n    emits: ['approved', 'updated'],\n    data() {\n        return {\n\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        },\n    },\n    methods: {\n        formatDate(dateString) {\n            return formatDate(dateString)\n        }\n    }\n}\n</script>\n<template>\n  <BaseStep\n    :step=\"3\"\n    approve-button-label=\"Approve Pilot and Specifications\"\n    title=\"Pilot ACMG Guideline Specificiations\"\n    @updated=\"$emit('updated')\"\n  >\n    <template #sections>\n      <div class=\"application-section screen-block\">\n        <h2>Pilot Specifications</h2>\n        <SpecificationsSection :doc-type-id=\"[3,4,7]\" />\n      </div>\n    </template>\n  </BaseStep>\n</template>\n","<script>\nimport {mapGetters} from 'vuex'\nimport BaseStep from '@/components/applications/BaseStep.vue'\n// import EvidenceSummaryList from '@/components/expert_panels/EvidenceSummaryList.vue'\n// import VcepOngoingPlansForm from '@/components/expert_panels/VcepOngoingPlansForm.vue'\n// import MemberDesignationForm from '@/components/expert_panels/MemberDesignationForm.vue';\nimport SustainedCurationReview from '@/components/expert_panels/SustainedCurationReview.vue'\n\nexport default {\n    name: 'StepFour',\n    components: {\n        BaseStep,\n        // EvidenceSummaryList,\n        // VcepOngoingPlansForm,\n        // MemberDesignationForm,\n        SustainedCurationReview\n    },\n    props: {\n\n    },\n    emits: ['approved', 'updated'],\n    data() {\n        return {\n\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        },\n    },\n    methods: {\n\n    }\n}\n</script>\n<template>\n  <BaseStep\n    :step=\"4\"\n    :document-type=\"5\"\n    document-name=\"Sustained Curation\"\n    :document-gets-reviewed=\"true\"\n    approve-button-label=\"Approve Sustained Curation\"\n    title=\"Sustained Curation\"\n    @updated=\"$emit('updated')\"\n  >\n    <template #sections>\n      <SustainedCurationReview />\n    </template>\n  </BaseStep>\n</template>\n","<script>\nimport { mapGetters } from 'vuex'\nimport StepOne from '@/components/applications/StepOne.vue'\nimport StepTwo from '@/components/applications/StepTwo.vue'\nimport StepThree from '@/components/applications/StepThree.vue'\nimport StepFour from '@/components/applications/StepFour.vue'\n\nexport default {\n    components: {\n        StepOne,\n        StepTwo,\n        StepThree,\n        StepFour,\n    },\n    emits: ['approved', 'updated'],\n    data() {\n        return {\n            activeStep: 1\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        },\n        activeIndex: {\n            deep: true,\n            get() {\n                return (this.application && this.application.current_step) ? this.application.current_step - 1 : 0\n            },\n            set(value) {\n                this.activeStep = value+1\n            }\n\n        }\n    },\n    methods: {\n        handleApproved () {\n            this.$emit('approved');\n            this.$emit('updated');\n        },\n        handleUpdated () {\n            this.$emit('updated')\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <div v-if=\"application.is_gcep\">\n      <StepOne @step-approved=\"handleApproved\" @updated=\"handleUpdated\" />\n    </div>\n    <tabs-container\n      v-if=\"application.expert_panel_type_id == 2\"\n      v-model=\"activeIndex\"\n      tab-location=\"right\"\n    >\n      <tab-item label=\"Group Definition\">\n        <StepOne @step-approved=\"handleApproved\" @updated=\"handleUpdated\" />\n      </tab-item>\n      <tab-item label=\"Draft Specifications\">\n        <StepTwo @step-approved=\"handleApproved\" @updated=\"handleUpdated\" />\n      </tab-item>\n      <tab-item label=\"Pilot Specfications\">\n        <StepThree @step-approved=\"handleApproved\" @updated=\"handleUpdated\" />\n      </tab-item>\n      <tab-item label=\"Sustained Curation\">\n        <StepFour @step-approved=\"handleApproved\" @updated=\"handleUpdated\" />\n      </tab-item>\n    </tabs-container>\n  </div>\n</template>\n"],"names":["fields","_sfc_main","LogEntryForm","store","useStore","group","computed","application","watch","fetchEntries","logEntries","f","entry","_hoisted_2","_hoisted_3","_createElementBlock","$options","_createBlock","_component_data_table","$data","_cache","$event","_withCtx","item","_createElementVNode","_createVNode","_component_router_link","_component_icon_edit","_component_icon_trash","_createCommentVNode","_hoisted_1","_toDisplayString","_component_modal_dialog","_component_LogEntryForm","formatDate","classes","lastStep","_openBlock","_normalizeClass","ProgressStep","_Fragment","_renderList","i","_component_ProgressStep","$props","props","__props","submissions","stepHasBeenSubmitted","latestSubmission","latestJudgements","templateForStep","UserDefinedMailForm","mapGetters","to","api","response","data","isValidationError","_component_form_container","_component_input_row","_component_dictionary_row","_component_static_alert","_createTextVNode","_Transition","_component_UserDefinedMailForm","_component_button_row","args","emits","__emit","attrs","useAttrs","showApproveForm","ref","isCurrentStep","buttonTitle","isAffiliationMissing","id","_b","_a","startApproveStep","hideApproveForm","handleApproved","replyManager","commentManagerFactory","getVariant","comment","showReplyList","toggleReplies","commentsBySection","sections","c","section","commentManager","inject","additionalComments","showModal","initSendToChairs","sendToChairs","cancel","url","rsp","e","rejectsubmissionform","showRejectForm","startRejectSubmission","hideRejectForm","handleRejected","emit","showSendToChairsControl","ApplicationLog","StepControls","RemoveButton","error","is_validation_error","_hoisted_4","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_component_StepControls","_hoisted_5","_hoisted_8","_component_date_input","_component_RemoveButton","_hoisted_6","_component_edit_icon_button","_renderSlot","_ctx","_component_ApplicationLog","BaseStep","DefinitionReview","_component_BaseStep","_component_DefinitionReview","SpecificationsSection","_component_SpecificationsSection","dateString","SustainedCurationReview","_component_SustainedCurationReview","StepOne","StepTwo","StepThree","StepFour","value","_component_StepOne","_component_tabs_container","_component_tab_item","_component_StepTwo","_component_StepThree","_component_StepFour"],"mappings":"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"}