{"version":3,"file":"ScopeDescriptionForm-DkZSwGj9.js","sources":["../../../resources/js/components/expert_panels/AttestationGcep.vue","../../../resources/js/components/expert_panels/AttestationNhgri.vue","../../../resources/js/components/expert_panels/AttestationReanalysis.vue","../../../resources/js/components/expert_panels/GcepGeneList.vue","../../../resources/js/components/expert_panels/MembershipDescriptionForm.vue","../../../resources/js/components/expert_panels/ScopeDescriptionForm.vue"],"sourcesContent":["<script>\nimport {api, isValidationError} from '@/http'\n\nexport default {\n    name: 'AttestationGcep',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            gci_training: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        },\n        gciTrainingErrors () {\n            const trainingErrors = this.errors.gci_training || [];\n            const dateErrors = this.errors.gci_training_date || [];\n            return [...trainingErrors, ...dateErrors];\n        },\n        gci_training_comp () {\n            return Boolean(this.group.expert_panel.gci_training_date)\n        }\n    },\n    watch: {\n        group: {\n            immediate: true,\n            handler (to) {\n                this.gci_training = Boolean(to.expert_panel.gci_training_date)\n            }\n        },\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/gcep`,\n                this.group.expert_panel.attributes)\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        emitUpdate () {\n            this.$emit('update');\n        },\n        checkCompleteness () {\n            if (this.group.expert_panel.utilize_gt\n                && this.group.expert_panel.utilize_gci\n                && this.group.expert_panel.curations_publicly_available\n                && this.group.expert_panel.pub_policy_reviewed\n                && this.group.expert_panel.draft_manuscripts\n                && this.group.expert_panel.recuration_process_review\n                && this.group.expert_panel.biocurator_training\n                && this.group.expert_panel.gci_training_date !== null\n                && this.group.expert_panel.biocurator_mailing_list\n                && this.group.expert_panel.gcep_attestation_date === null\n            ) {\n                this.group.expert_panel.gcep_attestation_date = new Date();\n                return;\n            }\n            this.group.expert_panel.gcep_attestation_date = null;\n        }\n    },\n}\n</script>\n<template>\n  <div>\n    <p>\n      The Gene Curation Expert Panel (GCEP) leaders(s) will complete the checkbox attestations document below on behalf of the GCEP.\n    </p>\n    <ul class=\"ml-4 mt-2\">\n      <li>\n        <input-row :errors=\"errors.utilize_gt\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.utilize_gt\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            This GCEP will utilize the ClinGen Gene Tracker for documentation of all precuration information, consistent with the current Lumping and Splitting working group guidance, for gene-disease relationships.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.utilize_gci\" :hide-label=\"true\">\n          <checkbox\n            v-model=\"group.expert_panel.utilize_gci\"\n            :disabled=\"disabled\"\n            @update:model-value=\"emitUpdate(), checkCompleteness()\"\n          >\n            This GCEP will utilize the ClinGen Gene Curation Interface for documentation of all gene-disease validity classifications.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.curations_publicly_available\" :hide-label=\"true\">\n          <checkbox\n            v-model=\"group.expert_panel.curations_publicly_available\"\n            :disabled=\"disabled\"\n            @update:model-value=\"emitUpdate(), checkCompleteness()\"\n          >\n            All curations completed by this group will be made publicly available through the ClinGen website immediately upon completion.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.pub_policy_reviewed\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.pub_policy_reviewed\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            The <publication-policy-link /> has been reviewed and a manuscript concept sheet will be submitted to the NHGRI and  ClinGen Steering Committee before the group prepares a publication for submission.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.draft_manuscripts\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.draft_manuscripts\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            Draft manuscripts will be submitted to the ClinGen Gene Curation WG for review prior to submission.\n            Email: <a href=\"mailto:genecuration@clinicalgenome.org\">genecuration@clinicalgenome.org</a>\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <input-row :errors=\"errors.recuration_process_review\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.recuration_process_review\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            The ClinGen <gcep-recuration-process-link>Gene-Disease Validity Recuration Process</gcep-recuration-process-link> has been reviewed.\n          </checkbox>\n        </input-row>\n      </li>\n    </ul>\n\n    <p>\n      Biocurators are expected to become familiar with the ClinGen <training-materials-link /> located on <training-materials-link>ClinicalGenome.org</training-materials-link>. Biocurators are requested to join the mailing list for ClinGen Biocurator Working Group, and expected to attend those calls that focus on gene curation SOP and/or framework updates.\n    </p>\n\n    <ul class=\"ml-4 mt-2\">\n      <li>\n        <input-row :errors=\"errors.biocurator_training\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.biocurator_training\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            Biocurators have received training and/or there is a plan in place to train any biocurators who have not received all training yet.\n          </checkbox>\n        </input-row>\n      </li>\n      <li>\n        <checkbox v-model=\"gci_training\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n          Biocurators are trained on the use of the Gene Curation Interface (GCI) and/or there is a plan in place to train any biocurators who are not yet trained on the use of the GCI‚Äù\n        </checkbox>\n        <input-row\n          v-show=\"gci_training\"\n          v-model=\"group.expert_panel.gci_training_date\"\n          :errors=\"gciTrainingErrors\"\n          label=\"Date Trained\"\n          type=\"date\"\n          class=\"ml-6\"\n          @update:model-value=\"emitUpdate(), checkCompleteness()\"\n        />\n      </li>\n      <li>\n        <input-row :errors=\"errors.biocurator_mailing_list\" :hide-label=\"true\">\n          <checkbox v-model=\"group.expert_panel.biocurator_mailing_list\" :disabled=\"disabled\" @update:model-value=\"emitUpdate(), checkCompleteness()\">\n            Biocurators have joined the Biocurator WG mailing list and/or there is a plan in place to have them join mailing list.\n            <br>The calls occur on the 2nd and 4th Thursdays from 12-1pm.\n          </checkbox>\n        </input-row>\n      </li>\n    </ul>\n  </div>\n</template>\n","<script>\nimport api from '@/http/api';\nimport is_validation_error from '../../http/is_validation_error';\n\nexport default {\n    name: 'NHGRIDataAvailability',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value);\n            }\n        },\n        attestation: {\n            get () {\n                return Boolean(this.group.expert_panel.nhgri_attestation_date);\n            },\n            set (value) {\n                if (value) {\n                    this.group.expert_panel.nhgri_attestation_date = new Date();\n                } else {\n                    this.group.expert_panel.nhgri_attestation_date = null;\n                }\n                this.$emit('update');\n            }\n        },\n        checkboxLabel () {\n            if (this.group.is_vcep) {\n                return \"I understand that once a variant is approved in the VCI it will become publicly available in the Evidence Repository. They should not be held for publication.\"\n            }\n\n            return \"Please check box to confirm your understanding that once a gene is approved in the GCI, the group should utilize the ‚Äúpublish‚Äù functionality within the GCI to make the curation publicly available on the ClinGen website (https://clinicalgenome.org/). They should not be held for publication.\"\n        }\n    },\n    methods: {\n        async save () {\n            if (this.attestation) {\n                try {\n                    await api.post(`/api/groups/${this.group.uuid}/application/attestations/nhgri`, {'attestation': this.attestation})\n                } catch (error) {\n                    if (is_validation_error(error)) {\n                        this.errors = error.response.data.errors\n                    }\n                }\n            }\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <p v-if=\"group.is_vcep\">\n      Curated variants and genes are expected to be approved and posted for the community as soon as possible as described in Section 2.4 of the <vcep-protocol-link />.\n      Note that upon approval, a VCEP must finalize their set of variants for upload to the ClinGen Evidence Repository within 30 days.\n    </p>\n    <p v-if=\"group.is_gcep\">\n      Curated genes and variants are expected to be approved and posted for the community as soon as possible and should not wait for the publication of a manuscript.\n    </p>\n\n    <p class=\"my-4\">\n      <input-row label=\"\" :vertical=\"true\">\n        <checkbox\n          id=\"nhgri-checkbox\"\n          v-model=\"attestation\"\n          :disabled=\"disabled\"\n          :label=\"checkboxLabel\"\n        />\n      </input-row>\n    </p>\n\n    <p v-if=\"group.is_vcep_or_scvcep\">\n      Please review the\n      <publication-policy-link />\n      and refer to guidance on submissions to a preprint server (e.g. bioRxiv or medRxiv).\n    </p>\n    <p v-if=\"group.is_gcep\">\n      <em>It is expected that, whenever possible, Expert Panel manuscripts will be pre-published (e.g. medRXiv) . If the authors do not anticipate submitting their manuscript to a prepublication resource they must provide a written justification.</em>\n    </p>\n  </div>\n</template>\n","<script>\nimport api from '@/http/api'\nimport is_validation_error from '../../http/is_validation_error'\n\nexport default {\n    name: 'ReanalysisForm',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            otherCheckbox: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            }, \n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        }\n    },\n    watch: {\n        otherCheckbox (to) {\n            if (!to) {\n                this.group.expert_panel.reanalysis_other = null;\n            }\n        }\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/reanalysis`, this.group.expert_panel)\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        checkCompleteness () {\n\t\t\tconst checkedStandard =\n\t\t\t\tthis.group.expert_panel.reanalysis_conflicting &&\n\t\t\t\tthis.group.expert_panel.reanalysis_review_lp &&\n\t\t\t\tthis.group.expert_panel.reanalysis_review_lb;\n\n\t\t\tconst hasOtherExplanation =\n\t\t\t\tthis.otherCheckbox &&\t\t\t\t\n\t\t\t\tthis.group.expert_panel.reanalysis_other.trim().length >= 5;\n\n\t\t\tif (\n\t\t\t\t(checkedStandard || hasOtherExplanation) &&\n\t\t\t\tthis.group.expert_panel.gcep_attestation_date === null\n\t\t\t) {\n\t\t\t\tthis.group.expert_panel.reanalysis_attestation_date = new Date();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.group.expert_panel.reanalysis_attestation_date = null;\n\t\t}\n    }\n}\n</script>\n<template>\n\t<div>\n\t\t<p>\n\t\t\tExpert Panels are expected to keep their variant interpretations up-to-date and to expedite the re-review of variants that have a conflicting assertion submitted to ClinVar after the Expert Panel submission. Please check all 3 boxes below to attest that the VCEP will follow the ClinGen-approved schedule described below <strong><em>or</em></strong> describe other plans at the bottom of the section.\n\t\t</p>\n\t\t<ul class=\"ml-4 mt-2\">\n\t\t\t<li>\n\t\t\t\t<input-row :errors=\"errors.reanalysis_conflicting\" :hide-label=\"true\">\n\t\t\t\t\t<checkbox v-model=\"group.expert_panel.reanalysis_conflicting\" :disabled=\"disabled\" @update:model-value=\"$emit('update'), checkCompleteness()\">\n\t\t\t\t\t\tVCEPs are expected to reassess any newly submitted conflicting assertion in ClinVar from a one star submitter or above and attempt to resolve or address the conflict within 6 months of being notified about the conflict from ClinGen. Please reach out to the submitter if you need additional information about the conflicting assertion.\n\t\t\t\t\t</checkbox>\n\t\t\t\t</input-row>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<input-row :errors=\"errors.reanalysis_review_lp\" :hide-label=\"true\">\n\t\t\t\t\t<checkbox v-model=\"group.expert_panel.reanalysis_review_lp\" :disabled=\"disabled\" @update:model-value=\"$emit('update'), checkCompleteness()\">\n\t\t\t\t\t\tVCEPs are expected to re-review all LP and VUS classifications made by the EP at least every 2 years to see if new evidence has emerged to re-classify the variants\n\t\t\t\t\t</checkbox>\n\t\t\t\t</input-row>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<input-row :errors=\"errors.reanalysis_review_lb\" :hide-label=\"true\">\n\t\t\t\t\t<checkbox v-model=\"group.expert_panel.reanalysis_review_lb\" :disabled=\"disabled\" @update:model-value=\"$emit('update'), checkCompleteness()\">\n\t\t\t\t\t\tVCEPs are expected to re-review any LB classifications when new evidence is available or when requested by the public via the ClinGen website.\n\t\t\t\t\t</checkbox>\n\t\t\t\t</input-row>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<input-row :errors=\"errors.reanalysis_other\" :hide-label=\"true\">\n\t\t\t\t\t<checkbox v-model=\"otherCheckbox\" :disabled=\"disabled\" @update:model-value=\"$emit('update'), checkCompleteness()\">\n\t\t\t\t\t\tPlans differ from the expectations above.\n\t\t\t\t\t</checkbox>\n\t\t\t\t\t<transition name=\"slide-fade-down\">\n\t\t\t\t\t\t<div v-if=\"otherCheckbox\" class=\"ml-4\">\n\t\t\t\t\t\t<label for=\"reanalysis-other-textarea\">Explain differences:</label>\n\t\t\t\t\t\t<textarea \n\t\t\t\t\t\t\tid=\"reanalysis-other-textarea\" \n\t\t\t\t\t\t\tv-model=\"group.expert_panel.reanalysis_other\"\n\t\t\t\t\t\t\tclass=\"w-full\"\n\t\t\t\t\t\t\t:disabled=\"disabled\"\n\t\t\t\t\t\t\t@update:model-value=\"$emit('update'), checkCompleteness()\"\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</transition>\n\t\t\t\t</input-row>\n\t\t\t</li>\n\t\t</ul>\n\t</div>\n</template>","<script>\nimport {ref, watch, computed, onMounted} from 'vue';\nimport {useStore} from 'vuex';\nimport formFactory from '@/forms/form_factory'\nimport is_validation_error from '@/http/is_validation_error'\nimport api from '@/http/api'\nimport GeneCurationStatus from './GeneCurationStatus.vue';\n\nexport default {\n    name: 'GcepGeneList',\n    components: {\n        GeneCurationStatus\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n        'update:editing',\n        'geneschanged',\n        'update'\n    ],\n    setup(props, context) {\n        const store = useStore();\n\n        const loading = ref(false);\n        const genesAsText = ref(null);\n        const geneCheckResults = ref([]);\n        const activeTab = ref('published');\n\n        const {errors, resetErrors} = formFactory(props, context)\n\n        const group = computed({\n            get() {\n                return store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                store.commit('groups/addItem', value)\n            }\n        });\n\n        const getGenes = async () => {\n            if (!group.value.uuid) {\n                return;\n            }\n            loading.value = true;\n            try {\n                await store.dispatch('groups/getGenes', group.value);\n                genesAsText.value = group.value.expert_panel.genes.map(g => g.gene_symbol).join(\", \");\n                geneCheckResults.value = group.value.expert_panel.genes;\n            } catch (error) {\n                let message = 'An unexpected error occurred.';\n    \n                if (error.response) {\n                    if (typeof error.response.data === 'string') {\n                        message = error.response.data;\n                    } else if (error.response.data?.message) {\n                        message = error.response.data.message;\n                    } else if (Array.isArray(error.response.data?.errors)) {\n                        message = error.response.data.errors.join(', ');\n                    } else if (typeof error.response.data === 'object') {\n                        message = JSON.stringify(error.response.data);\n                    }\n                } else if (error.message) {\n                    message = error.message;\n                }\n\n                store.commit('pushError', message);\n            }\n            loading.value = false;\n            \n        }\n        const hideForm = () => {\n            context.emit('update:editing', false);\n            errors.value = {};\n        }\n        const cancel = () => {\n            resetErrors();\n            getGenes();\n            hideForm();\n            context.emit('canceled');\n        }\n\n        const syncGenesAsText = () => {\n            if (!group.value.expert_panel) {\n                return;\n            }\n            genesAsText.value = group.value.expert_panel.genes\n                ? group.value.expertPanel.genes.join(', ')\n                : null\n        };\n        const save = async () => {\n            const genes = genesAsText.value \n                            ? genesAsText.value\n                                .split(/[, \\n]/)\n                                .filter(i => i !== '')\n                            : [];\n\n            try {\n                await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, {genes});                \n                hideForm();\n                context.emit('saved')\n                await getGenes();\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    const messages = error.response.data.errors\n                    if (messages.group) {\n                        messages.group\n                            .forEach(m => {\n                                store.pushError(m)\n                            })\n                    }\n                    const geneMessages = Object.keys(messages).map(key => {\n                        const [g, geneIdx] = key.split('.')\n                        if (g === 'genes') {\n                            if (geneIdx) {\n                                return `Gene #${(Number.parseInt(geneIdx)+1)}, \"${genes[geneIdx]}\" wasn't found in our records.  Please confirm it is currently an approved HGNC gene symbol.`\n                            }\n                            return messages[key];\n                        }\n                        return `Gene validation error: ${key}`;\n                    });\n                    errors.value = {\n                        genes: geneMessages\n                    }\n                }\n            }\n        };\n\n        watch(() => store.getters['groups/currentItem'], (to, from) => {\n            if (to.id && (!from || to.id !== from.id)) {\n                // syncGenesAsText();\n                getGenes();\n            }\n        })\n\n        onMounted(() => {\n            getGenes();\n        })\n\n        watch(() => group.value.expert_panel.genes, () => {\n            // syncGenesAsText();\n        })\n\n        return {\n            group,\n            genesAsText,\n            loading,\n            errors,\n            resetErrors,\n            hideForm,\n            cancel,\n            syncGenesAsText,\n            save,\n            geneCheckResults,\n            activeTab\n        }\n    },\n    computed: {\n        canEdit () {\n            return this.hasAnyPermission(['groups-manage', ['application-edit', this.group]]);\n        }\n    },\n    methods: {\n        showForm () {\n            if (this.canEdit) {\n                this.resetErrors();\n                this.$emit('update:editing', true);\n            }\n        }\n\n    }\n}\n</script>\n<template>\n    <div>\n        <h4 class=\"flex justify-between mb-2\">\n            Gene List\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing && !readonly\"\n                @click=\"showForm\"\n            />\n        </h4>\n        <div v-if=\"editing\">\n            <input-row \n                v-model=\"genesAsText\"\n                type=\"large-text\"\n                label=\"List the gene symbols for the genes the Expert Panel plans to curate.  Separate genes by commas, spaces, or new lines.\"\n                :errors=\"errors.genes\"\n                placeholder=\"ABC, DEF1, BEAN\"\n                vertical\n                @update:model-value=\"$emit('geneschanged'); $emit('update')\"\n            />\n            \n        </div>\n        <div v-else>\n            <p v-if=\"genesAsText\" style=\"text-indent: 1rem;\">\n                {{ genesAsText }}\n            </p>\n            <div v-else class=\"well cursor-pointer\" @click=\"showForm\">\n                {{ loading ? `Loading...` : `No genes have been added to the gene list.` }}\n            </div>\n        </div>\n        <div v-if=\"geneCheckResults.length\">\n            <GeneCurationStatus :genes=\"geneCheckResults\" :groupID=\"group.uuid\" :editing=\"editing\" :readonly=\"readonly\" />\n        </div>\n    </div>\n</template>","<script>\nimport EditIconButton from '@/components/buttons/EditIconButton.vue'\nimport RichTextEditor from '@/components/prosekit/RichTextEditor.vue'\nimport DOMPurify from 'dompurify';\n\nexport default {\n    name: 'MembershipDescriptionForm',\n    components: {\n        EditIconButton,\n        RichTextEditor,\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({})\n        }\n    },\n    emits: [\n        'update:editing',\n        'saved',\n        'canceled',\n        'update'\n    ],\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value);\n            }\n        },\n        sanitizedMembershipDescription () {\n            return DOMPurify.sanitize(this.group.expert_panel.membership_description);\n        },\n    },\n    methods: {\n        emitUpdate () {\n            this.$emit('update');\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <header class=\"flex justify-between items-center\">\n      <h4>Description of Expertise</h4>\n      <EditIconButton \n        v-if=\"hasAnyPermission(['groups-manage'], ['edit-info', group]) && !editing\"\n        @click=\"$emit('update:editing', true)\"\n      />\n    </header>\n    <div class=\"mt-4\">\n      <p class=\"text-sm\">\n        Describe the expertise of VCEP members who regularly use the ACMG/AMP guidelines to classify variants and/or review variants during clinical laboratory case sign-out.\n      </p>\n      <transition name=\"fade\" mode=\"out-in\">\n        <div v-if=\"editing\" class=\"mt-2\">\n          <RichTextEditor\n            v-model=\"group.expert_panel.membership_description\"\n            @update:model-value=\"emitUpdate\"\n          />\n        </div>\n        <div v-else class=\"border-2 mt-8 p-2\">\n          <div v-if=\"group.expert_panel.membership_description\" v-html=\"sanitizedMembershipDescription\" />\n          <p v-else class=\"well cursor-pointer\" @click=\"showForm\">\n            A description of expertise has not yet been provided.\n          </p>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>","<script>\nimport Group from '@/domain/group'\nimport GcepQuickGuideLink from '../links/GcepQuickGuideLink.vue';\nimport VcepProtocolLink from '../links/VcepProtocolLink.vue';\nimport EditIconButton from '@/components/buttons/EditIconButton.vue'\nimport RichTextEditor from '@/components/prosekit/RichTextEditor.vue'\nimport DOMPurify from 'dompurify';\n\nexport default {\n    name: \"ScopeDescriptionForm\",\n    components: {\n        GcepQuickGuideLink,\n        VcepProtocolLink,\n        EditIconButton,\n        RichTextEditor,\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({}),\n        },\n    },\n    emits: [\n        \"update:editing\",\n        \"update:group\",\n        \"update\"\n    ],\n    computed: {\n        group: {\n            get() {\n                return this.$store.getters[\"groups/currentItem\"] || new Group();\n            },\n            set(value) {\n                this.$store.commit(\"groups/addItem\", value);\n            }\n        },\n        sanitizedScopeDescription() {\n            return DOMPurify.sanitize(this.group.expert_panel.scope_description);\n        },\n    }\n}\n</script>\n<template>\n  <div>\n    <header class=\"flex justify-between items-center\">\n      <h4>Description of Scope</h4>\n      <EditIconButton \n        v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing\"\n        @click=\"$emit('update:editing', true)\"\n      />\n    </header>\n    <div class=\"mt-2\">\n      <p class=\"text-sm\">\n        Describe the scope of work of the Expert Panel including\n        the disease area(s), genes being addressed, and any\n        specific rationale for choosing the condition(s). See the\n        <VcepProtocolLink v-if=\"group.is_vcep_or_scvcep\" />\n        <GcepQuickGuideLink v-if=\"group.is_gcep\" /> for more\n        information.\n      </p>\n      <transition name=\"fade\" mode=\"out-in\">\n        <div v-if=\"editing\" class=\"mt-2\">\n          <RichTextEditor\n            v-model=\"group.expert_panel.scope_description\"\n            @update:model-value=\"$emit('update')\"\n          />\n        </div>\n        <div v-else class=\"border-2 mt-8 p-2\">\n          <div v-if=\"group.expert_panel.scope_description\" v-html=\"sanitizedScopeDescription\" />\n          <p v-else class=\"well cursor-pointer\" @click=\"showForm\">\n            A description of scope has not yet been provided.\n          </p>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>"],"names":["_sfc_main","value","trainingErrors","dateErrors","to","api","error","isValidationError","_hoisted_1","_hoisted_2","_createElementBlock","_cache","_createElementVNode","_createVNode","_component_input_row","$data","_withCtx","_component_checkbox","$options","$event","$props","_createTextVNode","_component_publication_policy_link","_component_gcep_recuration_process_link","_component_training_materials_link","is_validation_error","_hoisted_3","_openBlock","_component_vcep_protocol_link","_createCommentVNode","_hoisted_4","_hoisted_5","checkedStandard","hasOtherExplanation","_ctx","_Transition","GeneCurationStatus","props","context","store","useStore","loading","ref","genesAsText","geneCheckResults","activeTab","errors","resetErrors","formFactory","group","computed","getGenes","g","message","_a","_b","hideForm","cancel","syncGenesAsText","save","genes","i","messages","m","geneMessages","key","geneIdx","watch","from","onMounted","$setup","_createBlock","_component_edit_icon_button","_toDisplayString","args","_component_GeneCurationStatus","EditIconButton","RichTextEditor","DOMPurify","_component_EditIconButton","_component_RichTextEditor","GcepQuickGuideLink","VcepProtocolLink","Group","_hoisted_6","_component_VcepProtocolLink","_component_GcepQuickGuideLink"],"mappings":"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"}