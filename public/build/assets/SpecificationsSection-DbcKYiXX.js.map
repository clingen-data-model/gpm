{"version":3,"file":"SpecificationsSection-DbcKYiXX.js","sources":["../../../resources/js/components/expert_panels/GeneCurationStatus.vue","../../../resources/js/components/expert_panels/VcepGeneList.vue","../../../resources/js/components/expert_panels/CspecSummary.vue","../../../resources/js/components/applications/documents/ApplicationUploadForm.vue","../../../resources/js/components/expert_panels/SpecificationsSection.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport api from '@/http/api'\n\nconst props = defineProps({\n    genes: {\n        type: Array,\n        required: true,\n        default: () => [],\n    },\n\tgroupID: {\n\t\ttype: String,\n\t\trequired: true\n\t},\n\tediting: {\n\t\ttype: Boolean,\n\t\tdefault: true\n\t},\n\treadonly: {\n\t\ttype: Boolean,\n\t\tdefault: false\n\t}\n\n})\n\nconst store = useStore()\n\n// State\nconst search = ref('')\nconst currentPage = ref(1)\nconst pageSize = ref(20)\nconst savingTierFor = ref(null)\nconst expanded = ref([])\nconst selectedGenes = ref([]) // For bulk selection\nconst bulkTier = ref('')\nconst savingBulk = ref(false)\n\n// Sorting\nconst sortKey = ref('gene_symbol')\nconst sortOrder = ref('asc')\n\n// Filter Status\nconst selectedStatus = ref('')\n\n// Status priority mapping\nconst statusPriority = {\n    'Not Curated': 0,\n\t'Uploaded': 1,\n    'Precuration': 2,\n    'Disease entity assigned': 3,\n    'Precuration Complete': 4,\n    'Curation Provisional': 5,\n    'Curation Approved': 6,\n    'Recuration assigned': 7,\n    'Retired Assignment': 8,\n    'Published': 9\n}\n\nconst allStatuses = computed(() => {\n    const set = new Set();\n    props.genes.forEach(g => g.statuses.forEach(s => set.add(s)));\n    return Array.from(set).sort((a, b) => statusPriority[a] - statusPriority[b]);\n});\n\n// Filter genes\nconst filteredGenes = computed(() => {\n    const keyword = search.value.toLowerCase()\n    return props.genes.filter(gene => {        \n        const symbolMatch = gene.gene_symbol.toLowerCase().includes(keyword)\n        const statusMatch = gene.statuses.some(status =>\n            status.toLowerCase().includes(keyword)\n        )\n\n        // Apply search\n        const matchesSearch = !search.value || symbolMatch || statusMatch\n\n        // Apply status filter\n        const matchesStatus = !selectedStatus.value || gene.statuses.includes(selectedStatus.value)\n\n        return matchesSearch && matchesStatus\n    })\n})\n\n// Sort genes\nconst sortedGenes = computed(() => {\n    return [...filteredGenes.value].sort((a, b) => {\n        let aVal, bVal\n        if (sortKey.value === 'statuses') {\n            const maxA = Math.max(...a.statuses.map(s => statusPriority[s] || 0))\n            const maxB = Math.max(...b.statuses.map(s => statusPriority[s] || 0))\n            aVal = maxA\n            bVal = maxB\n        } else if (sortKey.value === 'tier') {\n            aVal = a.tier || 0\n            bVal = b.tier || 0\n        } else {\n            aVal = a.gene_symbol\n            bVal = b.gene_symbol\n        }\n        return sortOrder.value === 'asc' ? (aVal > bVal ? 1 : -1) : (aVal < bVal ? 1 : -1)\n    })\n})\n\n// Pagination\nconst totalPages = computed(() => Math.ceil(sortedGenes.value.length / pageSize.value))\nconst paginatedGenes = computed(() => {\n    const start = (currentPage.value - 1) * pageSize.value\n    return sortedGenes.value.slice(start, start + pageSize.value)\n})\n\n// Expand row\nconst toggleExpanded = index => {\n    if (expanded.value.includes(index)) {\n        expanded.value = expanded.value.filter(i => i !== index)\n    } else {\n        expanded.value.push(index)\n    }\n}\n\n// Selection\nconst toggleSelect = geneId => {\n    if (selectedGenes.value.includes(geneId)) {\n        selectedGenes.value = selectedGenes.value.filter(id => id !== geneId)\n    } else {\n        selectedGenes.value.push(geneId)\n    }\n}\n\nconst toggleSelectAll = () => {\n    const idsOnPage = paginatedGenes.value.map(g => g.id)\n    const allSelected = idsOnPage.every(id => selectedGenes.value.includes(id))\n    if (allSelected) {\n        selectedGenes.value = selectedGenes.value.filter(id => !idsOnPage.includes(id))\n    } else {\n        selectedGenes.value = [...new Set([...selectedGenes.value, ...idsOnPage])]\n    }\n}\n\nconst isAllSelected = computed(() =>\n    paginatedGenes.value.every(g => selectedGenes.value.includes(g.id))\n)\n\n// Update single tier\nconst updateTier = async gene => {\n\tconsole.log(props.groupID)\n\tif (props.readonly || !props.editing) return\n    savingTierFor.value = gene.id\n\tconst oldTier = gene.tier\n    try {\n        await api.put(`/api/groups/${props.groupID}/expert-panel/genes/update-tier`, {\n\t\t\tids: [gene.id],\n\t\t\ttier: gene.tier || null\n\t\t})\n\t\tstore.commit('pushSuccess', `Tier updated for ${gene.gene_symbol}`)\n    } catch (error) {\n\t\tgene.tier = oldTier\n        store.commit('pushError', `Failed to update tier for ${gene.gene_symbol}`)\n\t\tconsole.error(error.response?.data || error.message)\n    } finally {\n        savingTierFor.value = null\n    }\n}\n\n// Bulk update tier\nconst applyBulkTier = async () => {\t\n    if (!bulkTier.value || selectedGenes.value.length === 0) return\n    savingBulk.value = true\n    try {\n        await api.put(`/api/groups/${props.groupID}/expert-panel/genes/update-tier`, {\n\t\t\tids: selectedGenes.value,\n\t\t\ttier: bulkTier.value\n\t\t})\n\t\tstore.commit('pushSuccess', `Tier updated for ${selectedGenes.value.length} genes`)\n\t\t// Update local state so dropdowns reflect the new tier\n\t\tprops.genes.forEach(g => {\n\t\t\tif (selectedGenes.value.includes(g.id)) {\n\t\t\t\tg.tier = bulkTier.value\n\t\t\t}\n\t\t})\n\t\tselectedGenes.value = []\n\t\tbulkTier.value = ''\n    } catch (error) {\n        store.commit('pushError', 'Failed to update tiers in bulk')\n    } finally {\n        savingBulk.value = false\n    }\n}\n\n// Change sorting\nconst changeSort = key => {\n    if (sortKey.value === key) {\n        sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc'\n    } else {\n        sortKey.value = key\n        sortOrder.value = 'asc'\n    }\n}\n</script>\n\n<template>\n<div class=\"space-y-4\">\n    <!-- Search and Page Size -->\n    <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2\">\n\t\t<!-- Search -->\n\t\t<input\n\t\t\tv-model=\"search\"\n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"Search gene or status...\"\n\t\t\tclass=\"border px-3 py-1.5 rounded text-sm w-full sm:w-64\"\n\t\t/>\n\n\t\t<!-- Status Filter Dropdown -->\n\t\t<div class=\"flex items-center gap-2\">\n\t\t\t<label class=\"text-sm\">Filter by Status:</label>\n\t\t\t<select v-model=\"selectedStatus\" class=\"border rounded px-2 py-1 text-sm\">\n\t\t\t\t<option value=\"\">All</option>\n\t\t\t\t<option v-for=\"status in allStatuses\" :key=\"status\" :value=\"status\">{{ status }}</option>\n\t\t\t</select>\n\t\t</div>\n\n\t\t<!-- Page Size -->\n\t\t<div class=\"flex items-center gap-2\">\n\t\t\t<label class=\"text-sm\">Page size:</label>\n\t\t\t<select v-model=\"pageSize\" class=\"border px-2 py-1 rounded text-sm\">\n\t\t\t\t<option v-for=\"size in [20, 50, 100]\" :key=\"size\" :value=\"size\">{{ size }}</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\n    <!-- Bulk Action Bar -->\n    <div v-if=\"selectedGenes.length > 0 && editing && !readonly\" class=\"flex items-center gap-2 bg-gray-50 p-3 border rounded mb-3\">\n\t\t<span class=\"font-semibold\">Bulk Tier Update:</span>\n\t\t<select v-model=\"bulkTier\" class=\"border rounded px-2 py-1 text-sm\">\n\t\t\t<option value=\"\">Select Tier</option>\n\t\t\t<option value=\"1\">Tier 1</option>\n\t\t\t<option value=\"2\">Tier 2</option>\n\t\t\t<option value=\"3\">Tier 3</option>\n\t\t\t<option value=\"4\">Tier 4</option>\n\t\t</select>\n\t\t<button \n\t\t\tclass=\"bg-blue-600 text-white px-3 py-1 rounded disabled:opacity-50\" \n\t\t\t@click=\"applyBulkTier\" \n\t\t\t:disabled=\"!bulkTier || selectedGenes.length === 0\"\n\t\t>\n\t\t\tApply\n\t\t</button>\n\t</div>\n\n    <!-- Table -->\n    <div class=\"border\">\n        <table class=\"table-auto w-full border min-w-full\">\n            <thead class=\"bg-gray-100 sticky top-0 z-10\">\n                <tr>\n                    <th v-if=\"editing && !readonly\" class=\"px-2\"><input type=\"checkbox\" :checked=\"isAllSelected\" @change=\"toggleSelectAll\" :disabled=\"readonly || !editing\" /></th>\n                    <th class=\"text-left px-4 py-2 cursor-pointer\" @click=\"changeSort('gene_symbol')\">\n                        Gene <span v-if=\"sortKey==='gene_symbol'\">{{ sortOrder==='asc'?'▲':'▼' }}</span>\n                    </th>\n                    <th class=\"text-left px-4 py-2 cursor-pointer\" @click=\"changeSort('statuses')\">\n                        Statuses <span v-if=\"sortKey==='statuses'\">{{ sortOrder==='asc'?'▲':'▼' }}</span>\n                    </th>\n                    <th class=\"text-left px-4 py-2 cursor-pointer\" @click=\"changeSort('tier')\">\n                        Tier <span v-if=\"sortKey==='tier'\">{{ sortOrder==='asc'?'▲':'▼' }}</span>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <template v-for=\"(gene, index) in paginatedGenes\" :key=\"gene.id\">\n                    <tr class=\"hover:bg-gray-50\">\n                        <td class=\"px-2\" v-if=\"editing && !readonly\">\n                            <input type=\"checkbox\" :checked=\"selectedGenes.includes(gene.id)\" @change=\"toggleSelect(gene.id)\" :disabled=\"readonly || !editing\" />\n                        </td>\n                        <td \n                            class=\"font-mono text-blue-800 px-4 py-2\" \n                            :class=\"{ 'cursor-pointer': gene.details.length > 0, 'cursor-default': gene.details.length === 0 }\"\n                            @click=\"gene.details.length > 0 && toggleExpanded(index)\">\n                            {{ gene.gene_symbol }}\n                        </td>\n                        <td \n                            class=\"px-4 py-2\" \n                            :class=\"{ 'cursor-pointer': gene.details.length > 0, 'cursor-default': gene.details.length === 0 }\"\n                            @click=\"gene.details.length > 0 && toggleExpanded(index)\">\n                            {{ gene.statuses.join(', ') }} ({{ gene.details.length }})\n                        </td>\n                        <td class=\"px-4 py-2\">\n                            <template v-if=\"!readonly && editing\">\n                                <select v-model=\"gene.tier\" class=\"border rounded px-1 py-0.5\" @change=\"updateTier(gene)\" :disabled=\"savingTierFor === gene.id || readonly || !editing\">\n                                    <option value=\"\">—</option>\n                                    <option value=\"1\">Tier 1</option>\n                                    <option value=\"2\">Tier 2</option>\n                                    <option value=\"3\">Tier 3</option>\n                                    <option value=\"4\">Tier 4</option>\n                                </select>\n                                <span v-if=\"savingTierFor === gene.id\" class=\"ml-2 text-gray-500\">Saving...</span>\n                            </template>\n                            <span v-else>{{ gene.tier || '—' }}</span>\n                        </td>\n                    </tr>\n\n                    <!-- Expanded details -->\n                    <tr v-if=\"expanded.includes(index)\">\n                        <td colspan=\"4\" class=\"bg-gray-100 px-6 py-3 text-sm\">\n                            <div v-for=\"entry in gene.details\" :key=\"entry.disease + entry.curation_status\" class=\"mb-2\">\n                                <div class=\"grid grid-cols-2 text-sm text-gray-700\">\n                                    <div><strong>Status:</strong> {{ entry.curation_status }}</div>\n                                    <div><strong>Status Date:</strong> {{ \n                                    new Date(entry?.date_approved).toLocaleString('en-US', {\n                                        year: 'numeric',\n                                        month: 'short',\n                                        day: 'numeric',\n                                        hour: 'numeric',\n                                        minute: '2-digit',\n                                        hour12: true })\n                                        }}\n                                    </div>\n                                    <div><strong>Disease:</strong> {{ entry.mondo_id }} {{ entry.disease }}</div>\n                                    <div><strong>Expert Panel:</strong> {{ entry.expert_panel }}</div>\n                                    <div><strong>Classification:</strong> {{ entry.classification }}</div>\n                                    <div><strong>MOI:</strong> {{ entry.moi }}</div>\n                                    <div><strong>Type:</strong> {{ entry.curation_type }}</div>\n                                    <div><strong>Phenotype:</strong> {{ entry.phenotypes }}</div>\n                                </div>\n                                <hr />\n                            </div>\n                        </td>\n                    </tr>\n                </template>\n            </tbody>\n        </table>\n    </div>\n\n    <!-- Pagination -->\n    <div class=\"flex justify-center items-center gap-2 mt-4\">\n        <button @click=\"currentPage--\" :disabled=\"currentPage === 1\" class=\"btn\">Prev</button>\n        <span class=\"text-sm\">Page {{ currentPage }} / {{ totalPages }}</span>\n        <button @click=\"currentPage++\" :disabled=\"currentPage === totalPages\" class=\"btn\">Next</button>\n    </div>\n</div>\n</template>\n","<template>\n<div>\n    <!-- Header controls -->\n    <div class=\"flex justify-between items-center mb-4\">\n        <div v-if=\"editing\" class=\"flex items-center gap-2\">\n            <button class=\"btn blue\" @click=\"startAdd\" :disabled=\"isFormVisible\">\n                + Add Gene\n            </button>\n        </div>\n\n        <div class=\"flex items-center gap-4\">\n            <!-- Search -->\n            <input\n                v-model=\"search\"\n                type=\"text\"\n                placeholder=\"Search genes, diseases, MOI, notes...\"\n                class=\"border rounded px-2 py-1 text-sm\"\n            />\n\n            <!-- MOI Filter -->\n            <select v-model=\"filterMoi\" class=\"border p-1 rounded text-sm\">\n                <option value=\"\">All MOIs</option>\n                <option v-for=\"moi in moiOptions\" :key=\"moi\" :value=\"moi\">{{ moi }}</option>\n            </select>\n\n            <!-- Classification Filter -->\n            <select v-model=\"filterClassification\" class=\"border p-1 rounded text-sm\">\n                <option value=\"\">All Classifications</option>\n                <option v-for=\"c in classificationOptions\" :key=\"c\" :value=\"c\">{{ c }}</option>\n            </select>\n\n            <!-- Page size -->\n            <div class=\"flex items-center gap-2\">\n                <label class=\"text-sm\">Page size:</label>\n                <select v-model=\"pageSize\" class=\"border px-2 py-1 rounded text-sm\">\n                    <option v-for=\"size in [20, 50, 100]\" :key=\"size\" :value=\"size\">{{ size }}</option>\n                </select>\n            </div>\n        </div>\n    </div>\n\n    <!-- Add/Edit Form -->\n    <transition name=\"fade\">\n        <div v-if=\"isFormVisible\" class=\"border rounded bg-gray-50 p-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-3\">\n                {{ isEditing ? 'Edit Gene' : 'Add Gene' }}\n            </h3>\n\n            <div v-if=\"!formGene?.is_other\" class=\"space-y-2\">\n                <label class=\"block font-semibold\">Select Gene-Disease-MOI:</label>\n                <CuratedGeneSearchSelect\n                    v-model=\"formGene\"\n                    @update:model-value=\"handleCuratedSelection\"\n                    placeholder=\"Search curated Gene-Disease-MOI\"\n                    class=\"w-full\"\n                    :key=\"curatedGeneKey\"\n                />\n                <button\n                    type=\"button\"\n                    class=\"text-blue-600 underline text-sm hover:text-blue-800\"\n                    @click=\"selectOther\"\n                >\n                    Click here for <strong>Other (Not Curated)</strong>\n                </button>\n\n                <!-- Curated plan required for Moderate/Limited -->\n                <div\n                    v-if=\"formGene?.requires_plan\"\n                    class=\"mt-3 border rounded bg-amber-50 p-3\"\n                    >\n                    <div class=\"flex items-start gap-2 mb-2\">\n                        <span class=\"text-orange-500 font-bold\">⚠</span>\n                        <div class=\"text-sm text-gray-800\">\n                        This gene’s classification is <strong>{{ formGene.plan?.classification }}</strong>.  \n                        Please describe your plan for curation.\n                        </div>\n                    </div>\n\n                    <label class=\"block text-sm font-medium mb-1\">Plan for Curation *</label>\n                    <RichTextEditor\n                        v-model=\"formGene.curated_plan_text\"\n                        placeholder=\"Describe your plan (min 20 characters)\"\n                        class=\"w-full\"\n                    />\n                    <p v-if=\"!isCuratedPlanValid\" class=\"text-xs text-red-500 mt-1\">\n                        Plan must be at least 20 characters.\n                    </p>\n                </div>\n            </div>\n\n            <!-- Manual entry if Other -->\n            <div v-if=\"formGene && formGene.is_other\" class=\"border rounded bg-white p-3 mt-3\">\n                <h5 class=\"text-lg font-semibold mb-2\">Provide details for non-curated gene</h5>\n                <div class=\"grid grid-cols-2 gap-2\">\n                    <!-- Gene -->\n                    <div>\n                        <label class=\"block text-sm font-medium mb-1\">Gene *</label>\n                        <GeneSearchSelect v-model=\"formGene.custom_gene\" placeholder=\"Search gene...\" />\n                        <p v-if=\"errors['custom_gene']\" class=\"text-red-500 text-xs mt-1\">{{ errors['custom_gene'][0] }}</p>\n                    </div>\n\n                    <!-- MOI -->\n                    <div>\n                        <label class=\"block text-sm font-medium mb-1\">MOI</label>\n                        <select v-model=\"formGene.custom_moi\" class=\"form-select w-full\">\n                            <option value=\"\">----Select MOI-----</option>\n                            <option v-for=\"moi in mois\" :key=\"moi.id\" :value=\"moi\">{{ moi.name }} ({{ moi.abbreviation }})</option>\n                        </select>\n                        <p v-if=\"errors['custom_moi']\" class=\"text-red-500 text-xs mt-1\">{{ errors['custom_moi'][0] }}</p>\n                    </div>\n\n                    <!-- Disease -->\n                    <div class=\"col-span-2\">\n                        <label class=\"block text-sm font-medium mb-1\">Disease *</label>\n                        <DiseaseSearchSelect v-model=\"formGene.custom_disease\" placeholder=\"Search disease...\" />\n                    </div>\n\n                    <!-- Plan -->\n                    <div class=\"col-span-2 mb-3\">\n                        <label class=\"block text-sm font-medium mb-1\">Plan for Curation *</label>\n                        <RichTextEditor\n                            v-model=\"formGene.custom_plan\"\n                            placeholder=\"Describe your plan (min 20 characters)\"\n                            class=\"w-full\"\n                        />\n                        <p v-if=\"errors['custom_plan']\" class=\"text-red-500 text-xs mt-1\">{{ errors['custom_plan'][0] }}</p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Buttons -->\n            <div class=\"mt-4 flex justify-end gap-2\">\n                <button class=\"btn btn-gray\" @click=\"cancelForm\">Cancel</button>                \n                <button\n                    class=\"btn blue\"\n                    :disabled=\"isEditing ? false : (\n                        (formGene?.is_other && !isOtherFormValid) ||\n                        (!formGene?.is_other && !isCuratedPlanValid)\n                    )\"\n                    @click=\"saveForm\"\n                    >\n                    Save\n                </button>\n            </div>\n        </div>\n    </transition>\n\n    <!-- Bulk Tier Update Bar -->\n    <div v-if=\"selectedGenes.length > 0 && !readonly\" class=\"flex items-center gap-2 bg-gray-50 p-3 border rounded mb-3\">\n        <span class=\"font-semibold\">Bulk Tier Update:</span>\n        <select v-model=\"bulkTier\" class=\"border rounded px-2 py-1 text-sm\">\n            <option value=\"\">Select Tier</option>\n            <option value=\"1\">Tier 1</option>\n            <option value=\"2\">Tier 2</option>\n            <option value=\"3\">Tier 3</option>\n            <option value=\"4\">Tier 4</option>\n        </select>\n        <button\n            class=\"bg-blue-600 text-white px-3 py-1 rounded disabled:opacity-50\"\n            @click=\"applyBulkTier\"\n            :disabled=\"!bulkTier || selectedGenes.length === 0\"\n        >\n            Apply\n        </button>\n    </div>\n\n    <!-- Table -->\n    <table v-if=\"genes\" class=\"border-none w-full\">\n        <thead>\n            <tr>\n                <th v-if=\"canEdit && editing\"><input type=\"checkbox\" :checked=\"isAllSelected\" @change=\"toggleSelectAll\" /></th>\n                <th @click=\"setSort('gene_symbol')\" class=\"cursor-pointer\">\n                    HGNC Symbol <span v-if=\"sortKey === 'gene_symbol'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\n                </th>\n                <th @click=\"setSort('disease')\" class=\"cursor-pointer\">\n                    Disease <span v-if=\"sortKey === 'disease'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\n                </th>\n                <th @click=\"setSort('moi')\" class=\"cursor-pointer\">\n                    MOI <span v-if=\"sortKey === 'moi'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\n                </th>\n                <th>Plan</th>\n                <th @click=\"setSort('tier')\" class=\"cursor-pointer\">\n                    Tier <span v-if=\"sortKey === 'tier'\">{{ sortOrder === 'asc' ? '▲' : '▼' }}</span>\n                </th>\n            </tr>\n        </thead>\n        <tbody v-if=\"paginatedGenes.length === 0\">\n            <tr>\n                <td colspan=\"6\" class=\"p-3 text-center\">No genes found.</td>\n            </tr>\n        </tbody>\n        <tbody>\n            <template v-for=\"(gene, index) in paginatedGenes\" :key=\"gene.id\">\n            <tr :style=\"gene.plan?.classification === 'Moderate' ? 'background-color: oklch(98.7% 0.026 102.212);' : gene.plan?.classification === 'Limited' || gene.is_outdated ? 'background-color: oklch(97.3% 0.071 103.193);' : ''\">\n                <td v-if=\"canEdit & editing\">\n                    <input type=\"checkbox\" :checked=\"selectedGenes.includes(gene.id)\" @change=\"toggleSelect(gene.id)\" />\n                </td>\n                <td>{{ gene.gene_symbol }}</td>\n                <td>{{ gene.mondo_id }}<br />{{ gene.disease_name }}</td>\n                <td>{{ gene.moi }}</td>\n                <td class=\"text-xs\">\n                    <div v-if=\"!gene.plan?.is_other\" class=\"grid grid-cols-2 gap-x-4 text-gray-600\">\n                        <div><strong>Expert Panel:</strong> {{ gene.plan?.expert_panel ?? 'N/A' }}</div>\n                        <div>\n                            <strong>Classification:</strong> {{ gene.plan?.classification ?? 'N/A' }}\n                            <span v-if=\"['Moderate','Limited'].includes(gene.plan?.classification)\" class=\"font-bold text-orange-500\">⚠</span>\n                        </div>\n                        <div><strong>Status:</strong> {{ gene.plan?.curation_status ?? 'N/A' }}</div>\n                        <div><strong>Date Approved:</strong>\n                            {{ gene.plan?.date_approved ? new Date(gene.plan?.date_approved).toLocaleDateString() : 'N/A' }}\n                        </div>\n                        <div class=\"col-span-2\"><strong>Phenotypes:</strong> {{ gene.plan?.phenotypes ?? 'N/A' }}</div>\n                        <div class=\"col-span-2\" v-if=\" gene.plan?.requires_plan\"><strong>Plan:</strong> <span v-html=\"gene.plan?.curated_plan_text\"></span></div>                        \n                    </div>\n                    <div v-else v-html=\"gene.plan?.the_plan\"></div>                    \n                </td>\n                <td>\n                    <div v-if=\"editing\" class=\"flex flex-col gap-1\">\n                        <select\n                            v-model=\"gene.tier\"\n                            class=\"border rounded px-1 py-0.5 text-sm\"\n                            @change=\"updateTier(gene)\"\n                            :disabled=\"savingTierFor === gene.id || readonly\"\n                        >\n                            <option value=\"null\">—</option>\n                            <option value=\"1\">Tier 1</option>\n                            <option value=\"2\">Tier 2</option>\n                            <option value=\"3\">Tier 3</option>\n                            <option value=\"4\">Tier 4</option>\n                        </select>\n                        <button v-if=\"gene.is_outdated && gene.gt_data\" \n                            @click=\"applyGtUpdate(gene)\"\n                            class=\"btn btn-xs w-full text-center text-amber-800 font-semibold\"\n                            title=\"Snapshot differs from latest GeneTracker data\"\n\n                            >\n                            Refresh data from GT ⚠\n                        </button>\n                        <dropdown-menu v-if=\"!gene.toDelete\" :hide-cheveron=\"true\" class=\"relative\">\n                            <template #label>\n                                <button class=\"btn btn-xs w-full text-center\">⋯</button>\n                            </template>\n                            <dropdown-item @click=\"startEdit(gene)\">Edit</dropdown-item>\n                            <dropdown-item @click=\"confirmRemove(gene)\">Remove</dropdown-item>\n                        </dropdown-menu>                        \n                    </div>\n                    <span v-else>{{ gene.tier || '—' }}</span>\n                </td>\n            </tr>\n            <tr v-if=\"gene.is_outdated && gene.gt_data\"> <!-- && ! expanded.includes(index) -->\n                <td :colspan=\"editing ? 6 : 5\">\n                    <div\n                        role=\"status\" aria-live=\"polite\"\n                        class=\"rounded-md border border-amber-300 bg-amber-50\n                                px-3 py-2 text-xs text-amber-900 col-span-2\" \n                        >\n                        <div class=\"flex items-start gap-2\">\n                            ⚠\n                            <div>\n                                <div class=\"font-medium\">Snapshot out of date</div>\n                                <div class=\"text-amber-900/80\">This record differs from the latest GeneTracker data. \n                                   <span @click=\"gene.is_outdated && toggleExpanded(index)\" class=\"underline cursor-pointer font-semibold\">\n                                     {{ expanded.includes(index) ? 'Hide' : 'View' }} GeneTracker data\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n            <tr v-if=\"gene.is_outdated && gene.gt_data && expanded.includes(index)\">                \n                <td v-if=\"editing\" @click=\"toggleExpanded(index)\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 20 20\" aria-labelledby=\"box\" role=\"presentation\" name=\"cheveron-down\" class=\"m-auto cursor-pointer\"><title id=\"box\" lang=\"en\">box</title><g fill=\"currentColor\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"></path></g></svg>\n                </td>\n                <td>{{ gene.gt_data?.gene_symbol }}</td>\n                <td>{{ gene.gt_data?.mondo_id }}<br />{{ gene.gt_data?.disease_name }}</td>\n                <td>{{ gene.gt_data?.moi }}</td>\n                <td class=\"text-xs\" :colspan=\"editing ? 2 : 1\">\n                    <div class=\"grid grid-cols-2 gap-x-4 text-gray-600\">\n                        <div><strong>Expert Panel:</strong> {{ gene.gt_data?.expert_panel ?? 'N/A' }}</div>\n                        <div>\n                            <strong>Classification:</strong> {{ gene.gt_data?.classification ?? 'N/A' }}\n                            <span v-if=\"['Moderate','Limited'].includes(gene.gt_data?.classification)\" class=\"font-bold text-orange-500\">⚠</span>\n                        </div>\n                        <div><strong>Status:</strong> {{ gene.gt_data?.curation_status ?? 'N/A' }}</div>\n                        <div><strong>Date Approved:</strong>\n                            {{ gene.gt_data?.date_approved ? new Date(gene.gt_data?.date_approved).toLocaleDateString() : 'N/A' }}\n                        </div>\n                        <div class=\"col-span-2\"><strong>Phenotypes:</strong> {{ gene.gt_data?.phenotypes ?? 'N/A' }}</div>\n                    </div>\n                </td>\n                <td v-if=\"! editing\" @click=\"toggleExpanded(index)\">\n                    Hide\n                </td>\n            </tr>\n            </template>\n        </tbody>\n    </table>\n\n    <!-- Pagination -->\n    <div class=\"mt-4 flex justify-between items-center\">\n        <button class=\"btn btn-gray\" :disabled=\"currentPage === 1\" @click=\"currentPage--\">Prev</button>\n        <span>Page {{ currentPage }} of {{ totalPages }}</span>\n        <button class=\"btn btn-gray\" :disabled=\"currentPage === totalPages\" @click=\"currentPage++\">Next</button>\n    </div>\n\n    <!-- Remove Confirmation Modal -->\n    <div v-if=\"showConfirmRemove\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\n        <div class=\"bg-white rounded-lg shadow-lg w-96 p-6\">\n            <h3 class=\"text-lg font-semibold mb-4\">Confirm Removal</h3>\n            <p class=\"mb-6\">Are you sure you want to remove <strong>{{ selectedGene?.gene_symbol }}</strong>?</p>\n            <div class=\"flex justify-end gap-2\">\n                <button class=\"btn btn-gray\" @click=\"cancelRemove\">Cancel</button>\n                <button class=\"btn btn-red\" @click=\"removeGene\">Remove</button>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport { api } from '@/http';\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport GeneSearchSelect from '@/components/forms/GeneSearchSelect.vue';\nimport DiseaseSearchSelect from '@/components/forms/DiseaseSearchSelect.vue';\nimport CuratedGeneSearchSelect from '@/components/forms/CuratedGeneSearchSelect.vue';\nimport is_validation_error from '@/http/is_validation_error';\nimport { hasAnyPermission } from '@/auth_utils';\nimport RichTextEditor from '@/components/prosekit/RichTextEditor.vue';\n\nexport default {\n    name: 'VcepGeneList',\n    components: { GeneSearchSelect, DiseaseSearchSelect, CuratedGeneSearchSelect, RichTextEditor },\n    props: { readonly: { type: Boolean, required: false, default: false }, editing: { type: Boolean, required: false, default: true } },\n    emits: ['saved'],\n    setup(props, { emit }) {\n        const store = useStore();\n        const genes = ref([]);\n        const formGene = ref(null);\n        const isEditing = ref(false);\n        const isFormVisible = ref(false);\n        const curatedGeneKey = ref(0);\n        const errors = ref({});\n        const mois = ref([]);\n\n        const selectedGenes = ref([]);\n        const bulkTier = ref('');\n        const savingTierFor = ref(null);\n\n        const search = ref('');\n        const filterMoi = ref('');\n        const filterClassification = ref('');\n        const sortKey = ref('gene_symbol');\n        const sortOrder = ref('asc');\n\n        const currentPage = ref(1);\n        const pageSize = ref(20);\n\n        const group = computed(() => store.getters['groups/currentItemOrNew']);\n\n        const canEdit = computed(() => hasAnyPermission(['ep-applications-manage', ['application-edit', group.value]]) && !props.readonly);\n\n        const showConfirmRemove = ref(false);\n        const selectedGene = ref(null);\n        const confirmRemove = (gene) => {\n            selectedGene.value = gene;\n            showConfirmRemove.value = true;\n        };\n        const cancelRemove = () => {\n            selectedGene.value = null;\n            showConfirmRemove.value = false;\n        };\n        const removeGene = async () => {\n            if (!selectedGene.value) return;\n            try {\n                await api.delete(`/api/groups/${group.value.uuid}/expert-panel/genes/${selectedGene.value.id}`);\n                showConfirmRemove.value = false;\n                store.commit('pushSuccess', `Successfully removed gene ${selectedGene.value.gene_symbol}`);\n                selectedGene.value = null;\n                await getGenes();                \n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        };\n\n\n        const getMois = async () => {\n            try {\n                const response = await api.get('/api/mois');\n                mois.value = response.data;\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        };\n\n        const getGenes = async () => {\n            if (!group.value.uuid) return;\n            try {\n                await store.dispatch('groups/getGenes', group.value);\n                genes.value = group.value.expert_panel.genes;\n            } catch (error) {\n                store.commit('pushError', error.response?.data || error);\n            }\n        };\n\n        const setSort = key => {\n            if (sortKey.value === key) {\n                sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc';\n            } else {\n                sortKey.value = key;\n                sortOrder.value = 'asc';\n            }\n        };\n\n        const startAdd = () => {\n            isFormVisible.value = true;\n            isEditing.value = false;\n            formGene.value = null;\n            curatedGeneKey.value++;\n        };\n\n        const startEdit = (gene) => {\n            isFormVisible.value = true;\n            isEditing.value = gene.id;\n\n            if (gene.plan?.is_other) {\n                // Build form for Other gene\n                formGene.value = {\n                    id: gene.id,\n                    is_other: true,\n                    custom_gene: { hgnc_id: gene.hgnc_id, gene_symbol: gene.gene_symbol },\n                    custom_disease: { mondo_id: gene.mondo_id, name: gene.disease_name },\n                    custom_moi: mois.value.find(m => m.abbreviation === gene.moi) || null,\n                    custom_plan: gene.plan.the_plan || ''\n                };\n            } else {\n                const plan = {\n                    ...gene.plan,\n                    is_other: false,\n                    curated_plan_text: gene.plan?.curated_plan_text ?? gene.plan?.the_plan ?? ''\n                };\n\n                formGene.value = {\n                    id: gene.id,\n                    hgnc_id: gene.hgnc_id,\n                    gene_symbol: gene.gene_symbol,\n                    disease_name: gene.disease_name,\n                    mondo_id: gene.mondo_id,\n                    moi: gene.moi,\n                    date_approved: gene.date_approved,\n                    requires_plan: ['Moderate', 'Limited'].includes(gene.plan?.classification),\n                    plan,\n                    curated_plan_text: plan.curated_plan_text,\n                    is_other: false\n                };\n            }\n\n            curatedGeneKey.value++;\n        };\n\n\n        const cancelForm = () => {\n            isFormVisible.value = false;\n            isEditing.value = false;\n            formGene.value = null;\n            errors.value = {};\n        };\n\n        const isOtherFormValid = computed(() => {\n            if (!formGene.value?.is_other) return false;\n            return (\n                !!formGene.value.custom_gene?.hgnc_id &&\n                !!formGene.value.custom_disease?.mondo_id &&\n                (formGene.value.custom_plan?.trim().length >= 20)\n            );\n        });\n\n        const selectOther = () => {\n            const originalId = formGene.value?.id || null;\n            formGene.value = {\n                id: originalId,\n                is_other: true,\n                custom_gene: null,\n                custom_disease: null,\n                custom_moi: null,\n                custom_plan: ''\n            };\n        };\n\n        const handleCuratedSelection = selected => {\n            if (selected && !selected.is_other) {\n                formGene.value = {\n                    ...selected,\n                    is_other: false,\n                    requires_plan: ['Moderate', 'Limited'].includes(selected.classification),\n                    curated_plan_text: ''\n                };\n\n            }\n        };\n\n        const isCuratedPlanValid = computed(() => {\n            if (!formGene.value?.requires_plan) return true;\n            const plain = (formGene.value.curated_plan_text || '')\n                .replace(/<[^>]+>/g, '') // strip HTML from RTE\n                .trim();\n            return plain.length >= 20;\n        });\n\n        // helper to build a complete, flat snapshot for plan\n        const buildBasePlan = (fg) => {\n            const fromPlan = (fg?.plan && Object.keys(fg.plan).length) ? fg.plan : {};\n\n            const snap = {\n                // prefer what's already inside plan; fall back to top-level fields on fg\n                curation_id:       fromPlan.curation_id       ?? fg.curation_id,\n                gene_symbol:       fromPlan.gene_symbol       ?? fg.gene_symbol,\n                hgnc_id:           fromPlan.hgnc_id           ?? fg.hgnc_id,\n                hgnc_name:         fromPlan.hgnc_name         ?? fg.hgnc_name ?? null,\n                disease_name:      fromPlan.disease_name      ?? fg.disease_name,\n                mondo_id:          fromPlan.mondo_id          ?? fg.mondo_id,\n                expert_panel:      fromPlan.expert_panel      ?? fg.expert_panel ?? null,\n                moi:               fromPlan.moi               ?? fg.moi,\n                moi_name:          fromPlan.moi_name          ?? fg.moi_name ?? null,\n                hp_id:             fromPlan.hp_id             ?? fg.hp_id ?? null,\n                classification_id: fromPlan.classification_id ?? fg.classification_id ?? null,\n                classification:    fromPlan.classification    ?? fg.classification ?? null,\n                curation_status_id:fromPlan.curation_status_id?? fg.curation_status_id ?? null,\n                curation_type:     fromPlan.curation_type     ?? fg.curation_type ?? null,\n                curation_status:   fromPlan.curation_status   ?? fg.curation_status ?? null,\n                date_approved:     fromPlan.date_approved     ?? fg.date_approved ?? null,\n                phenotypes:        fromPlan.phenotypes        ?? fg.phenotypes ?? null,\n                phenotypeIDs:      fromPlan.phenotypeIDs      ?? fg.phenotypeIDs ?? null,\n                checkKey:          fromPlan.checkKey          ?? fg.checkKey ?? null,\n\n                // normalize flags/text\n                is_other: false,\n                requires_plan: !!fg?.requires_plan,\n                curated_plan_text:\n                (fg?.requires_plan ? (fg?.curated_plan_text || fromPlan.curated_plan_text || '') \n                                    : (fromPlan.curated_plan_text || ''))\n            };\n\n            // strip undefined to keep payload clean\n            Object.keys(snap).forEach(k => snap[k] === undefined && delete snap[k]);\n            return snap;\n        };\n\n        const saveForm = async () => {\n            try {\n                let payload;\n                if (formGene.value.is_other) {\n                    const plan = {\n                        is_other: true,\n                        the_plan: formGene.value.custom_plan,\n                        moi_name: formGene.value.custom_moi?.name || '',\n                        hp_id: formGene.value.custom_moi?.hp_id || ''\n                    };\n                    payload = {\n                        is_other: true,\n                        hgnc_id: formGene.value.custom_gene?.hgnc_id || null,\n                        gene_symbol: formGene.value.custom_gene?.gene_symbol || '',\n                        disease_name: formGene.value.custom_disease?.name || '',\n                        mondo_id: formGene.value.custom_disease?.mondo_id || '',\n                        moi: formGene.value.custom_moi?.abbreviation || '',\n                        plan,\n                        date_approved: null\n                    };\n                } else {\n                    const basePlan = buildBasePlan(formGene.value);\n\n                    payload = {\n                        hgnc_id: formGene.value.hgnc_id,\n                        gene_symbol: formGene.value.gene_symbol,\n                        disease_name: formGene.value.disease_name,\n                        mondo_id: formGene.value.mondo_id,\n                        moi: formGene.value.moi,\n                        date_approved: formGene.value.date_approved,\n                        plan: basePlan,\n                        is_other: false\n                    };\n                }\n\n                if (isEditing.value) {\n                    await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/${isEditing.value}`, payload);\n                } else {\n                    await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, { genes: [payload] });\n                }\n\n                await getGenes();\n                cancelForm();\n                emit('saved');\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    errors.value = error.response.data.errors;\n                } else {\n                    store.commit('pushError', error.response.data);\n                }\n            }\n        };\n\n        const remove = async gene => {\n            try {\n                await api.delete(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`);\n                await getGenes();\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        };\n\n        const updateTier = async gene => {\n            savingTierFor.value = gene.id;\n            const oldTier = gene.tier;\n            try {\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/update-tier`, { ids: [gene.id], tier: gene.tier || null });\n                store.commit('pushSuccess', `Tier updated for ${gene.gene_symbol}`);\n            } catch (error) {\n                gene.tier = oldTier;\n                store.commit('pushError', `Failed to update tier`);\n            } finally {\n                savingTierFor.value = null;\n            }\n        };\n\n        const applyBulkTier = async () => {\n            if (!bulkTier.value || selectedGenes.value.length === 0) return;\n            try {\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/update-tier`, { ids: selectedGenes.value, tier: bulkTier.value });\n                store.commit('pushSuccess', `Tier updated for ${selectedGenes.value.length} genes`);\n                selectedGenes.value = [];\n                await getGenes();                \n                bulkTier.value = '';\n            } catch (error) {\n                store.commit('pushError', 'Failed to update tiers in bulk');\n            }\n        };\n\n        const toggleSelect = id => {\n            if (selectedGenes.value.includes(id)) {\n                selectedGenes.value = selectedGenes.value.filter(x => x !== id);\n            } else {\n                selectedGenes.value.push(id);\n            }\n        };\n\n        const toggleSelectAll = () => {\n            const idsOnPage = paginatedGenes.value.map(g => g.id);\n            const allSelected = idsOnPage.every(id => selectedGenes.value.includes(id));\n            if (allSelected) {\n                selectedGenes.value = selectedGenes.value.filter(id => !idsOnPage.includes(id));\n            } else {\n                selectedGenes.value = [...new Set([...selectedGenes.value, ...idsOnPage])];\n            }\n        };\n\n        const filteredAndSortedGenes = computed(() => {\n            let result = [...genes.value];\n            const keyword = search.value.toLowerCase();\n            if (keyword) {\n                result = result.filter(g =>\n                    (g.gene_symbol && g.gene_symbol.toLowerCase().includes(keyword)) ||\n                    (g.mondo_id && g.mondo_id.toLowerCase().includes(keyword)) ||\n                    (g.disease_name && g.disease_name.toLowerCase().includes(keyword)) ||\n                    (g.moi && g.moi.toLowerCase().includes(keyword)) ||\n                    (g.plan?.the_plan && g.plan.the_plan.toLowerCase().includes(keyword)) ||\n                    (g.plan?.expert_panel && g.plan.expert_panel.toLowerCase().includes(keyword)) ||\n                    (g.plan?.classification && g.plan.classification.toLowerCase().includes(keyword)) ||\n                    (g.plan?.phenotypes && g.plan.phenotypes.toLowerCase().includes(keyword))\n                );\n            }\n            if (filterMoi.value) {\n                result = result.filter(g => g.moi === filterMoi.value);\n            }\n            if (filterClassification.value) {\n                result = result.filter(g => g.plan?.classification === filterClassification.value);\n            }\n            // Sorting logic\n            result.sort((a, b) => {\n                let aVal, bVal;\n\n                switch (sortKey.value) {\n                    case 'disease':\n                        aVal = `${a.mondo_id || ''} ${a.disease_name || ''}`.toLowerCase();\n                        bVal = `${b.mondo_id || ''} ${b.disease_name || ''}`.toLowerCase();\n                        break;\n                    case 'moi':\n                        aVal = a.moi || '';\n                        bVal = b.moi || '';\n                        break;\n                    case 'tier':\n                        // Numeric sort for tier\n                        aVal = a.tier ? Number(a.tier) : 0;\n                        bVal = b.tier ? Number(b.tier) : 0;\n                        return sortOrder.value === 'asc' ? aVal - bVal : bVal - aVal;\n                    default: // gene_symbol\n                        aVal = a.gene_symbol || '';\n                        bVal = b.gene_symbol || '';\n                }\n\n                // For string comparisons\n                return sortOrder.value === 'asc'\n                    ? aVal.localeCompare(bVal)\n                    : bVal.localeCompare(aVal);\n            });\n\n            return result;\n        });\n\n        const applyGtUpdate = async (gene) => {\n            try {\n                const snap = gene.gt_data;\n                if (!snap) return;\n\n                const payload = {\n                    is_other: false,\n                    hgnc_id: snap.hgnc_id,\n                    gene_symbol: snap.gene_symbol,\n                    disease_name: snap.disease_name,\n                    mondo_id: snap.mondo_id,\n                    moi: snap.moi,\n                    date_approved: snap.date_approved,                    \n                    plan: {\n                        ...snap,\n                        checkKey: snap.checkKey,\n                        requires_plan: ['Moderate', 'Limited'].includes(snap.plan?.classification),\n                    },\n                };\n\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`, payload);\n                store.commit('pushSuccess', `Updated ${gene.gene_symbol} from GeneTracker`);\n                await getGenes();\n            } catch (e) {\n                store.commit('pushError', 'Failed to apply update from GeneTracker');\n            }\n        };\n\n\n        const moiOptions = computed(() => [...new Set(genes.value.map(g => g.moi).filter(Boolean))]);\n        const classificationOptions = computed(() => [...new Set(genes.value.map(g => g.plan?.classification).filter(Boolean))]);\n        const totalPages = computed(() => Math.ceil(filteredAndSortedGenes.value.length / pageSize.value));\n        const paginatedGenes = computed(() => {\n            const start = (currentPage.value - 1) * pageSize.value;\n            return filteredAndSortedGenes.value.slice(start, start + pageSize.value);\n        });\n        const isAllSelected = computed(() => paginatedGenes.value.every(g => selectedGenes.value.includes(g.id)));\n\n        onMounted(() => { getGenes(); getMois(); });\n        const expanded = ref([])\n        const toggleExpanded = index => {\n            if (expanded.value.includes(index)) {\n                expanded.value = expanded.value.filter(i => i !== index)\n            } else {\n                expanded.value.push(index)\n            }\n        }\n\n        return {\n            group, genes, formGene, curatedGeneKey, isEditing, isFormVisible,\n            mois, errors, search, filterMoi, filterClassification, sortKey, sortOrder,\n            pageSize, currentPage, totalPages, paginatedGenes, filteredAndSortedGenes,\n            moiOptions, classificationOptions,\n            selectedGenes, bulkTier, savingTierFor, isAllSelected,\n            canEdit, isOtherFormValid, isCuratedPlanValid, toggleExpanded, expanded,\n            showConfirmRemove, selectedGene, confirmRemove, cancelRemove, removeGene,\n            setSort, startAdd, startEdit, cancelForm, selectOther, handleCuratedSelection, saveForm,\n            remove, updateTier, applyBulkTier, toggleSelect, toggleSelectAll, applyGtUpdate\n        };\n    }\n};\n</script>\n\n\n<style scoped>\n/* Fade + slide transition for collapsible form */\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 0.3s ease;\n}\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n  transform: translateY(-8px);\n}\n\n/* Table styles */\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\nth, td {\n  padding: 8px 10px;\n  text-align: left;\n  border-bottom: 1px solid #e5e7eb;\n  font-size: 14px;\n}\nth {\n  background-color: #f9fafb;\n  font-weight: 600;\n  cursor: pointer;\n}\nth span {\n  font-size: 12px;\n  margin-left: 4px;\n}\n\n/* Buttons */\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 4px;\n  padding: 6px 12px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n.btn.blue {\n  background-color: #2563eb;\n  color: white;\n}\n.btn.blue:hover {\n  background-color: #1d4ed8;\n}\n.btn-gray {\n  background-color: #f3f4f6;\n  color: #374151;\n}\n.btn-gray:hover {\n  background-color: #e5e7eb;\n}\n.btn-xs {\n  font-size: 12px;\n  padding: 4px 6px;\n}\n\n/* Form elements */\ninput[type=\"text\"], select {\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n}\ninput:focus, select:focus {\n  outline: none;\n  border-color: #2563eb;\n  box-shadow: 0 0 0 1px #2563eb;\n}\n\n/* Responsive filter controls */\n@media (max-width: 768px) {\n  .flex.justify-between {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  .flex.items-center.gap-4 {\n    flex-wrap: wrap;\n  }\n}\n</style>","<script>\nexport default {\n    name: 'CspecSummary',\n    props: {\n        readonly: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            sort: {\n                field: 'id',\n                desc: false,\n            },\n            specFields: [\n                {\n                    name: 'name',\n                    type: String,\n                    sortable: true,\n                },\n                {\n                    name: 'status',\n                    label: 'Status',\n                    type: String,\n                    sortable: true,\n                },\n                {\n                    name: 'updated_at',\n                    label: 'Last Updated',\n                    type: Date,\n                    sortable: true,\n                },\n            ]\n        }\n    },\n    computed: {\n        group () {\n            return this.$store.getters['groups/currentItemOrNew'];\n        },\n        hasSpecifications () {\n            return this.group.expert_panel.specifications && this.group.expert_panel.specifications.length > 0;\n        },\n        specifications () {\n            return this.group.expert_panel.specifications;\n        }\n    },\n    watch: {\n        group (to) {\n            this.$store.dispatch('groups/getSpecifications', to)\n        }\n    },\n    mounted() {\n        this.$store.dispatch('groups/getSpecifications', this.group)\n    },\n    methods: {\n        goToCspec () {\n            window.location = 'https://cspec.genome.network/'\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <div v-if=\"!hasSpecifications\" class=\"well mb-2\">\n      No specifications on record in the CSPEC Registry.\n    </div>\n    <div v-else>\n      <table class=\"mb-2\">\n        <thead>\n          <tr>\n            <th>Specification Name</th>\n            <th>Status</th>\n            <th>Last Updated</th>\n            <th>&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"spec in specifications\" :key=\"spec.id\">\n            <td>{{ spec.name }}</td>\n            <td>{{ spec.status }}</td>\n            <td>{{ formatDate(spec.updated_at) }}</td>\n            <td>\n              <ul>\n                <!-- <li>\n                                    <a target=\"cspec_view\" :href=\"`https://cspec.genome.network/cspec/ui/svi/doc/${spec.cspec_id}`\">View</a>\n                                </li> -->\n                <li>\n                  <a target=\"cspec_edit\" :href=\"`https://cspec.genome.network/cspec/ed/svi/doc/${spec.cspec_id}`\">Edit</a>\n                </li>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <a\n      class=\"btn btn-lg blue\"\n      target=\"cspec-editor\"\n      :disabled=\"readonly\"\n      href=\"https://cspec.genome.network/\"\n    >\n      Go to the CSpec Registry\n      <icon-arrow-right class=\"inline\" />\n    </a>\n\n    <note class=\"mt-2\">\n      It may take up to an hour for the latest updates in the CSPEC Registry to display here.\n    </note>\n  </div>\n</template>\n","<script>\nimport {formatDate} from '../../../date_utils'\nimport {isValidationError} from '@/http';\nimport config from '@/configs.json'\n\nconst documentsTypes = config.documentsTypes;\n\nexport default {\n    props: {\n        documentTypeId: {\n            type: [Number, Array],\n            required: true\n        },\n        step: {\n            type: Number,\n            required: false,\n            default: null\n        },\n        showNotes: {\n            type: Boolean,\n            default: true\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n    ],\n    data() {\n        return {\n            newDocument: {\n                file: null,\n                date_received: new Date().toISOString(),\n                step: this.step,\n            },\n            errors: {},\n            activeDocument: {},\n            showDeleteConfirmation: false\n        }\n    },\n    computed: {\n        group () {\n            return this.$store.getters['groups/currentItemOrNew']\n        },\n        documents () {\n            return this.group.documents.filter(d => {\n                if (this.docTypeIsArray) {\n                    return this.documentTypeId.includes(d.document_type_id)\n                }\n                return d.document_type_id === this.documentTypeId\n            })\n        },\n        docTypeIsArray () {\n            return Array.isArray(this.documentTypeId);\n        },\n        filteredTypes () {\n            if (this.docTypeIsArray) {\n                return Object.values(documentsTypes)\n                        .filter(dt => this.documentTypeId.includes(dt.id))\n                        .map(dt => ({label: dt.long_name, value: dt.id}));\n            }\n            return [];\n        },\n        document_type_id () {\n            return (this.docTypeIsArray) ? null : this.documentTypeId;\n        }\n    },\n    mounted() {\n        this.$store.dispatch('groups/getDocuments', this.group);\n    },\n    methods: {\n        async save() {\n            try {\n                const data = new FormData();\n                Object.entries(this.newDocument)\n                    .forEach(([key, val]) => {\n                        if (val == null) return;\n                        data.append(key, val);\n                    })\n                data.set('file', this.$refs.fileInput.files[0]);\n                data.set('document_type_id', this.documentTypeId);\n                await this.$store.dispatch('groups/addApplicationDocument', {group: this.group, data});\n\n                this.clearForm();\n                this.$emit('saved');\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors\n                }\n            }\n\n        },\n        cancel() {\n            this.clearForm();\n            this.$emit('canceled');\n        },\n        clearForm() {\n            this.initNewDocument();\n            this.clearErrors();\n        },\n        initNewDocument() {\n            this.$refs.fileInput.value = null;\n            this.newDocument = {\n                file: null,\n                date_received: formatDate(new Date()),\n                date_reviewed: null,\n                step: this.step,\n                document_type_id: this.documentTypeId,\n                notes: null\n            }\n        },\n        clearErrors () {\n            this.errors = {}\n        },\n        initDownload (item) {\n            window.location = item.download_url;\n        },\n        initDelete (item) {\n            this.activeDocument = item;\n            this.showDeleteConfirmation = true;\n        },\n        cancelDelete () {\n            this.showDeleteConfirmation = false;\n            this.resetActiveDocument();\n        },\n        async commitDelete() {\n            await this.$store.dispatch('groups/deleteDocument', {group: this.group, document: this.activeDocument})\n            this.showDeleteConfirmation = false;\n            this.resetActiveDocument();\n        },\n        resetActiveDocument () {\n            this.activeDocument = {type: {}}\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <table v-if=\"documents.length > 0\" class=\"table\">\n      <thead>\n        <tr>\n          <th>File</th>\n          <th v-if=\"docTypeIsArray\">\n            Type\n          </th>\n          <th>uploaded</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"doc in documents\" :key=\"doc.id\" class=\"p-1 border\">\n          <td>\n            <a :href=\"doc.download_url\">{{ doc.filename }}</a>\n            <span class=\"note\"> (v. {{ doc.version }})</span>\n          </td>\n          <td v-if=\"docTypeIsArray\">\n            {{ doc.type.long_name }}\n          </td>\n          <td>{{ formatDate(doc.created_at) }}</td>\n          <td>\n            <dropdown-menu hide-cheveron>\n              <template #label>\n                <button class=\"btn btn-xs\">\n                  &hellip;\n                </button>\n              </template>\n              <dropdown-item @click=\"initDownload(doc)\">\n                Download\n              </dropdown-item>\n              <dropdown-item v-if=\"hasAnyPermission(['ep-applications-manage', ['application-edit', group]])\" @click=\"initDelete(doc)\">\n                Delete\n              </dropdown-item>\n            </dropdown-menu>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div v-if=\"!readonly\">\n      <input-row\n        v-if=\"docTypeIsArray\"\n        v-model=\"newDocument.document_type_id\"\n        label=\"Document type\"\n        type=\"select\"\n        :options=\"filteredTypes\"\n      />\n\n      <input-row label=\"Document\" :errors=\"errors.file\">\n        <input ref=\"fileInput\" type=\"file\">\n      </input-row>\n      <button class=\"btn blue\" @click=\"save\">\n        Upload\n      </button>\n    </div>\n    <teleport to=\"body\">\n      <modal-dialog\n        v-model=\"showDeleteConfirmation\"\n        :title=\"`You are about to delete ${activeDocument.filename}`\"\n      >\n        <div v-if=\"activeDocument\">\n          <p v-if=\"activeDocument.is_final\" class=\"mb-3\">\n            This version has been tagged as the final version of the document.\n          </p>\n          <p>Are you sure you want to continue?</p>\n\n          <button-row\n            submit-text=\"Delete Document\"\n            @canceled=\"cancelDelete\"\n            @submitted=\"commitDelete\"\n          />\n        </div>\n      </modal-dialog>\n    </teleport>\n  </div>\n</template>\n","<script>\nimport CspecSummary from '@/components/expert_panels/CspecSummary.vue'\nimport ApplicationUploadForm from '@/components/applications/documents/ApplicationUploadForm.vue'\n\nexport default {\n    name: 'SpecificationsSection',\n    components: {\n        CspecSummary,\n        ApplicationUploadForm\n    },\n    props: {\n        docTypeId: {\n            required: true,\n            type: [Number, Array]\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n        }\n    },\n    computed: {\n        cspecSummaryEnabled () {\n            return this.$store.state.systemInfo.app.features.cspec_summary\n        },\n        specificationUpload () {\n            return this.$store.state.systemInfo.app.features.specification_upload\n        }\n    },\n    methods: {\n\n    }\n}\n</script>\n<template>\n  <div>\n    <CspecSummary v-if=\"cspecSummaryEnabled\" :readonly=\"readonly\" />\n\n    <collapsible class=\"mt-4\">\n      <template #title>\n        <h3>Legacy document-based specifications</h3>\n      </template>\n      <ApplicationUploadForm\n        v-if=\"specificationUpload\"\n        :document-type-id=\"docTypeId\"\n        :show-notes=\"false\"\n        :readonly=\"readonly\"\n      />\n    </collapsible>\n  </div>\n</template>\n"],"names":["props","__props","store","useStore","search","ref","currentPage","pageSize","savingTierFor","expanded","selectedGenes","bulkTier","savingBulk","sortKey","sortOrder","selectedStatus","statusPriority","allStatuses","computed","set","g","s","a","b","filteredGenes","keyword","gene","symbolMatch","statusMatch","status","matchesSearch","matchesStatus","sortedGenes","aVal","bVal","maxA","maxB","totalPages","paginatedGenes","start","toggleExpanded","index","i","toggleSelect","geneId","id","toggleSelectAll","idsOnPage","isAllSelected","updateTier","oldTier","api","error","_a","applyBulkTier","changeSort","key","_sfc_main","GeneSearchSelect","DiseaseSearchSelect","CuratedGeneSearchSelect","RichTextEditor","emit","genes","formGene","isEditing","isFormVisible","curatedGeneKey","errors","mois","filterMoi","filterClassification","group","canEdit","hasAnyPermission","showConfirmRemove","selectedGene","confirmRemove","cancelRemove","removeGene","getGenes","getMois","response","setSort","startAdd","startEdit","m","plan","_b","_c","_d","cancelForm","isOtherFormValid","selectOther","originalId","handleCuratedSelection","selected","isCuratedPlanValid","buildBasePlan","fg","fromPlan","snap","k","saveForm","payload","_e","_f","_g","basePlan","is_validation_error","remove","x","filteredAndSortedGenes","result","applyGtUpdate","moiOptions","classificationOptions","onMounted","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_10","_hoisted_13","_hoisted_14","_hoisted_17","_hoisted_19","_hoisted_21","_hoisted_22","_hoisted_24","_hoisted_25","_hoisted_27","_hoisted_30","_hoisted_37","_hoisted_38","_hoisted_41","_hoisted_43","_hoisted_44","_hoisted_46","_hoisted_47","_hoisted_50","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_66","_hoisted_67","_hoisted_68","_createElementBlock","_createElementVNode","$props","_openBlock","_hoisted_2","$setup","args","_createCommentVNode","_cache","$event","_Fragment","_renderList","moi","_toDisplayString","c","size","_createVNode","_Transition","_withCtx","_hoisted_9","_hoisted_11","_createBlock","_component_CuratedGeneSearchSelect","_createTextVNode","_hoisted_12","_component_RichTextEditor","_hoisted_15","_hoisted_16","_component_GeneSearchSelect","_hoisted_18","_vModelSelect","_hoisted_20","_component_DiseaseSearchSelect","_hoisted_23","_hoisted_26","_createStaticVNode","_hoisted_28","_hoisted_29","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_normalizeStyle","_hoisted_36","_m","_hoisted_39","_hoisted_40","_h","_i","_j","_k","_hoisted_42","_l","_hoisted_45","_component_dropdown_menu","_component_dropdown_item","_hoisted_48","_hoisted_49","_hoisted_51","_hoisted_55","_n","_o","_p","_q","_r","_s","_t","_hoisted_59","_u","_v","_w","_x","_hoisted_65","to","$options","spec","_ctx","_component_icon_arrow_right","_component_note","documentsTypes","config","d","dt","data","val","isValidationError","formatDate","item","doc","_component_input_row","$data","_Teleport","_component_modal_dialog","_component_button_row","CspecSummary","ApplicationUploadForm","_component_CspecSummary","_component_collapsible","_component_ApplicationUploadForm"],"mappings":"i7CAKA,MAAMA,EAAQC,EAqBRC,EAAQC,GAAQ,EAGhBC,EAASC,EAAI,EAAE,EACfC,EAAcD,EAAI,CAAC,EACnBE,EAAWF,EAAI,EAAE,EACjBG,EAAgBH,EAAI,IAAI,EACxBI,EAAWJ,EAAI,CAAE,CAAA,EACjBK,EAAgBL,EAAI,EAAE,EACtBM,EAAWN,EAAI,EAAE,EACjBO,EAAaP,EAAI,EAAK,EAGtBQ,EAAUR,EAAI,aAAa,EAC3BS,EAAYT,EAAI,KAAK,EAGrBU,EAAiBV,EAAI,EAAE,EAGvBW,EAAiB,CACnB,cAAe,EAClB,SAAY,EACT,YAAe,EACf,0BAA2B,EAC3B,uBAAwB,EACxB,uBAAwB,EACxB,oBAAqB,EACrB,sBAAuB,EACvB,qBAAsB,EACtB,UAAa,CACjB,EAEMC,EAAcC,EAAS,IAAM,CAC/B,MAAMC,EAAM,IAAI,IAChB,OAAAnB,EAAM,MAAM,QAAQoB,GAAKA,EAAE,SAAS,QAAQC,GAAKF,EAAI,IAAIE,CAAC,CAAC,CAAC,EACrD,MAAM,KAAKF,CAAG,EAAE,KAAK,CAACG,EAAGC,IAAMP,EAAeM,CAAC,EAAIN,EAAeO,CAAC,CAAC,CAC/E,CAAC,EAGKC,EAAgBN,EAAS,IAAM,CACjC,MAAMO,EAAUrB,EAAO,MAAM,YAAW,EACxC,OAAOJ,EAAM,MAAM,OAAO0B,GAAQ,CAC9B,MAAMC,EAAcD,EAAK,YAAY,YAAa,EAAC,SAASD,CAAO,EAC7DG,EAAcF,EAAK,SAAS,KAAKG,GACnCA,EAAO,cAAc,SAASJ,CAAO,CACjD,EAGcK,EAAgB,CAAC1B,EAAO,OAASuB,GAAeC,EAGhDG,EAAgB,CAAChB,EAAe,OAASW,EAAK,SAAS,SAASX,EAAe,KAAK,EAE1F,OAAOe,GAAiBC,CAC3B,CAAA,CACL,CAAC,EAGKC,EAAcd,EAAS,IAClB,CAAC,GAAGM,EAAc,KAAK,EAAE,KAAK,CAACF,EAAGC,IAAM,CAC3C,IAAIU,EAAMC,EACV,GAAIrB,EAAQ,QAAU,WAAY,CAC9B,MAAMsB,EAAO,KAAK,IAAI,GAAGb,EAAE,SAAS,IAAID,GAAKL,EAAeK,CAAC,GAAK,CAAC,CAAC,EAC9De,EAAO,KAAK,IAAI,GAAGb,EAAE,SAAS,IAAIF,GAAKL,EAAeK,CAAC,GAAK,CAAC,CAAC,EACpEY,EAAOE,EACPD,EAAOE,CACnB,MAAmBvB,EAAQ,QAAU,QACzBoB,EAAOX,EAAE,MAAQ,EACjBY,EAAOX,EAAE,MAAQ,IAEjBU,EAAOX,EAAE,YACTY,EAAOX,EAAE,aAEb,OAAOT,EAAU,QAAU,MAASmB,EAAOC,EAAO,EAAI,GAAOD,EAAOC,EAAO,EAAI,EAClF,CAAA,CACJ,EAGKG,EAAanB,EAAS,IAAM,KAAK,KAAKc,EAAY,MAAM,OAASzB,EAAS,KAAK,CAAC,EAChF+B,EAAiBpB,EAAS,IAAM,CAClC,MAAMqB,GAASjC,EAAY,MAAQ,GAAKC,EAAS,MACjD,OAAOyB,EAAY,MAAM,MAAMO,EAAOA,EAAQhC,EAAS,KAAK,CAChE,CAAC,EAGKiC,EAAiBC,GAAS,CACxBhC,EAAS,MAAM,SAASgC,CAAK,EAC7BhC,EAAS,MAAQA,EAAS,MAAM,OAAOiC,GAAKA,IAAMD,CAAK,EAEvDhC,EAAS,MAAM,KAAKgC,CAAK,CAEjC,EAGME,GAAeC,GAAU,CACvBlC,EAAc,MAAM,SAASkC,CAAM,EACnClC,EAAc,MAAQA,EAAc,MAAM,OAAOmC,GAAMA,IAAOD,CAAM,EAEpElC,EAAc,MAAM,KAAKkC,CAAM,CAEvC,EAEME,EAAkB,IAAM,CAC1B,MAAMC,EAAYT,EAAe,MAAM,IAAIlB,GAAKA,EAAE,EAAE,EAChC2B,EAAU,MAAMF,GAAMnC,EAAc,MAAM,SAASmC,CAAE,CAAC,EAEtEnC,EAAc,MAAQA,EAAc,MAAM,OAAOmC,GAAM,CAACE,EAAU,SAASF,CAAE,CAAC,EAE9EnC,EAAc,MAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,GAAGA,EAAc,MAAO,GAAGqC,CAAS,CAAC,CAAC,CAEjF,EAEMC,EAAgB9B,EAAS,IAC3BoB,EAAe,MAAM,MAAMlB,GAAKV,EAAc,MAAM,SAASU,EAAE,EAAE,CAAC,CACtE,EAGM6B,GAAa,MAAMvB,GAAQ,OAEhC,GADA,QAAQ,IAAI1B,EAAM,OAAO,EACrBA,EAAM,UAAY,CAACA,EAAM,QAAS,OACnCQ,EAAc,MAAQkB,EAAK,GAC9B,MAAMwB,EAAUxB,EAAK,KAClB,GAAI,CACA,MAAMyB,EAAI,IAAI,eAAenD,EAAM,OAAO,kCAAmC,CAClF,IAAK,CAAC0B,EAAK,EAAE,EACb,KAAMA,EAAK,MAAQ,IACnB,CAAA,EACDxB,EAAM,OAAO,cAAe,oBAAoBwB,EAAK,WAAW,EAAE,CAC/D,OAAQ0B,EAAO,CAClB1B,EAAK,KAAOwB,EACNhD,EAAM,OAAO,YAAa,6BAA6BwB,EAAK,WAAW,EAAE,EAC/E,QAAQ,QAAM2B,EAAAD,EAAM,WAAN,YAAAC,EAAgB,OAAQD,EAAM,OAAO,CACrD,QAAc,CACN5C,EAAc,MAAQ,IAC9B,CACA,EAGM8C,GAAgB,SAAY,CAC9B,GAAI,GAAC3C,EAAS,OAASD,EAAc,MAAM,SAAW,GACtD,CAAAE,EAAW,MAAQ,GACnB,GAAI,CACA,MAAMuC,EAAI,IAAI,eAAenD,EAAM,OAAO,kCAAmC,CAClF,IAAKU,EAAc,MACnB,KAAMC,EAAS,KACf,CAAA,EACDT,EAAM,OAAO,cAAe,oBAAoBQ,EAAc,MAAM,MAAM,QAAQ,EAElFV,EAAM,MAAM,QAAQoB,GAAK,CACpBV,EAAc,MAAM,SAASU,EAAE,EAAE,IACpCA,EAAE,KAAOT,EAAS,MAEnB,CAAA,EACDD,EAAc,MAAQ,CAAA,EACtBC,EAAS,MAAQ,EACd,MAAe,CACZT,EAAM,OAAO,YAAa,gCAAgC,CAClE,QAAc,CACNU,EAAW,MAAQ,EAC3B,EACA,EAGM2C,EAAaC,GAAO,CAClB3C,EAAQ,QAAU2C,EAClB1C,EAAU,MAAQA,EAAU,QAAU,MAAQ,OAAS,OAEvDD,EAAQ,MAAQ2C,EAChB1C,EAAU,MAAQ,MAE1B,mrJCsIK2C,GAAU,CACX,KAAM,eACN,WAAY,CAAE,iBAAAC,GAAkB,oBAAAC,GAAqB,wBAAAC,GAAyBC,eAAAA,EAAgB,EAC9F,MAAO,CAAE,SAAU,CAAE,KAAM,QAAS,SAAU,GAAO,QAAS,EAAO,EAAE,QAAS,CAAE,KAAM,QAAS,SAAU,GAAO,QAAS,GAAQ,EACnI,MAAO,CAAC,OAAO,EACf,MAAM7D,EAAO,CAAE,KAAA8D,GAAQ,CACnB,MAAM5D,EAAQC,GAAU,EAClB4D,EAAQ1D,EAAI,EAAE,EACd2D,EAAW3D,EAAI,IAAI,EACnB4D,EAAY5D,EAAI,EAAK,EACrB6D,EAAgB7D,EAAI,EAAK,EACzB8D,EAAiB9D,EAAI,CAAC,EACtB+D,EAAS/D,EAAI,EAAE,EACfgE,EAAOhE,EAAI,EAAE,EAEbK,EAAgBL,EAAI,EAAE,EACtBM,EAAWN,EAAI,EAAE,EACjBG,EAAgBH,EAAI,IAAI,EAExBD,EAASC,EAAI,EAAE,EACfiE,EAAYjE,EAAI,EAAE,EAClBkE,EAAuBlE,EAAI,EAAE,EAC7BQ,EAAUR,EAAI,aAAa,EAC3BS,EAAYT,EAAI,KAAK,EAErBC,EAAcD,EAAI,CAAC,EACnBE,EAAWF,EAAI,EAAE,EAEjBmE,EAAQtD,EAAS,IAAMhB,EAAM,QAAQ,yBAAyB,CAAC,EAE/DuE,GAAUvD,EAAS,IAAMwD,GAAiB,CAAC,yBAA0B,CAAC,mBAAoBF,EAAM,KAAK,CAAC,CAAC,GAAK,CAACxE,EAAM,QAAQ,EAE3H2E,EAAoBtE,EAAI,EAAK,EAC7BuE,EAAevE,EAAI,IAAI,EACvBwE,GAAiBnD,GAAS,CAC5BkD,EAAa,MAAQlD,EACrBiD,EAAkB,MAAQ,EAC7B,EACKG,GAAe,IAAM,CACvBF,EAAa,MAAQ,KACrBD,EAAkB,MAAQ,EAC7B,EACKI,EAAa,SAAY,CAC3B,GAAKH,EAAa,MAClB,GAAI,CACA,MAAMzB,EAAI,OAAO,eAAeqB,EAAM,MAAM,IAAI,uBAAuBI,EAAa,MAAM,EAAE,EAAE,EAC9FD,EAAkB,MAAQ,GAC1BzE,EAAM,OAAO,cAAe,6BAA6B0E,EAAa,MAAM,WAAW,EAAE,EACzFA,EAAa,MAAQ,KACrB,MAAMI,EAAQ,CAChB,OAAO5B,EAAO,CACZlD,EAAM,OAAO,YAAakD,EAAM,SAAS,IAAI,CACjD,CACH,EAGK6B,EAAU,SAAY,CACxB,GAAI,CACA,MAAMC,EAAW,MAAM/B,EAAI,IAAI,WAAW,EAC1CkB,EAAK,MAAQa,EAAS,IACxB,OAAO9B,EAAO,CACZlD,EAAM,OAAO,YAAakD,EAAM,SAAS,IAAI,CACjD,CACH,EAEK4B,EAAW,SAAY,OACzB,GAAKR,EAAM,MAAM,KACjB,GAAI,CACA,MAAMtE,EAAM,SAAS,kBAAmBsE,EAAM,KAAK,EACnDT,EAAM,MAAQS,EAAM,MAAM,aAAa,KACzC,OAAOpB,EAAO,CACZlD,EAAM,OAAO,cAAamD,EAAAD,EAAM,WAAN,YAAAC,EAAgB,OAAQD,CAAK,CAC3D,CACH,EAEK+B,EAAU3B,GAAO,CACf3C,EAAQ,QAAU2C,EAClB1C,EAAU,MAAQA,EAAU,QAAU,MAAQ,OAAS,OAEvDD,EAAQ,MAAQ2C,EAChB1C,EAAU,MAAQ,MAEzB,EAEKsE,EAAW,IAAM,CACnBlB,EAAc,MAAQ,GACtBD,EAAU,MAAQ,GAClBD,EAAS,MAAQ,KACjBG,EAAe,OAClB,EAEKkB,EAAa3D,GAAS,aAIxB,GAHAwC,EAAc,MAAQ,GACtBD,EAAU,MAAQvC,EAAK,IAEnB2B,EAAA3B,EAAK,OAAL,MAAA2B,EAAW,SAEXW,EAAS,MAAQ,CACb,GAAItC,EAAK,GACT,SAAU,GACV,YAAa,CAAE,QAASA,EAAK,QAAS,YAAaA,EAAK,WAAa,EACrE,eAAgB,CAAE,SAAUA,EAAK,SAAU,KAAMA,EAAK,YAAc,EACpE,WAAY2C,EAAK,MAAM,KAAKiB,GAAKA,EAAE,eAAiB5D,EAAK,GAAG,GAAK,KACjE,YAAaA,EAAK,KAAK,UAAY,EACtC,MACE,CACH,MAAM6D,EAAO,CACT,GAAG7D,EAAK,KACR,SAAU,GACV,oBAAmB8D,EAAA9D,EAAK,OAAL,YAAA8D,EAAW,sBAAqBC,EAAA/D,EAAK,OAAL,YAAA+D,EAAW,WAAY,EAC7E,EAEDzB,EAAS,MAAQ,CACb,GAAItC,EAAK,GACT,QAASA,EAAK,QACd,YAAaA,EAAK,YAClB,aAAcA,EAAK,aACnB,SAAUA,EAAK,SACf,IAAKA,EAAK,IACV,cAAeA,EAAK,cACpB,cAAe,CAAC,WAAY,SAAS,EAAE,UAASgE,EAAAhE,EAAK,OAAL,YAAAgE,EAAW,cAAc,EACzE,KAAAH,EACA,kBAAmBA,EAAK,kBACxB,SAAU,EACb,CACL,CAEApB,EAAe,OAClB,EAGKwB,EAAa,IAAM,CACrBzB,EAAc,MAAQ,GACtBD,EAAU,MAAQ,GAClBD,EAAS,MAAQ,KACjBI,EAAO,MAAQ,CAAE,CACpB,EAEKwB,EAAmB1E,EAAS,IAAM,aACpC,OAAKmC,EAAAW,EAAS,QAAT,MAAAX,EAAgB,SAEjB,CAAC,GAACmC,EAAAxB,EAAS,MAAM,cAAf,MAAAwB,EAA4B,UAC9B,CAAC,GAACC,EAAAzB,EAAS,MAAM,iBAAf,MAAAyB,EAA+B,aAChCC,EAAA1B,EAAS,MAAM,cAAf,YAAA0B,EAA4B,OAAO,SAAU,GAJZ,EAM1C,CAAC,EAEKG,GAAc,IAAM,OACtB,MAAMC,IAAazC,EAAAW,EAAS,QAAT,YAAAX,EAAgB,KAAM,KACzCW,EAAS,MAAQ,CACb,GAAI8B,EACJ,SAAU,GACV,YAAa,KACb,eAAgB,KAChB,WAAY,KACZ,YAAa,EAChB,CACJ,EAEKC,GAAyBC,GAAY,CACnCA,GAAY,CAACA,EAAS,WACtBhC,EAAS,MAAQ,CACb,GAAGgC,EACH,SAAU,GACV,cAAe,CAAC,WAAY,SAAS,EAAE,SAASA,EAAS,cAAc,EACvE,kBAAmB,EACtB,EAGR,EAEKC,GAAqB/E,EAAS,IAAM,OACtC,OAAKmC,EAAAW,EAAS,QAAT,MAAAX,EAAgB,eACNW,EAAS,MAAM,mBAAqB,IAC9C,QAAQ,WAAY,EAAE,EACtB,KAAM,EACE,QAAU,GAJoB,EAK/C,CAAC,EAGKkC,GAAiBC,GAAO,CAC1B,MAAMC,EAAYD,GAAA,MAAAA,EAAI,MAAQ,OAAO,KAAKA,EAAG,IAAI,EAAE,OAAUA,EAAG,KAAO,CAAE,EAEnEE,EAAO,CAET,YAAmBD,EAAS,aAAqBD,EAAG,YACpD,YAAmBC,EAAS,aAAqBD,EAAG,YACpD,QAAmBC,EAAS,SAAqBD,EAAG,QACpD,UAAmBC,EAAS,WAAqBD,EAAG,WAAa,KACjE,aAAmBC,EAAS,cAAqBD,EAAG,aACpD,SAAmBC,EAAS,UAAqBD,EAAG,SACpD,aAAmBC,EAAS,cAAqBD,EAAG,cAAgB,KACpE,IAAmBC,EAAS,KAAqBD,EAAG,IACpD,SAAmBC,EAAS,UAAqBD,EAAG,UAAY,KAChE,MAAmBC,EAAS,OAAqBD,EAAG,OAAS,KAC7D,kBAAmBC,EAAS,mBAAqBD,EAAG,mBAAqB,KACzE,eAAmBC,EAAS,gBAAqBD,EAAG,gBAAkB,KACtE,mBAAmBC,EAAS,oBAAqBD,EAAG,oBAAsB,KAC1E,cAAmBC,EAAS,eAAqBD,EAAG,eAAiB,KACrE,gBAAmBC,EAAS,iBAAqBD,EAAG,iBAAmB,KACvE,cAAmBC,EAAS,eAAqBD,EAAG,eAAiB,KACrE,WAAmBC,EAAS,YAAqBD,EAAG,YAAc,KAClE,aAAmBC,EAAS,cAAqBD,EAAG,cAAgB,KACpE,SAAmBC,EAAS,UAAqBD,EAAG,UAAY,KAGhE,SAAU,GACV,cAAe,CAAC,EAACA,GAAA,MAAAA,EAAI,eACrB,kBACCA,GAAA,MAAAA,EAAI,eAAiBA,GAAA,YAAAA,EAAI,oBAAqBC,EAAS,mBAAqB,GACtDA,EAAS,mBAAqB,EACxD,EAGD,cAAO,KAAKC,CAAI,EAAE,QAAQC,GAAKD,EAAKC,CAAC,IAAM,QAAa,OAAOD,EAAKC,CAAC,CAAC,EAC/DD,CACV,EAEKE,GAAW,SAAY,oBACzB,GAAI,CACA,IAAIC,GACJ,GAAIxC,EAAS,MAAM,SAAU,CACzB,MAAMuB,GAAO,CACT,SAAU,GACV,SAAUvB,EAAS,MAAM,YACzB,WAAUX,EAAAW,EAAS,MAAM,aAAf,YAAAX,EAA2B,OAAQ,GAC7C,QAAOmC,EAAAxB,EAAS,MAAM,aAAf,YAAAwB,EAA2B,QAAS,EAC9C,EACDgB,GAAU,CACN,SAAU,GACV,UAASf,EAAAzB,EAAS,MAAM,cAAf,YAAAyB,EAA4B,UAAW,KAChD,cAAaC,EAAA1B,EAAS,MAAM,cAAf,YAAA0B,EAA4B,cAAe,GACxD,eAAce,EAAAzC,EAAS,MAAM,iBAAf,YAAAyC,EAA+B,OAAQ,GACrD,WAAUC,EAAA1C,EAAS,MAAM,iBAAf,YAAA0C,EAA+B,WAAY,GACrD,MAAKC,GAAA3C,EAAS,MAAM,aAAf,YAAA2C,GAA2B,eAAgB,GAChD,KAAApB,GACA,cAAe,IAClB,MACE,CACH,MAAMqB,GAAWV,GAAclC,EAAS,KAAK,EAE7CwC,GAAU,CACN,QAASxC,EAAS,MAAM,QACxB,YAAaA,EAAS,MAAM,YAC5B,aAAcA,EAAS,MAAM,aAC7B,SAAUA,EAAS,MAAM,SACzB,IAAKA,EAAS,MAAM,IACpB,cAAeA,EAAS,MAAM,cAC9B,KAAM4C,GACN,SAAU,EACb,CACL,CAEI3C,EAAU,MACV,MAAMd,EAAI,IAAI,eAAeqB,EAAM,MAAM,IAAI,uBAAuBP,EAAU,KAAK,GAAIuC,EAAO,EAE9F,MAAMrD,EAAI,KAAK,eAAeqB,EAAM,MAAM,IAAI,sBAAuB,CAAE,MAAO,CAACgC,EAAO,CAAA,CAAG,EAG7F,MAAMxB,EAAU,EAChBW,EAAY,EACZ7B,EAAK,OAAO,CACd,OAAOV,GAAO,CACRyD,GAAoBzD,EAAK,EACzBgB,EAAO,MAAQhB,GAAM,SAAS,KAAK,OAEnClD,EAAM,OAAO,YAAakD,GAAM,SAAS,IAAI,CAErD,CACH,EAEK0D,EAAS,MAAMpF,GAAQ,CACzB,GAAI,CACA,MAAMyB,EAAI,OAAO,eAAeqB,EAAM,MAAM,IAAI,uBAAuB9C,EAAK,EAAE,EAAE,EAChF,MAAMsD,EAAU,CAClB,OAAO5B,EAAO,CACZlD,EAAM,OAAO,YAAakD,EAAM,SAAS,IAAI,CACjD,CACH,EAEKH,GAAa,MAAMvB,GAAQ,CAC7BlB,EAAc,MAAQkB,EAAK,GAC3B,MAAMwB,EAAUxB,EAAK,KACrB,GAAI,CACA,MAAMyB,EAAI,IAAI,eAAeqB,EAAM,MAAM,IAAI,kCAAmC,CAAE,IAAK,CAAC9C,EAAK,EAAE,EAAG,KAAMA,EAAK,MAAQ,KAAM,EAC3HxB,EAAM,OAAO,cAAe,oBAAoBwB,EAAK,WAAW,EAAE,CACpE,MAAc,CACZA,EAAK,KAAOwB,EACZhD,EAAM,OAAO,YAAa,uBAAuB,CACrD,QAAU,CACNM,EAAc,MAAQ,IAC1B,CACH,EAEK8C,GAAgB,SAAY,CAC9B,GAAI,GAAC3C,EAAS,OAASD,EAAc,MAAM,SAAW,GACtD,GAAI,CACA,MAAMyC,EAAI,IAAI,eAAeqB,EAAM,MAAM,IAAI,kCAAmC,CAAE,IAAK9D,EAAc,MAAO,KAAMC,EAAS,MAAO,EAClIT,EAAM,OAAO,cAAe,oBAAoBQ,EAAc,MAAM,MAAM,QAAQ,EAClFA,EAAc,MAAQ,CAAE,EACxB,MAAMsE,EAAQ,EACdrE,EAAS,MAAQ,EACnB,MAAc,CACZT,EAAM,OAAO,YAAa,gCAAgC,CAC9D,CACH,EAEKyC,GAAeE,GAAM,CACnBnC,EAAc,MAAM,SAASmC,CAAE,EAC/BnC,EAAc,MAAQA,EAAc,MAAM,OAAOqG,GAAKA,IAAMlE,CAAE,EAE9DnC,EAAc,MAAM,KAAKmC,CAAE,CAElC,EAEKC,GAAkB,IAAM,CAC1B,MAAMC,EAAYT,GAAe,MAAM,IAAIlB,GAAKA,EAAE,EAAE,EAChC2B,EAAU,MAAMF,GAAMnC,EAAc,MAAM,SAASmC,CAAE,CAAC,EAEtEnC,EAAc,MAAQA,EAAc,MAAM,OAAOmC,GAAM,CAACE,EAAU,SAASF,CAAE,CAAC,EAE9EnC,EAAc,MAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,GAAGA,EAAc,MAAO,GAAGqC,CAAS,CAAC,CAAC,CAEhF,EAEKiE,GAAyB9F,EAAS,IAAM,CAC1C,IAAI+F,EAAS,CAAC,GAAGlD,EAAM,KAAK,EAC5B,MAAMtC,EAAUrB,EAAO,MAAM,YAAa,EAC1C,OAAIqB,IACAwF,EAASA,EAAO,OAAO7F,GAAA,cAClB,OAAAA,EAAE,aAAeA,EAAE,YAAY,YAAa,EAAC,SAASK,CAAO,GAC7DL,EAAE,UAAYA,EAAE,SAAS,cAAc,SAASK,CAAO,GACvDL,EAAE,cAAgBA,EAAE,aAAa,cAAc,SAASK,CAAO,GAC/DL,EAAE,KAAOA,EAAE,IAAI,cAAc,SAASK,CAAO,KAC7C4B,EAAAjC,EAAE,OAAF,YAAAiC,EAAQ,WAAYjC,EAAE,KAAK,SAAS,YAAa,EAAC,SAASK,CAAO,KAClE+D,EAAApE,EAAE,OAAF,YAAAoE,EAAQ,eAAgBpE,EAAE,KAAK,aAAa,YAAa,EAAC,SAASK,CAAO,KAC1EgE,EAAArE,EAAE,OAAF,YAAAqE,EAAQ,iBAAkBrE,EAAE,KAAK,eAAe,YAAa,EAAC,SAASK,CAAO,KAC9EiE,GAAAtE,EAAE,OAAF,YAAAsE,GAAQ,aAActE,EAAE,KAAK,WAAW,YAAW,EAAG,SAASK,CAAO,EAC1E,GAED6C,EAAU,QACV2C,EAASA,EAAO,OAAO7F,GAAKA,EAAE,MAAQkD,EAAU,KAAK,GAErDC,EAAqB,QACrB0C,EAASA,EAAO,OAAO7F,GAAE,OAAG,QAAAiC,EAAAjC,EAAE,OAAF,YAAAiC,EAAQ,kBAAmBkB,EAAqB,MAAK,GAGrF0C,EAAO,KAAK,CAAC3F,EAAGC,IAAM,CAClB,IAAIU,EAAMC,EAEV,OAAQrB,EAAQ,MAAK,CACjB,IAAK,UACDoB,EAAO,GAAGX,EAAE,UAAY,EAAE,IAAIA,EAAE,cAAgB,EAAE,GAAG,YAAa,EAClEY,EAAO,GAAGX,EAAE,UAAY,EAAE,IAAIA,EAAE,cAAgB,EAAE,GAAG,YAAa,EAClE,MACJ,IAAK,MACDU,EAAOX,EAAE,KAAO,GAChBY,EAAOX,EAAE,KAAO,GAChB,MACJ,IAAK,OAED,OAAAU,EAAOX,EAAE,KAAO,OAAOA,EAAE,IAAI,EAAI,EACjCY,EAAOX,EAAE,KAAO,OAAOA,EAAE,IAAI,EAAI,EAC1BT,EAAU,QAAU,MAAQmB,EAAOC,EAAOA,EAAOD,EAC5D,QACIA,EAAOX,EAAE,aAAe,GACxBY,EAAOX,EAAE,aAAe,EAChC,CAGA,OAAOT,EAAU,QAAU,MACrBmB,EAAK,cAAcC,CAAI,EACvBA,EAAK,cAAcD,CAAI,CACjC,CAAC,EAEMgF,CACX,CAAC,EAEKC,GAAgB,MAAOxF,GAAS,OAClC,GAAI,CACA,MAAM2E,EAAO3E,EAAK,QAClB,GAAI,CAAC2E,EAAM,OAEX,MAAMG,EAAU,CACZ,SAAU,GACV,QAASH,EAAK,QACd,YAAaA,EAAK,YAClB,aAAcA,EAAK,aACnB,SAAUA,EAAK,SACf,IAAKA,EAAK,IACV,cAAeA,EAAK,cACpB,KAAM,CACF,GAAGA,EACH,SAAUA,EAAK,SACf,cAAe,CAAC,WAAY,SAAS,EAAE,UAAShD,EAAAgD,EAAK,OAAL,YAAAhD,EAAW,cAAc,CAC5E,CACJ,EAED,MAAMF,EAAI,IAAI,eAAeqB,EAAM,MAAM,IAAI,uBAAuB9C,EAAK,EAAE,GAAI8E,CAAO,EACtFtG,EAAM,OAAO,cAAe,WAAWwB,EAAK,WAAW,mBAAmB,EAC1E,MAAMsD,EAAU,CACpB,MAAY,CACR9E,EAAM,OAAO,YAAa,yCAAyC,CACvE,CACH,EAGKiH,GAAajG,EAAS,IAAM,CAAC,GAAG,IAAI,IAAI6C,EAAM,MAAM,IAAI3C,GAAKA,EAAE,GAAG,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,EACrFgG,GAAwBlG,EAAS,IAAM,CAAC,GAAG,IAAI,IAAI6C,EAAM,MAAM,IAAI3C,GAAK,OAAA,OAAAiC,EAAAjC,EAAE,OAAF,YAAAiC,EAAQ,eAAc,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,EACjHhB,GAAanB,EAAS,IAAM,KAAK,KAAK8F,GAAuB,MAAM,OAASzG,EAAS,KAAK,CAAC,EAC3F+B,GAAiBpB,EAAS,IAAM,CAClC,MAAMqB,GAASjC,EAAY,MAAQ,GAAKC,EAAS,MACjD,OAAOyG,GAAuB,MAAM,MAAMzE,EAAOA,EAAQhC,EAAS,KAAK,CAC3E,CAAC,EACKyC,GAAgB9B,EAAS,IAAMoB,GAAe,MAAM,MAAMlB,GAAKV,EAAc,MAAM,SAASU,EAAE,EAAE,CAAC,CAAC,EAExGiG,GAAU,IAAM,CAAErC,EAAQ,EAAIC,EAAO,CAAE,CAAG,EAC1C,MAAMxE,GAAWJ,EAAI,CAAE,CAAA,EASvB,MAAO,CACH,MAAAmE,EAAO,MAAAT,EAAO,SAAAC,EAAU,eAAAG,EAAgB,UAAAF,EAAW,cAAAC,EACnD,KAAAG,EAAM,OAAAD,EAAQ,OAAAhE,EAAQ,UAAAkE,EAAW,qBAAAC,EAAsB,QAAA1D,EAAS,UAAAC,EAChE,SAAAP,EAAU,YAAAD,EAAa,WAAA+B,GAAY,eAAAC,GAAgB,uBAAA0E,GACnD,WAAAG,GAAY,sBAAAC,GACZ,cAAA1G,EAAe,SAAAC,EAAU,cAAAH,EAAe,cAAAwC,GACxC,QAAAyB,GAAS,iBAAAmB,EAAkB,mBAAAK,GAAoB,eAd5BxD,GAAS,CACxBhC,GAAS,MAAM,SAASgC,CAAK,EAC7BhC,GAAS,MAAQA,GAAS,MAAM,OAAOiC,GAAKA,IAAMD,CAAK,EAEvDhC,GAAS,MAAM,KAAKgC,CAAK,CAEjC,EAQmE,SAAAhC,GAC/D,kBAAAkE,EAAmB,aAAAC,EAAc,cAAAC,GAAe,aAAAC,GAAc,WAAAC,EAC9D,QAAAI,EAAS,SAAAC,EAAU,UAAAC,EAAW,WAAAM,EAAY,YAAAE,GAAa,uBAAAE,GAAwB,SAAAQ,GAC/E,OAAAO,EAAQ,WAAA7D,GAAY,cAAAK,GAAe,aAAAX,GAAc,gBAAAG,GAAiB,cAAAoE,EACrE,CACL,CACJ,EA9vBSI,GAAA,CAAA,MAAM,wCAAwC,MAHvD,IAAA,EAI4B,MAAM,2BAJlCC,GAAA,CAAA,UAAA,EAUaC,GAAA,CAAA,MAAM,yBAAyB,EAV5CC,GAAA,CAAA,OAAA,EAAAC,GAAA,CAAA,OAAA,EAgCiBC,GAAA,CAAA,MAAM,yBAAyB,EAhChDC,GAAA,CAAA,OAAA,MAAA,IAAA,EA2CkC,MAAM,sCACxBC,GAAA,CAAA,MAAM,4BAA4B,MA5ClD,IAAA,EAgD4C,MAAM,iBAhDlD,IAAA,EAoEoB,MAAM,uCAEDC,GAAA,CAAA,MAAM,6BAA6B,EAE/BC,GAAA,CAAA,MAAM,uBAAuB,MAxE1D,IAAA,EAoFkD,MAAM,iCApFxD,IAAA,EA2FsD,MAAM,oCAEvCC,GAAA,CAAA,MAAM,wBAAwB,MA7FnD,IAAA,EAkGwD,MAAM,6BAlG9DC,GAAA,CAAA,OAAA,MAAA,IAAA,EA4GuD,MAAM,6BAIpCC,GAAA,CAAA,MAAM,YAAY,EAMlBC,GAAA,CAAA,MAAM,iBAAiB,MAtHhD,IAAA,EA6HwD,MAAM,6BAM7CC,GAAA,CAAA,MAAM,6BAA6B,EAnIpDC,GAAA,CAAA,UAAA,MAAA,IAAA,EAoJsD,MAAM,8DApJ5DC,GAAA,CAAA,UAAA,MAAA,IAAA,EAuKwB,MAAM,0BAvK9B,IAAA,CAAA,EAAAC,GAAA,CAAA,SAAA,MAAA,IAAA,CAAA,MAAA,IAAA,CAAA,MAAA,IAAA,CAAA,MAAA,IAAA,CAAA,MAAA,IAAA,CAAA,MAAA,IAAA,CAAA,EAAAC,GAAA,CAAA,UAAA,UAAA,EAwMoBC,GAAA,CAAA,MAAM,SAAS,MAxMnC,IAAA,EAyMqD,MAAM,8CAzM3D,IAAA,EA6MoG,MAAM,6BAM7EC,GAAA,CAAA,MAAM,YAAY,MAnN/C,IAAA,EAoN6B,MAAM,cApNnCC,GAAA,CAAA,WAAA,EAAAC,GAAA,CAAA,WAAA,MAAA,IAAA,EAyNwC,MAAM,uBAzN9CC,GAAA,CAAA,sBAAA,WAAA,UAAA,EAAAC,GAAA,CAAA,SAAA,MAAA,IAAA,CAAA,MAAA,IAAA,CAAA,EAAAC,GAAA,CAAA,SAAA,MA4PwB,KAAK,SAAS,YAAU,SACxB,MAAM,8FAGDC,GAAA,CAAA,MAAM,wBAAwB,EAItBC,GAAA,CAAA,MAAM,mBAAmB,EApQ9DC,GAAA,CAAA,SAAA,MAAA,IAAA,CAAA,EAAAC,GAAA,CAAA,SAAA,EAAAC,GAAA,CAAA,SAAA,EAsRyBC,GAAA,CAAA,MAAM,wCAAwC,MAtRvE,IAAA,EA0RuG,MAAM,6BAMhFC,GAAA,CAAA,MAAM,YAAY,EAhS/CC,GAAA,CAAA,SAAA,EA4SSC,GAAA,CAAA,MAAM,wCAAwC,EA5SvDC,GAAA,CAAA,UAAA,EAAAC,GAAA,CAAA,UAAA,MAAA,IAAA,EAmTkC,MAAM,8EAC3BC,GAAA,CAAA,MAAM,wCAAwC,EAE5CC,GAAA,CAAA,MAAM,MAAM,EACVC,GAAA,CAAA,MAAM,wBAAwB,oMAtT/CC,EA4TM,MAAA,KAAA,CA1TFC,EAoCM,MApCNzC,GAoCM,CAnCS0C,EAAO,SAAlBC,IAAAH,EAIM,MAJNI,GAIM,CAHFH,EAES,SAAA,CAFD,MAAM,WAAY,4BAAOI,EAAQ,UAAAA,EAAA,SAAA,GAAAC,CAAA,GAAG,SAAUD,EAAa,aAAE,EAAA,eALjF,EAAA5C,EAAA,KAAA8C,EAAA,GAAA,EAAA,EAUQN,EA4BM,MA5BNvC,GA4BM,GA1BFuC,EAKE,QAAA,CAjBd,sBAAAO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAayBJ,EAAM,OAAAI,GACf,KAAK,OACL,YAAY,wCACZ,MAAM,mDAHGJ,EAAM,MAAA,MAOnBJ,EAGS,SAAA,CAvBrB,sBAAAO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAoB6BJ,EAAS,UAAAI,GAAE,MAAM,+BAC9BD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAkC,SAA1B,CAAA,MAAM,EAAE,EAAC,WAAQ,EAAA,IACzBE,EAAA,EAAA,EAAAH,EAA4EU,EAtB5F,KAAAC,EAsBsCN,EAAU,WAAjBO,QAAfZ,EAA4E,SAAA,CAAzC,IAAKY,EAAM,MAAOA,CAAQ,EAAAC,EAAAD,CAAG,EAtBhF,EAAAjD,EAAA,oBAoB6B0C,EAAS,SAAA,MAM1BJ,EAGS,SAAA,CA7BrB,sBAAAO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GA0B6BJ,EAAoB,qBAAAI,GAAE,MAAM,+BACzCD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA6C,SAArC,CAAA,MAAM,EAAE,EAAC,sBAAmB,EAAA,IACpCE,EAAA,EAAA,EAAAH,EAA+EU,EA5B/F,KAAAC,EA4BoCN,EAAqB,sBAA1BS,QAAfd,EAA+E,SAAA,CAAnC,IAAKc,EAAI,MAAOA,CAAM,EAAAD,EAAAC,CAAC,EA5BnF,EAAAlD,EAAA,oBA0B6ByC,EAAoB,oBAAA,IAMrCJ,EAKM,MALNpC,GAKM,CAJF2C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAyC,QAAlC,CAAA,MAAM,SAAS,EAAC,aAAU,EAAA,KACjCA,EAES,SAAA,CApCzB,sBAAAO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAkCiCJ,EAAQ,SAAAI,GAAE,MAAM,sCAC7BN,IAAAH,EAAmFU,EAnCvG,KAAAC,EAmC2C,CAAa,GAAA,GAAA,GAAA,EAArBI,GAAfd,EAAmF,SAAA,CAA5C,IAAKc,EAAO,MAAOA,CAAS,EAAAF,EAAAE,CAAI,EAnC3F,EAAAjD,EAAA,kBAkCiCuC,EAAQ,QAAA,UAQrCW,EAuGaC,GAAA,CAvGD,KAAK,MAAM,EAAA,CA1C3B,QAAAC,EA2CQ,IAqGM,eAAA,OArGKb,EAAa,eAAxBF,IAAAH,EAqGM,MArGNmB,GAqGM,CApGFlB,EAEK,KAFLlC,GAEK8C,EADER,EAAS,UAAA,YAAA,UAAA,EAAA,CAAA,GAGJ9G,EAAA8G,EAAA,WAAA,MAAA9G,EAAU,SAhDlCgH,EAAA,GAAA,EAAA,GAgDYJ,IAAAH,EAwCM,MAxCNoB,GAwCM,CAvCFZ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAmE,QAA5D,CAAA,MAAM,qBAAqB,EAAC,2BAAwB,EAAA,QAC3DoB,GAMEC,EAAA,CAxDlB,WAmD6BjB,EAAQ,SAnDrC,sBAAA,gBAmD6BA,EAAQ,SAAAI,GACIJ,EAAsB,wBAC3C,YAAY,kCACZ,MAAM,SACL,IAAKA,EAAc,8DAExBJ,EAMS,SAAA,CALL,KAAK,SACL,MAAM,sDACL,4BAAOI,EAAW,aAAAA,EAAA,YAAA,GAAAC,CAAA,mBA5DvCiB,EA6DiB,kBACkB,EAAAtB,EAAoC,cAA5B,sBAAmB,EAAA,MAKpCvE,EAAA2E,EAAA,WAAA,MAAA3E,EAAU,eADpByE,IAAAH,EAqBM,MArBNwB,GAqBM,CAjBFvB,EAMM,MANNjC,GAMM,CALFwC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAgD,OAA1C,CAAA,MAAM,2BAA2B,EAAC,IAAC,EAAA,GACzCA,EAGM,MAHNhC,GAGM,CA3E9BuC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAwE2D,iCACL,GAAAtB,EAAoD,SAAzC,KAAAY,GAAAlF,EAAA0E,EAAA,SAAS,OAAT,YAAA1E,EAAe,cAAc,EAAA,CAAA,EAzE9F6E,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAyE0G,4CAElF,OAGJf,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAyE,QAAlE,CAAA,MAAM,gCAAgC,EAAC,sBAAmB,EAAA,GACjEe,EAIES,EAAA,CAnFtB,WAgFiCpB,EAAA,SAAS,kBAhF1C,sBAgFiCG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAJ,EAAA,SAAS,kBAAiBI,GACnC,YAAY,yCACZ,MAAM,iCAEAJ,EAAkB,mBApFhDE,EAAA,GAAA,EAAA,OAoFoBP,EAEI,IAFJ0B,GAAgE,wCAEhE,MAtFpBnB,EAAA,GAAA,EAAA,KA2FuBF,EAAQ,UAAIA,EAAQ,SAAC,UAAhCF,IAAAH,EAqCM,MArCN2B,GAqCM,CApCFnB,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAgF,KAA5E,CAAA,MAAM,4BAA4B,EAAC,uCAAoC,EAAA,GAC3EA,EAkCM,MAlCN/B,GAkCM,CAhCF+B,EAIM,MAAA,KAAA,CAHFO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA4D,QAArD,CAAA,MAAM,gCAAgC,EAAC,SAAM,EAAA,GACpDe,EAAgFY,EAAA,CAjGxG,WAiGmDvB,EAAA,SAAS,YAjG5D,sBAiGmDG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAJ,EAAA,SAAS,YAAWI,GAAE,YAAY,yCACpDJ,EAAM,OAAA,iBAAfL,EAAoG,IAApG6B,GAAoGhB,EAA/BR,EAAM,OAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GAlGnGE,EAAA,GAAA,EAAA,IAsGoBN,EAOM,MAAA,KAAA,CANFO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAyD,QAAlD,CAAA,MAAM,gCAAgC,EAAC,MAAG,EAAA,KACjDA,EAGS,SAAA,CA3GjC,sBAwGyCO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAJ,EAAA,SAAS,WAAUI,GAAE,MAAM,uBACxCD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA6C,SAArC,CAAA,MAAM,EAAE,EAAC,sBAAmB,EAAA,IACpCE,EAAA,EAAA,EAAAH,EAAuGU,EA1GnI,KAAAC,EA0GkDN,EAAI,KAAXO,QAAfZ,EAAuG,SAAA,CAA1E,IAAKY,EAAI,GAAK,MAAOA,KAAQA,EAAI,IAAI,EAAG,KAAEC,EAAGD,EAAI,YAAY,EAAG,IA1GzH,EAAAzC,EAAA,iBAwGyC,CAAA2D,EAAAzB,EAAA,SAAS,UAAU,IAI3BA,EAAM,OAAA,gBAAfL,EAAkG,IAAlG+B,GAAkGlB,EAA9BR,EAAM,OAAA,WAAA,CAAA,CAAA,EAAA,CAAA,GA5GlGE,EAAA,GAAA,EAAA,IAgHoBN,EAGM,MAHN7B,GAGM,CAFFoC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA+D,QAAxD,CAAA,MAAM,gCAAgC,EAAC,YAAS,EAAA,GACvDe,EAAyFgB,EAAA,CAlHjH,WAkHsD3B,EAAA,SAAS,eAlH/D,sBAkHsDG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,GAAAJ,EAAA,SAAS,eAAcI,GAAE,YAAY,8CAIvER,EAQM,MARN5B,GAQM,CAPFmC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAyE,QAAlE,CAAA,MAAM,gCAAgC,EAAC,sBAAmB,EAAA,GACjEe,EAIES,EAAA,CA5H1B,WAyHqCpB,EAAA,SAAS,YAzH9C,sBAyHqCG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,GAAAJ,EAAA,SAAS,YAAWI,GAC7B,YAAY,yCACZ,MAAM,iCAEDJ,EAAM,OAAA,iBAAfL,EAAoG,IAApGiC,GAAoGpB,EAA/BR,EAAM,OAAA,YAAA,CAAA,CAAA,EAAA,CAAA,GA7HnGE,EAAA,GAAA,EAAA,SAAAA,EAAA,GAAA,EAAA,EAmIYN,EAYM,MAZN3B,GAYM,CAXF2B,EAAgE,SAAA,CAAxD,MAAM,eAAgB,8BAAOI,EAAU,YAAAA,EAAA,WAAA,GAAAC,CAAA,IAAE,QAAM,EACvDL,EASS,SAAA,CARL,MAAM,WACL,SAAUI,EAAS,UAAA,KAAsCzE,EAAAyE,EAAQ,WAAR,YAAAzE,EAAU,WAAQ,CAAKyE,EAAgB,qBAA+B1D,EAAA0D,EAAQ,WAAR,MAAA1D,EAAU,WAAQ,CAAK0D,EAAkB,mBAIxK,8BAAOA,EAAQ,UAAAA,EAAA,SAAA,GAAAC,CAAA,EACf,EAAA,SA5IrB,EAAA/B,EAAA,OAAAgC,EAAA,GAAA,EAAA,KAAA,EAAA,IAoJeF,EAAa,cAAC,OAAM,GAAA,CAASH,EAAQ,UAAhDC,IAAAH,EAgBM,MAhBNkC,GAgBM,CAfF1B,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAoD,OAA9C,CAAA,MAAM,eAAe,EAAC,oBAAiB,EAAA,KAC7CA,EAMS,SAAA,CA5JjB,sBAAAO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,GAsJyBJ,EAAQ,SAAAI,GAAE,MAAM,mDAtJzC0B,GAAA,4PAAA,CAAA,aAsJyB9B,EAAQ,QAAA,IAOzBJ,EAMS,SAAA,CALL,MAAM,+DACL,8BAAOI,EAAa,eAAAA,EAAA,cAAA,GAAAC,CAAA,GACpB,SAAW,CAAAD,EAAA,UAAYA,EAAA,cAAc,SAAM,CAC/C,EAAA,UAjKT,EAAA7B,EAAA,KAAA+B,EAAA,GAAA,EAAA,EAuKiBF,EAAK,OAAlBF,IAAAH,EAkIQ,QAlIRoC,GAkIQ,CAjIJnC,EAiBQ,QAAA,KAAA,CAhBJA,EAeK,KAAA,KAAA,CAdSI,EAAA,SAAWH,EAAO,SAA5BC,IAAAH,EAA+G,KA1K/HqC,GAAA,CA0K8CpC,EAA4E,QAAA,CAArE,KAAK,WAAY,QAASI,EAAa,cAAG,+BAAQA,EAAe,iBAAAA,EAAA,gBAAA,GAAAC,CAAA,EA1KtH,EAAA,KAAA,GAAA7B,EAAA,KAAA8B,EAAA,GAAA,EAAA,EA2KgBN,EAEK,KAAA,CAFA,yBAAOI,EAAO,QAAA,aAAA,GAAiB,MAAM,mBA3K1DG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EA2K2E,eAC3C,GAAYlB,EAAO,UAAA,mBAAnBL,EAAmF,OA5KnHsC,KA4K0EjC,EAAS,YAAA,MAAA,IAAA,GAAA,EAAA,CAAA,GA5KnFE,EAAA,GAAA,EAAA,IA8KgBN,EAEK,KAAA,CAFA,yBAAOI,EAAO,QAAA,SAAA,GAAa,MAAM,mBA9KtDG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EA8KuE,WAC3C,GAAYlB,EAAO,UAAA,eAAnBL,EAA+E,OA/K3GuC,KA+KkElC,EAAS,YAAA,MAAA,IAAA,GAAA,EAAA,CAAA,GA/K3EE,EAAA,GAAA,EAAA,IAiLgBN,EAEK,KAAA,CAFA,yBAAOI,EAAO,QAAA,KAAA,GAAS,MAAM,mBAjLlDG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAiLmE,OAC3C,GAAYlB,EAAO,UAAA,WAAnBL,EAA2E,OAlLnGwC,KAkL0DnC,EAAS,YAAA,MAAA,IAAA,GAAA,EAAA,CAAA,GAlLnEE,EAAA,GAAA,EAAA,IAoLgBC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAa,UAAT,OAAI,EAAA,GACRA,EAEK,KAAA,CAFA,yBAAOI,EAAO,QAAA,MAAA,GAAU,MAAM,mBArLnDG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAqLoE,QAC3C,GAAYlB,EAAO,UAAA,YAAnBL,EAA4E,OAtLrGyC,KAsL4DpC,EAAS,YAAA,MAAA,IAAA,GAAA,EAAA,CAAA,GAtLrEE,EAAA,GAAA,EAAA,QA0LqBF,EAAA,eAAe,SAAM,GAAlCF,EAAA,EAAAH,EAIQ,QA9LhB0C,GAAAlC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CA2LYP,EAEK,KAAA,KAAA,CADDA,EAA4D,KAAA,CAAxD,QAAQ,IAAI,MAAM,mBAAkB,iBAAe,WA5LvEM,EAAA,GAAA,EAAA,EA+LQN,EAyGQ,QAAA,KAAA,EAxGJE,EAAA,EAAA,EAAAH,EAuGWU,OAvSvBC,EAgM8CN,EAAA,eAhM9C,CAgM8BzI,EAAMe,IAAK,6DAhMzC,OAAAwH,EAAA,EAAAH,EAAAU,EAAA,CAAA,IAgMoE9I,EAAK,KAC7DqI,EAuDK,KAAA,CAvDA,MAjMjB0C,KAiMwBpJ,EAAA3B,EAAK,OAAL,YAAA2B,EAAW,kBAAc,WAAA,kDAAoEmC,EAAA9D,EAAK,OAAL,YAAA8D,EAAW,kBAAgC,WAAA9D,EAAK,YAAW,gDAAA,EAAA,IACtJyI,EAAA,QAAUH,EAAO,SAA3BC,IAAAH,EAEK,KApMrB4C,GAAA,CAmMoB3C,EAAoG,QAAA,CAA7F,KAAK,WAAY,QAASI,EAAa,cAAC,SAASzI,EAAK,EAAE,EAAI,SAAQ6I,GAAAJ,EAAA,aAAazI,EAAK,EAAE,CAnMnH,EAAA,KAAA,GAAA8G,EAAA,KAAA6B,EAAA,GAAA,EAAA,EAqMgBN,EAA+B,KAAA,KAAAY,EAAxBjJ,EAAK,WAAW,EAAA,CAAA,EACvBqI,EAAyD,KAAA,KAAA,CAtMzEsB,EAsMuBV,EAAAjJ,EAAK,QAAQ,EAAA,CAAA,gBAAGqI,EAAM,KAAA,KAAA,KAAA,EAAA,GAtM7CsB,EAsMgDV,EAAAjJ,EAAK,YAAY,EAAA,CAAA,IACjDqI,EAAuB,KAAA,KAAAY,EAAhBjJ,EAAK,GAAG,EAAA,CAAA,EACfqI,EAeK,KAfLtB,GAeK,EAdWhD,EAAA/D,EAAK,OAAL,MAAA+D,EAAW,cAavBqE,EAA+C,MAAA,CAtNnE,IAAA,EAsNgC,WAAQ6C,EAAAjL,EAAK,OAAL,YAAAiL,EAAW,QAtNnD,EAAA,KAAA,EAAA/D,EAAA,IAyMoBqB,IAAAH,EAYM,MAZN8C,GAYM,CAXF7C,EAAgF,MAAA,KAAA,CAA3EO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA8B,cAAtB,gBAAa,EAAA,GA1MlDsB,EA0M2D,IAAIV,IAAAjF,EAAAhE,EAAK,OAAL,YAAAgE,EAAW,eAAY,KAAA,EAAA,CAAA,IAC9DqE,EAGM,MAAA,KAAA,CAFFO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAgC,cAAxB,kBAAe,EAAA,GA5MnDsB,EA4M4D,QAAI5E,EAAA/E,EAAK,OAAL,YAAA+E,EAAW,wBAA0B,IACzE,CAAA,EAAmC,CAAA,WAAA,SAAA,EAAA,UAASC,EAAAhF,EAAK,OAAL,YAAAgF,EAAW,cAAc,OAArEoD,EAAkH,OAAlH+C,GAA0G,GAAC,GA7MvIxC,EAAA,GAAA,EAAA,IA+MwBN,EAA6E,MAAA,KAAA,CAAxEO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAwB,cAAhB,UAAO,EAAA,GA/M5CsB,EA+MqD,IAAIV,IAAAhE,GAAAjF,EAAK,OAAL,YAAAiF,GAAW,kBAAe,KAAA,EAAA,CAAA,IAC3DoD,EAEM,MAAA,KAAA,CAFDO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA+B,cAAvB,iBAAc,EAAA,GAhNnDsB,EAgN4D,IAC7BV,GAAAmC,EAAApL,EAAK,OAAL,MAAAoL,EAAW,cAAa,IAAO,MAAKC,EAAArL,EAAK,OAAL,YAAAqL,EAAW,aAAa,EAAE,mBAAkB,EAAA,KAAA,EAAA,CAAA,IAEvFhD,EAA+F,MAA/FrB,GAA+F,CAAvE4B,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA4B,cAApB,cAAW,EAAA,GAnNnEsB,EAmN4E,IAAIV,IAAAqC,GAAAtL,EAAK,OAAL,YAAAsL,GAAW,aAAU,KAAA,EAAA,CAAA,KAC9CC,GAAAvL,EAAK,OAAL,MAAAuL,GAAW,eAA1ChD,IAAAH,EAAyI,MAAzIoD,GAAyI,CAAhF5C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAsB,cAAd,QAAK,EAAA,GApN9FO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAAA,GAoNwGtB,EAAmD,OAAA,CAA7C,WAAQoD,EAAAzL,EAAK,OAAL,YAAAyL,EAAW,iBApNjI,EAAA,KAAA,EAAAxE,EAAA,KAAA0B,EAAA,GAAA,EAAA,OAwNgBN,EA+BK,KAAA,KAAA,CA9BUC,EAAO,SAAlBC,IAAAH,EA4BM,MA5BNsD,GA4BM,GA3BFrD,EAWS,SAAA,CArOjC,sBA2NqCQ,GAAA7I,EAAK,KAAI6I,EAClB,MAAM,qCACL,SAAMA,GAAEJ,EAAU,WAACzI,CAAI,EACvB,SAAUyI,EAAa,gBAAKzI,EAAK,IAAMsI,EAAQ,yBA9N5EiC,GAAA,sPAAA,CAAA,CAAA,GAAA,GAAApD,EAAA,EAAA,CA2NqC,CAAA+C,EAAAlK,EAAK,IAAI,IAWRA,EAAK,aAAeA,EAAK,aAAvCoI,EAOS,SAAA,CA7OjC,IAAA,EAuO6B,QAAKS,GAAEJ,EAAa,cAACzI,CAAI,EAC1B,MAAM,6DACN,MAAM,+CAEL,EAAA,2BA3O7B,EAAAoH,EAAA,GAAAuB,EAAA,GAAA,EAAA,EA8O8C3I,EAAK,SA9OnD2I,EAAA,GAAA,EAAA,OA8OwBc,GAMgBkC,EAAA,CApPxC,IAAA,EA8O8D,gBAAe,GAAM,MAAM,aAClD,QACP,IAAwD/C,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAAxDP,EAAwD,SAAhD,CAAA,MAAM,iCAAgC,IAAC,EAAA,KAhP/E,QAAAiB,EAkP4B,IAA4D,CAA5DF,EAA4DwC,EAAA,CAA5C,QAAK/C,GAAEJ,EAAS,UAACzI,CAAI,IAlPjE,QAAAsJ,EAkPoE,IAAIV,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAlPxEe,EAkPoE,MAAI,KAlPxE,EAAA,qBAmP4BP,EAAkEwC,EAAA,CAAlD,QAAK/C,GAAEJ,EAAa,cAACzI,CAAI,IAnPrE,QAAAsJ,EAmPwE,IAAMV,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAnP9Ee,EAmPwE,QAAM,KAnP9E,EAAA,uBAAA,EAAA,cAsPoBpB,EAAA,EAAAH,EAA0C,OAtP9DyD,GAAA5C,EAsPoCjJ,EAAK,MAAI,GAAA,EAAA,CAAA,SAGvBA,EAAK,aAAeA,EAAK,SAAnCuI,IAAAH,EAoBK,KA7QjB0D,GAAA,CA0PgBzD,EAkBK,KAAA,CAlBA,QAASC,EAAO,QAAA,EAAA,IACjBD,EAgBM,MAhBN0D,GAgBM,CAXF1D,EAUM,MAVNf,GAUM,CA1Q9BsB,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAgQ4D,KAEhC,GAAAtB,EAOM,MAAA,KAAA,CANFO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAmD,MAA9C,CAAA,MAAM,aAAa,EAAC,uBAAoB,EAAA,GAC7CA,EAIM,MAJNd,GAIM,CAxQtCqB,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAoQ+D,wDAC5B,GAAAtB,EAEQ,OAAA,CAFD,WAAOrI,EAAK,aAAeyI,EAAA,eAAe1H,CAAK,EAAG,MAAM,wCAC1D,EAAAkI,EAAAR,EAAA,SAAS,SAAS1H,CAAK,EAAA,OAAA,MAAA,EAAsB,qBAtQrF,EAAAyG,EAAA,SAAA,EAAA,EAAAH,EAAA,KAAAsB,EAAA,GAAA,EAAA,EA8QsB3I,EAAK,aAAeA,EAAK,SAAWyI,EAAQ,SAAC,SAAS1H,CAAK,GAArEwH,IAAAH,EAwBK,KAtSjB4D,GAAA,CA+Q0B1D,EAAO,aAAjBF,EAEK,KAAA,CAjRrB,IAAA,EA+QoC,QAAKS,GAAEJ,EAAc,eAAC1H,CAAK,kBAC3CsH,EAAkV,MAAA,CAA7U,MAAM,6BAA6B,MAAM,KAAK,OAAO,KAAK,QAAQ,YAAY,kBAAgB,MAAM,KAAK,eAAe,KAAK,gBAAgB,MAAM,0BAAwBA,EAAqC,QAAA,CAA9B,GAAG,MAAM,KAAK,MAAK,KAAG,EAAQA,EAAuH,IAAA,CAApH,KAAK,cAAc,EAAA,CAACA,EAA4F,OAAA,CAAtF,EAAE,4EAA4E,CAAA,QAhRpV,GAAA,EAAAZ,EAAA,GAAAkB,EAAA,GAAA,EAAA,EAkRgBN,EAAwC,KAAjC,KAAAY,GAAAgD,EAAAjM,EAAK,UAAL,YAAAiM,EAAc,WAAW,EAAA,CAAA,EAChC5D,EAA2E,KAAA,KAAA,CAnR3FsB,EAAAV,GAmRuBiD,EAAAlM,EAAK,UAAL,YAAAkM,EAAc,QAAQ,EAAA,CAAA,gBAAG7D,EAAM,KAAA,KAAA,KAAA,EAAA,GAnRtDsB,EAAAV,GAmRyDkD,EAAAnM,EAAK,UAAL,YAAAmM,EAAc,YAAY,EAAA,CAAA,IACnE9D,EAAgC,KAAzB,KAAAY,GAAAmD,EAAApM,EAAK,UAAL,YAAAoM,EAAc,GAAG,EAAA,CAAA,EACxB/D,EAaK,KAAA,CAbD,MAAM,UAAW,QAASC,EAAO,QAAA,EAAA,IACjCD,EAWM,MAXNV,GAWM,CAVFU,EAAmF,MAAA,KAAA,CAA9EO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA8B,cAAtB,gBAAa,EAAA,GAvRlDsB,EAuR2D,IAAIV,IAAAoD,EAAArM,EAAK,UAAL,YAAAqM,EAAc,eAAY,KAAA,EAAA,CAAA,IACjEhE,EAGM,MAAA,KAAA,CAFFO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAgC,cAAxB,kBAAe,EAAA,GAzRnDsB,EAyR4D,QAAI2C,EAAAtM,EAAK,UAAL,YAAAsM,EAAc,wBAA0B,IAC5E,CAAA,EAAmC,CAAA,WAAA,SAAA,EAAA,UAASC,GAAAvM,EAAK,UAAL,YAAAuM,GAAc,cAAc,OAAxEnE,EAAqH,OAArHoE,GAA6G,GAAC,GA1R1I7D,EAAA,GAAA,EAAA,IA4RwBN,EAAgF,MAAA,KAAA,CAA3EO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAAwB,cAAhB,UAAO,EAAA,GA5R5CsB,EA4RqD,IAAIV,IAAAwD,GAAAzM,EAAK,UAAL,YAAAyM,GAAc,kBAAe,KAAA,EAAA,CAAA,IAC9DpE,EAEM,MAAA,KAAA,CAFDO,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA+B,cAAvB,iBAAc,EAAA,GA7RnDsB,EA6R4D,IAC7BV,GAAAyD,GAAA1M,EAAK,UAAL,MAAA0M,GAAc,cAAa,IAAO,MAAKC,GAAA3M,EAAK,UAAL,YAAA2M,GAAc,aAAa,EAAE,mBAAkB,EAAA,KAAA,EAAA,CAAA,IAE7FtE,EAAkG,MAAlGT,GAAkG,CAA1EgB,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA4B,cAApB,cAAW,EAAA,GAhSnEsB,EAgS4E,IAAIV,IAAA2D,GAAA5M,EAAK,UAAL,YAAA4M,GAAc,aAAU,KAAA,EAAA,CAAA,KAhSxG,EAAA,EAAAlF,EAAA,EAmS4BY,EAAO,QAnSnCK,EAAA,GAAA,EAAA,OAmSgBP,EAEK,KAAA,CArSrB,IAAA,EAmSsC,QAAKS,GAAEJ,EAAc,eAAC1H,CAAK,CAAG,EAAA,SAnSpE,EAAA8G,EAAA,MAAAc,EAAA,GAAA,EAAA,oBAAAA,EAAA,GAAA,EAAA,EA4SIN,EAIM,MAJNP,GAIM,CAHFO,EAA+F,SAAA,CAAvF,MAAM,eAAgB,SAAUI,EAAW,cAAA,EAAS,yBAAOA,EAAW,cAAI,EAAA,OA7S1F,EAAAV,EAAA,EA8SQM,EAAuD,YAAjD,QAAKY,EAAGR,aAAW,EAAG,SAAOA,EAAU,UAAA,EAAA,CAAA,EAC7CJ,EAAwG,SAAA,CAAhG,MAAM,eAAgB,SAAUI,EAAW,cAAKA,EAAU,WAAG,yBAAOA,EAAW,cAAI,EAAA,OA/SnG,EAAAT,EAAA,IAmTeS,EAAiB,mBAA5BF,IAAAH,EASM,MATNyE,GASM,CARFxE,EAOM,MAPNJ,GAOM,CANFW,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAP,EAA2D,KAAvD,CAAA,MAAM,4BAA4B,EAAC,kBAAe,EAAA,GACtDA,EAAqG,IAArGH,GAAqG,CAtTjHU,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAsT4B,kCAAgC,GAAAtB,EAAgD,SAAA,KAAAY,GAArCtH,EAAA8G,EAAY,eAAZ,YAAA9G,EAAc,WAAW,EAAA,CAAA,EAtThGiH,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAe,EAsT4G,GAAC,KACjGtB,EAGM,MAHNF,GAGM,CAFFE,EAAkE,SAAA,CAA1D,MAAM,eAAgB,8BAAOI,EAAY,cAAAA,EAAA,aAAA,GAAAC,CAAA,IAAE,QAAM,EACzDL,EAA+D,SAAA,CAAvD,MAAM,cAAe,8BAAOI,EAAU,YAAAA,EAAA,WAAA,GAAAC,CAAA,IAAE,QAAM,SAzTtEC,EAAA,GAAA,EAAA,oECCK5G,GAAU,CACX,KAAM,eACN,MAAO,CACH,SAAU,CACN,KAAM,QACN,QAAS,EACb,CACH,EACD,MAAO,CACH,MAAO,CACH,KAAM,CACF,MAAO,KACP,KAAM,EACT,EACD,WAAY,CACR,CACI,KAAM,OACN,KAAM,OACN,SAAU,EACb,EACD,CACI,KAAM,SACN,MAAO,SACP,KAAM,OACN,SAAU,EACb,EACD,CACI,KAAM,aACN,MAAO,eACP,KAAM,KACN,SAAU,EACb,CACL,CACJ,CACH,EACD,SAAU,CACN,OAAS,CACL,OAAO,KAAK,OAAO,QAAQ,yBAAyB,CACvD,EACD,mBAAqB,CACjB,OAAO,KAAK,MAAM,aAAa,gBAAkB,KAAK,MAAM,aAAa,eAAe,OAAS,CACpG,EACD,gBAAkB,CACd,OAAO,KAAK,MAAM,aAAa,cACnC,CACH,EACD,MAAO,CACH,MAAO+K,EAAI,CACP,KAAK,OAAO,SAAS,2BAA4BA,CAAE,CACvD,CACH,EACD,SAAU,CACN,KAAK,OAAO,SAAS,2BAA4B,KAAK,KAAK,CAC9D,EACD,QAAS,CACL,WAAa,CACT,OAAO,SAAW,+BACtB,CACJ,CACJ,MA5DA,IAAA,EAgEmC,MAAM,iBAhEzC,IAAA,CAAA,EAoEajH,GAAA,CAAA,MAAM,MAAM,EApEzBC,GAAA,CAAA,MAAA,EAAAC,GAAA,CAAA,UAAA,gFA+DEqC,EA8CM,MAAA,KAAA,CA7CQ2E,EAAiB,mBAG7BxE,IAAAH,EA4BM,MA/FVI,GAAA,CAoEMH,EA0BQ,QA1BRxC,GA0BQ,aAzBNwC,EAOQ,QAAA,KAAA,CANNA,EAKK,KAAA,KAAA,CAJHA,EAA2B,UAAvB,oBAAkB,EACtBA,EAAe,UAAX,QAAM,EACVA,EAAqB,UAAjB,cAAY,EAChBA,EAAe,UAAX,GAAM,UAGdA,EAgBQ,QAAA,KAAA,EAfNE,EAAA,EAAA,EAAAH,EAcKU,EA5Ff,KAAAC,EA8E6BgE,EAAc,eAAtBC,QAAX5E,EAcK,KAAA,CAd+B,IAAK4E,EAAK,KAC5C3E,EAAwB,KAAA,KAAAY,EAAjB+D,EAAK,IAAI,EAAA,CAAA,EAChB3E,EAA0B,KAAA,KAAAY,EAAnB+D,EAAK,MAAM,EAAA,CAAA,EAClB3E,EAA0C,KAAnC,KAAAY,EAAAgE,EAAA,WAAWD,EAAK,UAAU,CAAA,EAAA,CAAA,EACjC3E,EASK,KAAA,KAAA,CARHA,EAOK,KAAA,KAAA,CAHHA,EAEK,KAAA,KAAA,CADHA,EAAwG,IAAA,CAArG,OAAO,aAAc,KAAI,iDAAmD2E,EAAK,QAAQ,EAAI,EAAA,OAxFlH,EAAAlH,EAAA,8BAgEIsC,EAEM,MAFNxC,GAAiD,sDAEjD,GA8BAyC,EAQI,IAAA,CAPF,MAAM,kBACN,OAAO,eACN,SAAUC,EAAQ,SACnB,KAAK,kCApGXM,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAe,EAqGK,4BAEC,GAAAP,EAAmC8D,EAAA,CAAjB,MAAM,QAAQ,CAAA,CAvGtC,EAAA,EAAAnH,EAAA,EA0GIqD,EAEO+D,EAAA,CAFD,MAAM,MAAM,EAAA,CA1GtB,QAAA7D,EA0GuB,IAEnBV,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CA5GJe,EA0GuB,2FAEnB,KA5GJ,EAAA,sCCKMyD,GAAiBC,GAAO,eAEzBtL,GAAU,CACX,MAAO,CACH,eAAgB,CACZ,KAAM,CAAC,OAAQ,KAAK,EACpB,SAAU,EACb,EACD,KAAM,CACF,KAAM,OACN,SAAU,GACV,QAAS,IACZ,EACD,UAAW,CACP,KAAM,QACN,QAAS,EACZ,EACD,SAAU,CACN,KAAM,QACN,QAAS,EACb,CACH,EACD,MAAO,CACH,QACA,UACH,EACD,MAAO,CACH,MAAO,CACH,YAAa,CACT,KAAM,KACN,cAAe,IAAI,KAAM,EAAC,YAAa,EACvC,KAAM,KAAK,IACd,EACD,OAAQ,CAAE,EACV,eAAgB,CAAE,EAClB,uBAAwB,EAC5B,CACH,EACD,SAAU,CACN,OAAS,CACL,OAAO,KAAK,OAAO,QAAQ,yBAAyB,CACvD,EACD,WAAa,CACT,OAAO,KAAK,MAAM,UAAU,OAAOuL,GAC3B,KAAK,eACE,KAAK,eAAe,SAASA,EAAE,gBAAgB,EAEnDA,EAAE,mBAAqB,KAAK,cACtC,CACJ,EACD,gBAAkB,CACd,OAAO,MAAM,QAAQ,KAAK,cAAc,CAC3C,EACD,eAAiB,CACb,OAAI,KAAK,eACE,OAAO,OAAOF,EAAc,EAC1B,OAAOG,GAAM,KAAK,eAAe,SAASA,EAAG,EAAE,CAAC,EAChD,IAAIA,IAAO,CAAC,MAAOA,EAAG,UAAW,MAAOA,EAAG,EAAE,EAAE,EAErD,CAAE,CACZ,EACD,kBAAoB,CAChB,OAAQ,KAAK,eAAkB,KAAO,KAAK,cAC/C,CACH,EACD,SAAU,CACN,KAAK,OAAO,SAAS,sBAAuB,KAAK,KAAK,CACzD,EACD,QAAS,CACL,MAAM,MAAO,CACT,GAAI,CACA,MAAMC,EAAO,IAAI,SACjB,OAAO,QAAQ,KAAK,WAAW,EAC1B,QAAQ,CAAC,CAAC1L,EAAK2L,CAAG,IAAM,CACjBA,GAAO,MACXD,EAAK,OAAO1L,EAAK2L,CAAG,CACvB,CAAA,EACLD,EAAK,IAAI,OAAQ,KAAK,MAAM,UAAU,MAAM,CAAC,CAAC,EAC9CA,EAAK,IAAI,mBAAoB,KAAK,cAAc,EAChD,MAAM,KAAK,OAAO,SAAS,gCAAiC,CAAC,MAAO,KAAK,MAAO,KAAAA,CAAI,CAAC,EAErF,KAAK,UAAW,EAChB,KAAK,MAAM,OAAO,CACpB,OAAO9L,EAAO,CACRgM,GAAkBhM,CAAK,IACvB,KAAK,OAASA,EAAM,SAAS,KAAK,OAE1C,CAEH,EACD,QAAS,CACL,KAAK,UAAW,EAChB,KAAK,MAAM,UAAU,CACxB,EACD,WAAY,CACR,KAAK,gBAAiB,EACtB,KAAK,YAAa,CACrB,EACD,iBAAkB,CACd,KAAK,MAAM,UAAU,MAAQ,KAC7B,KAAK,YAAc,CACf,KAAM,KACN,cAAeiM,GAAW,IAAI,IAAM,EACpC,cAAe,KACf,KAAM,KAAK,KACX,iBAAkB,KAAK,eACvB,MAAO,IACX,CACH,EACD,aAAe,CACX,KAAK,OAAS,CAAA,CACjB,EACD,aAAcC,EAAM,CAChB,OAAO,SAAWA,EAAK,YAC1B,EACD,WAAYA,EAAM,CACd,KAAK,eAAiBA,EACtB,KAAK,uBAAyB,EACjC,EACD,cAAgB,CACZ,KAAK,uBAAyB,GAC9B,KAAK,oBAAqB,CAC7B,EACD,MAAM,cAAe,CACjB,MAAM,KAAK,OAAO,SAAS,wBAAyB,CAAC,MAAO,KAAK,MAAO,SAAU,KAAK,cAAc,CAAC,EACtG,KAAK,uBAAyB,GAC9B,KAAK,oBAAqB,CAC7B,EACD,qBAAuB,CACnB,KAAK,eAAiB,CAAC,KAAM,CAAE,CAAA,CACnC,CACJ,CACJ,MAzIA,IAAA,EA6IuC,MAAM,aA7I7C,IAAA,CAAA,EAAA/H,GAAA,CAAA,MAAA,EA4JkBC,GAAA,CAAA,MAAM,MAAM,MA5J9B,IAAA,CAAA,MAAA,IAAA,CAAA,MA+Le,IAAI,YAAY,KAAK,YA/LpC,IAAA,CAAA,MAAA,IAAA,EA2M4C,MAAM,mJA/DhDsC,EA4EM,MAAA,KAAA,CA3ES2E,EAAA,UAAU,OAAM,GAA7BxE,IAAAH,EAsCQ,QAtCRxC,GAsCQ,CArCNyC,EASQ,QAAA,KAAA,CARNA,EAOK,KAAA,KAAA,CANHO,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAP,EAAa,UAAT,OAAI,EAAA,GACE0E,EAAc,oBAAxB3E,EAEK,KAnJfI,GAiJoC,QAE1B,GAnJVG,EAAA,GAAA,EAAA,EAoJUC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAP,EAAiB,UAAb,WAAQ,EAAA,eACZA,EAAM,KAAA,KAAA,KAAA,EAAA,OAGVA,EA0BQ,QAAA,KAAA,EAzBNE,EAAA,EAAA,EAAAH,EAwBKU,EAjLb,KAAAC,EAyJ0BgE,EAAS,UAAhBc,QAAXzF,EAwBK,KAAA,CAxByB,IAAKyF,EAAI,GAAI,MAAM,eAC/CxF,EAGK,KAAA,KAAA,CAFHA,EAAkD,IAAA,CAA9C,KAAMwF,EAAI,gBAAiBA,EAAI,QAAQ,EA3JvD,EAAAhI,EAAA,EA4JYwC,EAAiD,OAAjDvC,GAAmB,UAAQ+H,EAAI,OAAO,EAAG,IAAC,CAAA,IAElCd,EAAc,gBAAxBxE,EAAA,EAAAH,EAEK,KAhKfrC,GA+JekD,EAAA4E,EAAI,KAAK,SAAS,EAAA,CAAA,GA/JjClF,EAAA,GAAA,EAAA,EAiKUN,EAAyC,KAAlC,KAAAY,EAAAgE,EAAA,WAAWY,EAAI,UAAU,CAAA,EAAA,CAAA,EAChCxF,EAcK,KAAA,KAAA,CAbHe,EAYgBuC,EAAA,CAZD,gBAAA,EAAa,EAAA,CACf,QACT,IAES/C,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAFTP,EAES,SAFD,CAAA,MAAM,cAAa,MAE3B,EAAA,KAvKhB,QAAAiB,EAyKc,IAEgB,CAFhBF,EAEgBwC,EAAA,CAFA,QAAK/C,GAAEkE,EAAY,aAACc,CAAG,IAzKrD,QAAAvE,EAyKwD,IAE1CV,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CA3Kde,EAyKwD,YAE1C,KA3Kd,EAAA,qBA4KmCsD,EAAA,+DAAiEF,EAAK,KAAA,CAAA,CAAA,OAA3FtD,GAEgBmC,EAAA,CA9K9B,IAAA,EA4K+G,QAAK/C,GAAEkE,EAAU,WAACc,CAAG,IA5KpI,QAAAvE,EA4KuI,IAEzHV,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CA9Kde,EA4KuI,UAEzH,KA9Kd,EAAA,sBAAAhB,EAAA,GAAA,EAAA,IAAA,EAAA,0BAAAA,EAAA,GAAA,EAAA,EAqLgBL,EAAQ,SArLxBK,EAAA,GAAA,EAAA,GAqLIJ,IAAAH,EAeM,MApMVpC,GAAA,CAuLc+G,EAAc,oBADtBtD,GAMEqE,EAAA,CA5LR,IAAA,EAAA,WAwLiBC,EAAA,YAAY,iBAxL7B,sBAwLiBnF,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAAAkF,EAAA,YAAY,iBAAgBlF,GACrC,MAAM,gBACN,KAAK,SACJ,QAASkE,EAAa,iDA3L/BpE,EAAA,GAAA,EAAA,EA8LMS,EAEY0E,EAAA,CAFD,MAAM,WAAY,OAAQC,EAAM,OAAC,OA9LlD,QAAAzE,EA+LQ,IAAmC,CAAnCjB,EAAmC,QAAnCpC,GAAmC,KAAA,GAAA,IA/L3C,EAAA,iBAiMMoC,EAES,SAAA,CAFD,MAAM,WAAY,4BAAO0E,EAAI,MAAAA,EAAA,KAAA,GAAArE,CAAA,IAAE,UAEvC,UAEFe,GAkBWuE,GAAA,CAlBD,GAAG,MAAM,EAAA,CACjB5E,EAgBe6E,EAAA,CAtNrB,WAuMiBF,EAAsB,uBAvMvC,sBAAAnF,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,GAuMiBkF,EAAsB,uBAAAlF,GAC9B,MAAK,2BAA6BkF,EAAc,eAAC,QAAQ,KAxMlE,QAAAzE,EA0MQ,IAWM,CAXKyE,EAAc,gBAAzBxF,IAAAH,EAWM,MArNdlC,GAAA,CA2MmB6H,EAAA,eAAe,cAAxB3F,EAEI,IAFJmB,GAA+C,sEAE/C,GA7MVZ,EAAA,GAAA,EAAA,EA8MUC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAP,EAAyC,SAAtC,qCAAkC,EAAA,GAErCe,EAIE8E,EAAA,CAHA,cAAY,kBACX,WAAUnB,EAAY,aACtB,YAAWA,EAAY,sDAnNpCpE,EAAA,GAAA,EAAA,IAAA,EAAA,kECIK5G,GAAU,CACX,KAAM,wBACN,WAAY,CACR,aAAAoM,GACA,sBAAAC,EACH,EACD,MAAO,CACH,UAAW,CACP,SAAU,GACV,KAAM,CAAC,OAAQ,KAAK,CACvB,EACD,SAAU,CACN,KAAM,QACN,QAAS,EACb,CACH,EACD,MAAO,CACH,MAAO,CACP,CACH,EACD,SAAU,CACN,qBAAuB,CACnB,OAAO,KAAK,OAAO,MAAM,WAAW,IAAI,SAAS,aACpD,EACD,qBAAuB,CACnB,OAAO,KAAK,OAAO,MAAM,WAAW,IAAI,SAAS,oBACrD,CACH,EACD,QAAS,CAET,CACJ,gHAGEhG,EAcM,MAAA,KAAA,CAbgB2E,EAAmB,yBAAvCtD,GAAgE4E,EAAA,CAvCpE,IAAA,EAuC8C,SAAU/F,EAAQ,gCAvChEK,EAAA,GAAA,EAAA,EAyCIS,EAUckF,EAAA,CAVD,MAAM,MAAM,EAAA,CACZ,QACT,IAA6C1F,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAA7CP,EAA6C,UAAzC,uCAAoC,EAAA,KA3ChD,QAAAiB,EA6CM,IAKE,CAJMyD,EAAmB,yBAD3BtD,GAKE8E,EAAA,CAlDR,IAAA,EA+CS,mBAAkBjG,EAAS,UAC3B,aAAY,GACZ,SAAUA,EAAQ,mDAjD3BK,EAAA,GAAA,EAAA,IAAA,EAAA"}