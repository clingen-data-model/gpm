{"version":3,"file":"SpecificationsSection-h3CvGTsA.js","sources":["../../../resources/js/components/expert_panels/GeneCurationStatus.vue","../../../resources/js/components/expert_panels/VcepGeneList.vue","../../../resources/js/components/expert_panels/CspecSummary.vue","../../../resources/js/components/applications/documents/ApplicationUploadForm.vue","../../../resources/js/components/expert_panels/SpecificationsSection.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport api from '@/http/api'\n\nconst props = defineProps({\n\tgenes: { type: Array, required: true, default: () => [] },\n\tgroupID: { type: String, required: true },\n\tediting: { type: Boolean, default: true },\n\treadonly: { type: Boolean, default: false },\n})\n\nconst emit = defineEmits(['removed'])\n\nconst store = useStore()\n\nconst search = ref('')\nconst selectedStatus = ref('')\nconst sortKey = ref('gene_symbol') \nconst sortOrder = ref('asc')\nconst currentPage = ref(1)\nconst pageSize = ref(20)\n\nconst expanded = ref([])          \nconst selectedGenes = ref([])\nconst bulkTier = ref('')\nconst savingTierFor = ref(null)\nconst savingBulk = ref(false)\n\nconst showConfirmRemove = ref(false);\nconst selectedGene = ref(null);\nconst confirmRemove = (gene) => {\n\tselectedGene.value = gene;\n\tshowConfirmRemove.value = true;\n};\nconst cancelRemove = () => {\n\tselectedGene.value = null;\n\tshowConfirmRemove.value = false;\n};\nconst removeGene = async () => {\n\tif (!selectedGene.value) return;\n\ttry {\n\t\tawait api.delete(`/api/groups/${props.groupID}/expert-panel/genes/${selectedGene.value.id}`);\n\t\tshowConfirmRemove.value = false;\n\t\tstore.commit('pushSuccess', `Successfully removed gene ${selectedGene.value.gene_symbol}`);\n\t\tconst removed = selectedGene.value;\n\t\tselectedGene.value = null;\n\t\temit('removed', { id: removed.id, gene_symbol: removed.gene_symbol })\n\t} catch (error) {\n\t\tstore.commit('pushError', error.response?.data);\n\t}\n};\n\nconst statusPriority = {\n\t'Not Curated': 0,\n\t'Uploaded': 1,\n\t'Precuration': 2,\n\t'Disease entity assigned': 3,\n\t'Precuration Complete': 4,\n\t'Curation Provisional': 5,\n\t'Curation Approved': 6,\n\t'Recuration assigned': 7,\n\t'Retired Assignment': 8,\n\t'Published': 9,\n}\n\nconst allStatuses = computed(() => {\n\tconst set = new Set()\n\tprops.genes.forEach(g => g.statuses.forEach(s => set.add(s)))\n\treturn Array.from(set).sort((a, b) => (statusPriority[a] ?? 0) - (statusPriority[b] ?? 0))\n})\n\nconst filteredGenes = computed(() => {\n\tconst kw = search.value.trim().toLowerCase()\n\treturn props.genes.filter(g => {\n\t\tconst symbolMatch = g.gene_symbol?.toLowerCase().includes(kw)\n\t\tconst epMatch = (g.expert_panels || []).some(ep => ep?.toLowerCase().includes(kw))\n\t\tconst diseaseMatch = (g.details || []).some(d =>\n\t\td?.disease_name?.toLowerCase().includes(kw) || d?.mondo_id?.toLowerCase().includes(kw)\n\t\t)\n\t\tconst statusMatch = (g.statuses || []).some(s => s?.toLowerCase().includes(kw))\n\t\tconst matchesSearch = !kw || symbolMatch || epMatch || diseaseMatch || statusMatch\n\t\tconst matchesStatus = !selectedStatus.value || (g.statuses || []).includes(selectedStatus.value)\n\t\treturn matchesSearch && matchesStatus\n\t})\n})\n\nconst sortedGenes = computed(() => {\n    return [...filteredGenes.value].sort((a, b) => {\n        if (sortKey.value === 'statuses') {\n            const pri = (g) => {\n                const arr = Array.isArray(g.statuses) ? g.statuses : []\n                const vals = arr.map(s => statusPriority[s] ?? 0)\n                return vals.length ? Math.min(...vals) : 0\n            }\n            const aP = pri(a), bP = pri(b)\n            return sortOrder.value === 'asc' ? bP - aP : aP - bP\n        }\n\n        if (sortKey.value === 'tier') {\n            const aN = Number(a.tier || 0)\n            const bN = Number(b.tier || 0)\n            return sortOrder.value === 'asc' ? aN - bN : bN - aN\n        }\n\n        let aVal, bVal\n        if (sortKey.value === 'expert_panel') {\n            aVal = ((a.expert_panels || []).join(', ')).toLowerCase()\n            bVal = ((b.expert_panels || []).join(', ')).toLowerCase()\n        } else { \n            aVal = (a.gene_symbol ?? '').toString().toLowerCase()\n            bVal = (b.gene_symbol ?? '').toString().toLowerCase()\n        }\n\n        return sortOrder.value === 'asc' ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal)\n    })\n})\n\nconst totalPages = computed(() => Math.ceil(sortedGenes.value.length / pageSize.value))\nconst paginatedGenes = computed(() => {\n\tconst start = (currentPage.value - 1) * pageSize.value\n\treturn sortedGenes.value.slice(start, start + pageSize.value)\n})\n\nconst toggleExpanded = (index) => {\n\tif (expanded.value.includes(index)) {\n\t\texpanded.value = expanded.value.filter(i => i !== index)\n\t} else {\n\t\texpanded.value.push(index)\n\t}\n}\nconst toggleSelect = (id) => {\n\tif (selectedGenes.value.includes(id)) {\n\t\tselectedGenes.value = selectedGenes.value.filter(x => x !== id)\n\t} else {\n\t\tselectedGenes.value.push(id)\n\t}\n}\nconst toggleSelectAll = () => {\n\tconst idsOnPage = paginatedGenes.value.map(g => g.id)\n\tconst allSelected = idsOnPage.every(id => selectedGenes.value.includes(id))\n\tif (allSelected) {\n\t\tselectedGenes.value = selectedGenes.value.filter(id => !idsOnPage.includes(id))\n\t} else {\n\t\tselectedGenes.value = [...new Set([...selectedGenes.value, ...idsOnPage])]\n\t}\n}\nconst isAllSelected = computed(() => paginatedGenes.value.every(g => selectedGenes.value.includes(g.id)))\n\nconst updateTier = async (gene) => {\n\tif (props.readonly || !props.editing) return\n\tsavingTierFor.value = gene.id\n\tconst oldTier = gene.tier\n\ttry {\n\t\tawait api.put(`/api/groups/${props.groupID}/expert-panel/genes/update-tier`, {\n\t\tids: [gene.id],\n\t\ttier: gene.tier || null,\n\t\t})\n\t\tstore.commit('pushSuccess', `Tier updated for ${gene.gene_symbol}`)\n\t} catch (err) {\n\t\tgene.tier = oldTier\n\t\tstore.commit('pushError', `Failed to update tier for ${gene.gene_symbol}`)\n\t\tconsole.error(err?.response?.data || err)\n\t} finally {\n\t\tsavingTierFor.value = null\n\t}\n}\n\nconst applyBulkTier = async () => {\n\tif (!bulkTier.value || selectedGenes.value.length === 0) return\n\tsavingBulk.value = true\n\ttry {\n\t\tawait api.put(`/api/groups/${props.groupID}/expert-panel/genes/update-tier`, {\n\t\t\tids: selectedGenes.value,\n\t\t\ttier: bulkTier.value,\n\t\t})\n\t\tstore.commit('pushSuccess', `Tier updated for ${selectedGenes.value.length} genes`)\n\t\t// reflect locally\n\t\tprops.genes.forEach(g => { if (selectedGenes.value.includes(g.id)) g.tier = bulkTier.value })\n\t\tselectedGenes.value = []\n\t\tbulkTier.value = ''\n\t} catch (err) {\n\t\tstore.commit('pushError', 'Failed to update tiers in bulk')\n\t} finally {\n\t\tsavingBulk.value = false\n\t}\n}\nconst clearSelection = () => {\n  if (selectedGenes.value.length === 0) return\n  selectedGenes.value = [] \n}\n\n\n</script>\n\n<template>\n  <div class=\"space-y-3\">\n    <!-- Toolbar (search, status filter, sort, page size) -->\n    <div class=\"mb-3 flex items-center justify-between border rounded-lg bg-white px-3 py-2\">\n      <div class=\"flex items-center gap-3\">\n        <input type=\"checkbox\" :checked=\"isAllSelected\" @change=\"toggleSelectAll\" v-if=\"editing\" />\n        <input\n          v-model=\"search\"\n          type=\"text\"\n          placeholder=\"Search genes, statuses, diseases…\"\n          class=\"border rounded px-2 py-1 text-sm w-64\"\n        />\n        <div class=\"flex items-center gap-2\">\n          <label class=\"text-xs text-gray-500\">Status</label>\n          <select v-model=\"selectedStatus\" class=\"border rounded px-2 py-1 text-sm\">\n            <option value=\"\">All</option>\n            <option v-for=\"s in allStatuses\" :key=\"s\" :value=\"s\">{{ s }}</option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"flex items-center gap-3\">\n        <div class=\"flex items-center gap-2\">\n          <label class=\"text-xs text-gray-500\">Sort by</label>\n          <select v-model=\"sortKey\" class=\"border rounded px-2 py-1 text-sm\">\n            <option value=\"gene_symbol\">HGNC Symbol</option>\n            <option value=\"expert_panel\">Expert Panel</option>\n            <option value=\"statuses\">Status Priority</option>\n            <option value=\"tier\">Tier</option>\n          </select>\n          <button\n            class=\"border rounded px-2 py-1 text-xs\"\n            @click=\"sortOrder = sortOrder === 'asc' ? 'desc' : 'asc'\"\n            :aria-label=\"`Toggle sort order (currently ${sortOrder})`\"\n            title=\"Toggle sort order\"\n          >\n            {{ sortOrder === 'asc' ? 'ASC ▲' : 'DESC ▼' }}\n          </button>\n        </div>\n\n        <div class=\"flex items-center gap-2\">\n          <label class=\"text-xs text-gray-500\">Page size</label>\n          <select v-model=\"pageSize\" class=\"border rounded px-2 py-1 text-sm\">\n            <option v-for=\"size in [20, 50, 100]\" :key=\"size\" :value=\"size\">{{ size }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <!-- Bulk Tier Update Bar -->\n    <div v-if=\"selectedGenes.length > 0 && editing && !readonly\" class=\"flex items-center gap-2 bg-gray-50 p-3 border rounded\">\n      {{ selectedGenes.length }} gene(s) selected.\n      <span class=\"font-semibold\">Bulk Tier Update:</span>\n      <select v-model=\"bulkTier\" class=\"border rounded px-2 py-1 text-sm\">\n        <option value=\"\">Select Tier</option>\n        <option value=\"1\">Tier 1</option>\n        <option value=\"2\">Tier 2</option>\n        <option value=\"3\">Tier 3</option>\n        <option value=\"4\">Tier 4</option>\n      </select>\n      <button\n        class=\"bg-blue-600 text-white px-3 py-1 rounded disabled:opacity-50\"\n        @click=\"applyBulkTier\"\n        :disabled=\"!bulkTier || selectedGenes.length === 0 || savingBulk\"\n      >\n        {{ savingBulk ? 'Applying…' : 'Apply' }}\n      </button>\n      <button type=\"button\" class=\"border rounded px-3 py-1 text-sm bg-white hover:bg-gray-50\" @click=\"clearSelection\" title=\"Clear selection\">\n        Clear\n      </button>\n    </div>\n\n    <!-- Empty -->\n    <div v-if=\"paginatedGenes.length === 0\" class=\"p-6 text-center text-sm text-gray-500 border rounded-lg bg-white\">\n      No genes found.\n    </div>\n\n    <!-- Card list -->\n    <ul v-else class=\"space-y-2\">\n      <li v-for=\"(gene, index) in paginatedGenes\" :key=\"gene.id\">\n        <div class=\"rounded-2xl overflow-hidden border border-gray-200 bg-white shadow-sm hover:shadow transition-shadow\">\n          <!-- Top row -->\n          <div class=\"flex items-start justify-between gap-3 p-3\">\n            <div class=\"flex items-start gap-3\">\n              <div v-if=\"editing && !readonly\" class=\"mt-1\">\n                <input\n                  type=\"checkbox\"\n                  :checked=\"selectedGenes.includes(gene.id)\"\n                  @change=\"toggleSelect(gene.id)\"\n                  :aria-label=\"`Select ${gene.gene_symbol}`\"\n                />\n              </div>\n              <div>\n                <div class=\"flex flex-wrap items-center gap-2\">\n                  <span class=\"text-base font-semibold text-gray-900\">{{ gene.gene_symbol }}</span>\n                  <span v-if=\"(gene.statuses || []).length\" class=\"text-xs rounded-full px-2 py-0.5 text-gray-700\" :class=\"(gene.details || []).length ? 'border border-amber-400 bg-amber-50' : 'border border-gray-400 bg-gray-50'\">\n                    {{ (gene.statuses || []).join(', ') }}\n                  </span>\n                </div>\n                <div class=\"mt-0.5 text-sm text-gray-700 truncate\">\n                  <template v-if=\"(gene.expert_panels || []).length\">\n                    {{ gene.expert_panels.join(', ') }}\n                  </template>\n                  <template v-else>—</template>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"flex items-center gap-2\">\n              <button\n                v-if=\"(gene.details || []).length\"\n                @click=\"toggleExpanded(index)\"\n                class=\"rounded border px-2 py-1 text-xs bg-white\"\n                :aria-expanded=\"expanded.includes(index)\"\n                :aria-controls=\"`gene-details-${gene.id}`\"\n                title=\"Toggle details\"\n              >\n                {{ expanded.includes(index) ? 'Hide Details' : 'Show Details' }}\n              </button>\n\n              <template v-if=\"editing && !readonly\">\n                <select\n                  v-model=\"gene.tier\"\n                  class=\"border rounded px-2 py-1 text-xs\"\n                  @change=\"updateTier(gene)\"\n                  :disabled=\"savingTierFor === gene.id || readonly\"\n                  title=\"Tier\"\n                >\n                  <option value=\"\">—</option>\n                  <option value=\"1\">Tier 1</option>\n                  <option value=\"2\">Tier 2</option>\n                  <option value=\"3\">Tier 3</option>\n                  <option value=\"4\">Tier 4</option>\n                </select>\n                <span v-if=\"savingTierFor === gene.id\" class=\"text-xs text-gray-500\">Saving…</span>\n\t\t\t\t<button class=\"rounded border px-2 py-1 text-xs bg-white hover:bg-red-50\"\n\t\t\t\t\t:disabled=\"removingId === gene.id\"\n\t\t\t\t\t@click=\"confirmRemove(gene)\"\n\t\t\t\t\ttitle=\"Remove gene\"\n\t\t\t\t\t>\n\t\t\t\t\t{{ removingId === gene.id ? 'Removing…' : ' X ' }}\n\t\t\t\t</button>\n              </template>\n              <span v-else class=\"text-xs text-gray-700\">Tier: {{ gene.tier || '—' }}</span>\n\n              \n            </div>\n          </div>\n\n          <!-- Expanded details -->\n          <transition name=\"fade\">\n            <div\n              v-if=\"expanded.includes(index)\"\n              :id=\"`gene-details-${gene.id}`\"\n              class=\"px-3 pb-3 pt-2 text-sm\"\n            >\n              <div class=\"space-y-2\">\n                <div\n                  v-for=\"entry in gene.details\"\n                  :key=\"entry.disease_name + entry.curation_status + (entry.mondo_id || '')\"\n                  class=\"rounded-lg border border-gray-200 bg-gray-50 p-2\"\n                >\n                  <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2\">\n                    <div><span class=\"text-[11px] uppercase text-gray-500\">Status</span><div class=\"text-gray-900\">{{ entry.curation_status || '—' }}</div></div>\n                    <div><span class=\"text-[11px] uppercase text-gray-500\">Status Date</span><div class=\"text-gray-900\">\n                      {{ entry?.date_approved ? new Date(entry.date_approved).toLocaleString('en-US', { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true }) : '—' }}\n                    </div></div>\n                    <div class=\"sm:col-span-2 lg:col-span-1\"><span class=\"text-[11px] uppercase text-gray-500\">Expert Panel</span><div class=\"text-gray-900\">{{ entry.expert_panel || '—' }}</div></div>\n                    <div><span class=\"text-[11px] uppercase text-gray-500\">Disease</span><div class=\"text-gray-900\">{{ entry.mondo_id ? `${entry.mondo_id} ${entry.disease_name || ''}` : (entry.disease_name || '—') }}</div></div>\n                    <div><span class=\"text-[11px] uppercase text-gray-500\">Classification</span><div class=\"text-gray-900\">{{ entry.classification || '—' }}</div></div>\n                    <div><span class=\"text-[11px] uppercase text-gray-500\">MOI</span><div class=\"text-gray-900\">{{ entry.moi || '—' }}</div></div>\n\t\t\t\t\t          <div><span class=\"text-[11px] uppercase text-gray-500\">Type</span><div class=\"text-gray-900\">{{ entry.curation_type || '—' }}</div></div>\n                    <div><span class=\"text-[11px] uppercase text-gray-500\">Rationales</span><div class=\"text-gray-900\">{{ entry.rationales || '—' }}</div></div>\n                    <div><span class=\"text-[11px] uppercase text-gray-500\">Phenotype</span><div class=\"text-gray-900\">{{ entry.phenotypes || '—' }}</div></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </transition>\n        </div>\n      </li>\n    </ul>\n\n    <!-- Pagination -->\n    <div class=\"mt-4 flex justify-between items-center\">\n\t\t<button class=\"border rounded px-3 py-1 text-sm\" :disabled=\"currentPage === 1\" @click=\"currentPage--\">Prev</button>\n\t\t<span class=\"text-sm\">Page {{ currentPage }} of {{ totalPages }}</span>\n\t\t<button class=\"border rounded px-3 py-1 text-sm\" :disabled=\"currentPage === totalPages\" @click=\"currentPage++\">Next</button>\n    </div>\n\t<div v-if=\"showConfirmRemove\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\n        <div class=\"bg-white rounded-lg shadow-lg w-96 p-6\">\n            <h3 class=\"text-lg font-semibold mb-4\">Confirm Removal</h3>\n            <p class=\"mb-6\">Are you sure you want to remove <strong>{{ selectedGene?.gene_symbol }}</strong>?</p>\n            <div class=\"flex justify-end gap-2\">\n                <button class=\"btn btn-gray\" @click=\"cancelRemove\">Cancel</button>\n                <button class=\"btn btn-red\" @click=\"removeGene\">Remove</button>\n            </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<style scoped> \n.fade-enter-active, .fade-leave-active { transition: all 0.2s ease; }\n.fade-enter-from, .fade-leave-to { opacity: 0; transform: translateY(-6px); }\n</style>\n","<template>\n<div>\n    <!-- Header controls -->\n    <div class=\"flex justify-between items-center mb-4\">\n        <div v-if=\"editing\" class=\"flex items-center gap-2\">\n            <button class=\"btn blue\" @click=\"startAdd\" :disabled=\"isFormVisible\">\n                + Add Gene\n            </button>\n        </div>\n\n        <div class=\"flex items-center gap-4\">\n            <!-- Search -->\n            <input\n                v-model=\"search\"\n                type=\"text\"\n                placeholder=\"Search genes, diseases, MOI, notes...\"\n                class=\"border rounded px-2 py-1 text-sm\"\n            />\n\n            <!-- MOI Filter -->\n            <select v-model=\"filterMoi\" class=\"border p-1 rounded text-sm\">\n                <option value=\"\">All MOIs</option>\n                <option v-for=\"moi in moiOptions\" :key=\"moi\" :value=\"moi\">{{ moi }}</option>\n            </select>\n\n            <!-- Classification Filter -->\n            <select v-model=\"filterClassification\" class=\"border p-1 rounded text-sm\">\n                <option value=\"\">All Classifications</option>\n                <option v-for=\"c in classificationOptions\" :key=\"c\" :value=\"c\">{{ c }}</option>\n            </select>\n        </div>\n    </div>\n\n    <!-- Add/Edit Form -->\n    <transition name=\"fade\" @after-enter=\"onFormEntered\">\n        <div v-if=\"isFormVisible\" ref=\"formEl\" class=\"border rounded bg-gray-50 p-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-3\">\n                {{ isEditing ? 'Edit Gene' : 'Add Gene' }}\n            </h3>\n\n            <div v-if=\"!formGene?.is_other\" class=\"space-y-2\">\n                <label class=\"block font-semibold\">Select Gene-Disease-MOI:</label>\n                <CuratedGeneSearchSelect\n                    v-model=\"formGene\"\n                    @update:model-value=\"handleCuratedSelection\"\n                    placeholder=\"Search curated Gene-Disease-MOI\"\n                    class=\"w-full\"\n                    :key=\"curatedGeneKey\"\n                />\n                <button\n                    type=\"button\"\n                    class=\"text-blue-600 underline text-sm hover:text-blue-800\"\n                    @click=\"selectOther\"\n                >\n                    Click here for <strong>Other (Not Curated)</strong>\n                </button>\n\n                <!-- Curated plan required for Moderate/Limited -->\n                <div\n                    v-if=\"formGene?.requires_plan\"\n                    class=\"mt-3 border rounded bg-amber-50 p-3\"\n                    >\n                    <div class=\"flex items-start gap-2 mb-2\">\n                        <span class=\"text-orange-500 font-bold\">⚠</span>\n                        <div class=\"text-sm text-gray-800\">\n                        This gene is currently classified as <strong>{{ (formGene.classification ?? formGene.plan?.classification) }}</strong>.  \n                        Please explain the rationale for proposing its inclusion.\n                        </div>\n                    </div>\n\n                    <label class=\"block text-sm font-medium mb-1\">Plan for Curation *</label>\n                    <RichTextEditor\n                        v-model=\"formGene.curated_plan_text\"\n                        placeholder=\"Describe your plan (min 20 characters)\"\n                        class=\"w-full\"\n                    />\n                    <p v-if=\"!isCuratedPlanValid\" class=\"text-xs text-red-500 mt-1\">\n                        Plan must be at least 20 characters.\n                    </p>\n                </div>\n            </div>\n\n            <!-- Manual entry if Other -->\n            <div v-if=\"formGene && formGene.is_other\" class=\"border rounded bg-white p-3 mt-3\">\n                <h5 class=\"text-lg font-semibold mb-2\">Provide details for non-curated gene</h5>\n                <div class=\"grid grid-cols-2 gap-2\">\n                    <!-- Gene -->\n                    <div>\n                        <label class=\"block text-sm font-medium mb-1\">Gene *</label>\n                        <GeneSearchSelect v-model=\"formGene.custom_gene\" placeholder=\"Search gene...\" />\n                        <p v-if=\"errors['custom_gene']\" class=\"text-red-500 text-xs mt-1\">{{ errors['custom_gene'][0] }}</p>\n                    </div>\n\n                    <!-- MOI -->\n                    <div>\n                        <label class=\"block text-sm font-medium mb-1\">MOI</label>\n                        <select v-model=\"formGene.custom_moi\" class=\"form-select w-full\">\n                            <option value=\"\">----Select MOI-----</option>\n                            <option v-for=\"moi in mois\" :key=\"moi.id\" :value=\"moi\">{{ moi.name }} ({{ moi.abbreviation }})</option>\n                        </select>\n                        <p v-if=\"errors['custom_moi']\" class=\"text-red-500 text-xs mt-1\">{{ errors['custom_moi'][0] }}</p>\n                    </div>\n\n                    <!-- Disease -->\n                    <div class=\"col-span-2\">\n                        <label class=\"block text-sm font-medium mb-1\">Disease</label>\n                        <DiseaseSearchSelect v-model=\"formGene.custom_disease\" placeholder=\"Search disease...\" />\n                    </div>\n\n                    <!-- Plan -->\n                    <div class=\"col-span-2 mb-6\">\n                        <label class=\"block text-sm font-medium mb-1\">Plan for Curation *</label>\n                        <RichTextEditor\n                            v-model=\"formGene.custom_plan\"\n                            placeholder=\"Describe your plan (min 20 characters)\"\n                            class=\"w-full\"\n                        />\n                        <p v-if=\"errors['custom_plan']\" class=\"text-red-500 text-xs mt-1\">{{ errors['custom_plan'][0] }}</p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Buttons -->\n            <div class=\"mt-4 flex justify-end gap-2\">\n                <button class=\"btn btn-gray\" @click=\"cancelForm\">Cancel</button>                \n                <button\n                    class=\"btn blue\"\n                    :disabled=\"isEditing ? false : (\n                        (formGene?.is_other && !isOtherFormValid) ||\n                        (!formGene?.is_other && !isCuratedPlanValid)\n                    )\"\n                    @click=\"saveForm\"\n                    >\n                    Save\n                </button>\n            </div>\n        </div>\n    </transition>\n\n    <!-- Bulk Tier Update Bar -->\n    <div v-if=\"selectedGenes.length > 0 && !readonly\" class=\"flex items-center gap-2 bg-gray-50 p-3 border rounded mb-3\">\n        {{ selectedGenes.length }} gene(s) selected.\n        <span class=\"font-semibold\">Bulk Tier Update:</span>\n        <select v-model=\"bulkTier\" class=\"border rounded px-2 py-1 text-sm\">\n            <option value=\"\">Select Tier</option>\n            <option value=\"1\">Tier 1</option>\n            <option value=\"2\">Tier 2</option>\n            <option value=\"3\">Tier 3</option>\n            <option value=\"4\">Tier 4</option>\n        </select>\n        <button\n            class=\"bg-blue-600 text-white px-3 py-1 rounded disabled:opacity-50\"\n            @click=\"applyBulkTier\"\n            :disabled=\"!bulkTier || selectedGenes.length === 0\"\n        >\n            Apply\n        </button>\n        <button type=\"button\" class=\"border rounded px-3 py-1 text-sm bg-white hover:bg-gray-50\" @click=\"clearSelection\" title=\"Clear selection\">\n            Clear\n        </button>\n    </div>\n\n    <!-- List toolbar -->\n    <div class=\"mb-3 flex items-center justify-between border rounded-lg bg-white px-3 py-2\">\n        <div class=\"flex items-center gap-3\">\n            <input\n            v-if=\"canEdit && editing\"\n            type=\"checkbox\"\n            :checked=\"isAllSelected\"\n            @change=\"toggleSelectAll\"\n            aria-label=\"Select all on page\"\n            />\n            <span class=\"text-sm text-gray-600\">\n            {{ paginatedGenes.length }} shown / {{ filteredAndSortedGenes.length }} total\n            </span>\n        </div>\n\n        <div class=\"flex items-center gap-2\">\n            <label class=\"text-xs text-gray-500\">Sort by</label>\n            <select v-model=\"sortKey\" class=\"border rounded px-2 py-1 text-sm\">\n                <option value=\"gene_symbol\">HGNC Symbol</option>\n                <option value=\"disease\">Disease</option>\n                <option value=\"moi\">MOI</option>\n                <option value=\"tier\">Tier</option>\n            </select>\n            <button\n                class=\"border rounded px-2 py-1 text-xs\"\n                @click=\"sortOrder = sortOrder === 'asc' ? 'desc' : 'asc'\"\n                :aria-label=\"`Toggle sort order (currently ${sortOrder})`\"\n                title=\"Toggle sort order\"\n                >\n                {{ sortOrder === 'asc' ? 'ASC ▲' : 'DESC ▼' }}\n            </button>\n            <div class=\"ml-2 flex items-center gap-2\">\n                <label class=\"text-xs text-gray-500\">Page size</label>\n                <select v-model=\"pageSize\" class=\"border rounded px-2 py-1 text-sm\">\n                    <option v-for=\"size in [2, 20, 50, 100]\" :key=\"size\" :value=\"size\">{{ size }}</option>\n                </select>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- Card list (replaces the whole <table>...</table>) -->\n    <div v-if=\"paginatedGenes.length === 0\" class=\"p-6 text-center text-sm text-gray-500 border rounded-lg bg-white\">\n        No genes found.\n    </div>\n\n    <ul v-else class=\"space-y-2\">\n        <li v-for=\"(gene, index) in paginatedGenes\" :key=\"gene.id\">\n            <div class=\"rounded-2xl overflow-hidden border border-gray-200 bg-white shadow-sm hover:shadow transition-shadow\">\n                \n                <div class=\"flex items-start justify-between gap-3 p-3\">\n                    <div class=\"flex items-start gap-3\">\n                        <div v-if=\"canEdit && editing\" class=\"mt-1\">\n                            <input type=\"checkbox\" :checked=\"selectedGenes.includes(gene.id)\" @change=\"toggleSelect(gene.id)\" :aria-label=\"`Select ${gene.gene_symbol}`\" />\n                        </div>\n                        <div>\n                            <div class=\"flex flex-wrap items-center gap-2\">\n                                <span class=\"text-base font-semibold text-gray-900\">{{ gene.gene_symbol }}</span>\n                                <span v-if=\"gene.mondo_id\" class=\"text-xs rounded-full bg-gray-100 px-2 py-0.5 text-gray-700\">{{ gene.mondo_id }}</span>\n                                <span v-if=\"gene.moi\" class=\"text-xs rounded-full bg-gray-100 px-2 py-0.5 text-gray-700\">{{ gene.moi }}</span>\n                                <span v-if=\"gene.plan?.is_other\" class=\"'inline-flex h-2 w-2 rounded-full animate-pulse bg-rose-500\" aria-hidden=\"true\">\n\n                                </span>\n                                <span\n                                    v-if=\"gene.is_outdated && gene.gt_data\"\n                                    class=\"text-[11px] rounded-full bg-amber-100 text-amber-900 px-2 py-0.5 border border-amber-300\"\n                                >Snapshot out of date</span>\n                            </div>\n                            <div class=\"mt-0.5 text-sm text-gray-700 truncate\">{{ gene.disease_name }}</div>\n                        </div>\n                    </div>\n\n                    <div class=\"flex items-center gap-2\">\n                        <template v-if=\"editing\">\n                            <select v-model=\"gene.tier\" class=\"border rounded px-2 py-1 text-xs\" @change=\"updateTier(gene)\" :disabled=\"savingTierFor === gene.id || readonly\" title=\"Tier\">\n                                <option value=\"null\">—</option>\n                                <option value=\"1\">Tier 1</option>\n                                <option value=\"2\">Tier 2</option>\n                                <option value=\"3\">Tier 3</option>\n                                <option value=\"4\">Tier 4</option>\n                            </select>\n\n                            <button v-if=\"gene.is_outdated && gene.gt_data\" @click=\"applyGtUpdate(gene)\" title=\"Refresh from latest GT\"\n                            class=\"hidden sm:inline-flex rounded border border-amber-400 bg-amber-50 px-2 py-1 text-xs font-semibold text-amber-900 hover:bg-amber-100\">\n                                Refresh GT ⚠\n                            </button>\n\n                            <dropdown-menu v-if=\"!gene.toDelete\" :hide-cheveron=\"true\" class=\"relative\">\n                                <template #label>\n                                    <button class=\"rounded border px-2 py-1 text-xs bg-white\">⋯</button>\n                                </template>\n                                <dropdown-item @click=\"startEdit(gene)\">Edit</dropdown-item>\n                                <dropdown-item @click=\"confirmRemove(gene)\">Remove</dropdown-item>\n                            </dropdown-menu>\n                        </template>\n                        <span v-else class=\"text-xs text-gray-700\">Tier: {{ gene.tier || '—' }}</span>\n                    </div>\n                </div>\n\n                <!-- Snapshot quick facts (COMPACT) -->\n                <div class=\"px-3 pb-3 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2 text-sm\">\n                    <div v-if=\"gene.plan?.is_other\" class=\"sm:col-span-2 lg:col-span-4 rounded-xl border p-2 text-sm border-rose-300 bg-rose-50 p-2\">\n                        <div class=\"text-[11px] uppercase tracking-wide text-gray-500\">Plan</div>\n                        <div class=\"prose max-w-none\" v-html=\"htmlFromMarkdown((gene.plan?.the_plan || '').replace(/\\\\/g, ''))\"></div>\n                    </div>\n                    <template v-else>\n                        <div class=\"rounded-xl border border-gray-200 bg-gray-50 p-2\">\n                            <div class=\"text-[11px] uppercase tracking-wide text-gray-500\">Expert Panel</div>\n                            <div class=\"text-sm text-gray-900\">{{ gene.plan?.expert_panel ?? 'N/A' }}</div>\n                        </div>\n\n                        <div :class=\"['rounded-xl border p-2',\n                            ['Moderate','Limited'].includes(gene.plan?.classification)\n                            ? (gene.plan?.classification === 'Limited'\n                                ? 'border-amber-200 bg-amber-100 ring-1 ring-amber-500'\n                                : 'border-amber-100 bg-amber-50 ring-1 ring-amber-300')\n                            : 'border-gray-200 bg-gray-50'\n                        ]\">\n                            <div class=\"text-[11px] uppercase tracking-wide text-gray-500\">Classification</div>\n                            <div class=\"mt-0.5 text-gray-900 flex items-center gap-2 text-sm\">\n                                {{ gene.plan?.classification ?? 'N/A' }}\n                                <span v-if=\"['Moderate','Limited'].includes(gene.plan?.classification)\" \n                                    :class=\"['inline-flex h-2 w-2 rounded-full animate-pulse', gene.plan?.classification === 'Limited' ? \n                                        'bg-amber-500' : 'bg-amber-300']\" aria-hidden=\"true\"></span>\n                            </div>\n                        </div>\n\n                        <div class=\"rounded-xl border border-gray-200 bg-gray-50 p-2\">\n                            <div class=\"text-[11px] uppercase tracking-wide text-gray-500\">Status</div>\n                            <div class=\"text-sm text-gray-900\">{{ gene.plan?.curation_status ?? 'N/A' }}</div>\n                        </div>\n\n                        <div class=\"rounded-xl border border-gray-200 bg-gray-50 p-2\">\n                            <div class=\"text-[11px] uppercase tracking-wide text-gray-500\">Date Approved</div>\n                            <div class=\"text-sm text-gray-900\">\n                                {{ gene.plan?.date_approved ? new Date(gene.plan?.date_approved).toLocaleDateString() : 'N/A' }}\n                            </div>\n                        </div>\n\n                        <div class=\"sm:col-span-2 lg:col-span-4 rounded-xl border border-gray-200 bg-gray-50 p-2\">\n                            <div class=\"text-[11px] uppercase tracking-wide text-gray-500\">Phenotypes</div>\n                            <div class=\"text-sm text-gray-900 line-clamp-2\">{{ gene.plan?.phenotypes ?? 'N/A' }}</div>\n                        </div>\n                        \n                        <div v-if=\"['Moderate','Limited'].includes(gene.plan?.classification)\" class=\"sm:col-span-2 lg:col-span-4 rounded-xl border border-amber-200 bg-amber-50 p-2\">\n                            <div class=\"text-[11px] uppercase tracking-wide text-amber-800\">Plan</div>\n                            <div class=\"prose max-w-none text-sm text-amber-900\" v-html=\"htmlFromMarkdown((gene.plan?.curated_plan_text || '').replace(/\\\\/g, ''))\"></div>\n                        </div>\n                    </template>\n                </div>\n\n                <div v-if=\"gene.is_outdated && gene.gt_data\" class=\"flex items-center justify-between gap-2 border-t border-amber-200 bg-amber-50 px-3 py-2 text-xs text-amber-900\">\n                    <div class=\"flex items-center gap-2\">\n                        <span class=\"inline-flex h-4 w-4\">⚠</span>\n                        <span class=\"truncate\">Snapshot differs from latest GeneTracker data.</span>\n                    </div>\n                    <button @click=\"toggleExpanded(index)\" class=\"rounded border border-amber-400 px-2 py-1 text-xs font-medium hover:bg-amber-100\">\n                        {{ expanded.includes(index) ? 'Hide GT diff' : 'Show GT diff' }}\n                    </button>\n                </div>\n                \n                <transition name=\"fade\">\n                    <div v-if=\"gene.is_outdated && gene.gt_data && expanded.includes(index)\" class=\"px-3 pb-3 pt-2 text-xs\">\n                        <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-2\">\n                            <div v-for=\"row in compactDiffRows(gene)\" :key=\"row.key\" class=\"rounded-lg border border-gray-200\">\n                            <div class=\"flex items-center justify-between border-b bg-gray-50 px-2 py-1 text-[11px] text-gray-600\">\n                                <span class=\"uppercase tracking-wide\">{{ row.label }}</span>\n                            </div>\n                            <div class=\"grid grid-cols-2\">\n                                <div class=\"min-w-0 p-2\">\n                                <div class=\"truncate\" :title=\"row.a\">{{ row.a || '—' }}</div>\n                                </div>\n                                <div class=\"min-w-0 p-2\" :class=\"isDiff(row.a, row.b) ? 'bg-sky-50 ring-1 ring-sky-300' : ''\">\n                                <div class=\"truncate\" :title=\"row.b\">{{ row.b || '—' }}</div>\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n\n                        <!-- Small-screen actions -->\n                        <div class=\"mt-2 flex flex-wrap items-center gap-2 sm:hidden\">\n                            <button v-if=\"gene.is_outdated && gene.gt_data\" type=\"button\" class=\"rounded bg-amber-600 px-3 py-1.5 text-xs font-semibold text-white hover:bg-amber-700\" @click=\"applyGtUpdate(gene)\">\n                                Refresh from GT\n                            </button>\n                            <button type=\"button\" class=\"rounded border border-gray-300 bg-white px-3 py-1.5 text-xs font-medium text-gray-800 hover:bg-gray-50\" @click=\"toggleExpanded(index)\" >\n                                Keep Snapshot\n                            </button>\n                        </div>\n                    </div>\n                </transition>\n            </div>\n        </li>\n    </ul>\n\n    <!-- Pagination -->\n    <div class=\"mt-4 flex justify-between items-center\">\n        <button class=\"btn btn-gray\" :disabled=\"currentPage === 1\" @click=\"currentPage--\">Prev</button>\n        <span>Page {{ currentPage }} of {{ totalPages }}</span>\n        <button class=\"btn btn-gray\" :disabled=\"currentPage === totalPages\" @click=\"currentPage++\">Next</button>\n    </div>\n\n    <!-- Remove Confirmation Modal -->\n    <div v-if=\"showConfirmRemove\" class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\n        <div class=\"bg-white rounded-lg shadow-lg w-96 p-6\">\n            <h3 class=\"text-lg font-semibold mb-4\">Confirm Removal</h3>\n            <p class=\"mb-6\">Are you sure you want to remove <strong>{{ selectedGene?.gene_symbol }}</strong>?</p>\n            <div class=\"flex justify-end gap-2\">\n                <button class=\"btn btn-gray\" @click=\"cancelRemove\">Cancel</button>\n                <button class=\"btn btn-red\" @click=\"removeGene\">Remove</button>\n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport { api } from '@/http';\nimport { ref, nextTick, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport GeneSearchSelect from '@/components/forms/GeneSearchSelect.vue';\nimport DiseaseSearchSelect from '@/components/forms/DiseaseSearchSelect.vue';\nimport CuratedGeneSearchSelect from '@/components/forms/CuratedGeneSearchSelect.vue';\nimport { htmlFromMarkdown, markdownFromHTML } from '@/markdown-utils'\nimport { hasAnyPermission } from '@/auth_utils';\nimport RichTextEditor from '@/components/prosekit/RichTextEditor.vue';\n\nexport default {\n    name: 'VcepGeneList',\n    components: { GeneSearchSelect, DiseaseSearchSelect, CuratedGeneSearchSelect, RichTextEditor },\n    props: { readonly: { type: Boolean, required: false, default: false }, editing: { type: Boolean, required: false, default: true } },\n    emits: ['saved'],\n    setup(props, { emit }) {\n        const store = useStore();\n        const genes = ref([]);\n        const formGene = ref(null);\n        const isEditing = ref(false);\n        const isFormVisible = ref(false);\n        const curatedGeneKey = ref(0);\n        const errors = ref({});\n        const mois = ref([]);\n\n        const formEl = ref(null)\n        const shouldScrollToForm = ref(false)\n\n        const selectedGenes = ref([]);\n        const bulkTier = ref('');\n        const savingTierFor = ref(null);\n        \n        const search = ref('');\n        const filterMoi = ref('');\n        const filterClassification = ref('');\n        const sortKey = ref('gene_symbol');\n        const sortOrder = ref('asc');\n\n        const currentPage = ref(1);\n        const pageSize = ref(20);\n\n        const group = computed(() => store.getters['groups/currentItemOrNew']);\n\n        const canEdit = computed(() => hasAnyPermission(['ep-applications-manage', ['application-edit', group.value]]) && !props.readonly);\n\n        const showConfirmRemove = ref(false);\n        const selectedGene = ref(null);\n        const confirmRemove = (gene) => {\n            selectedGene.value = gene;\n            showConfirmRemove.value = true;\n        };\n        const cancelRemove = () => {\n            selectedGene.value = null;\n            showConfirmRemove.value = false;\n        };\n        const removeGene = async () => {\n            if (!selectedGene.value) return;\n            try {\n                await api.delete(`/api/groups/${group.value.uuid}/expert-panel/genes/${selectedGene.value.id}`);\n                showConfirmRemove.value = false;\n                store.commit('pushSuccess', `Successfully removed gene ${selectedGene.value.gene_symbol}`);\n                selectedGene.value = null;\n                await getGenes();                \n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        };\n\n\n        const getMois = async () => {\n            try {\n                const response = await api.get('/api/mois');\n                mois.value = response.data;\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        };\n\n        const getGenes = async () => {\n            if (!group.value.uuid) return;\n            try {\n                await store.dispatch('groups/getGenes', group.value);\n                genes.value = group.value.expert_panel.genes;\n            } catch (error) {\n                store.commit('pushError', error.response?.data || error);\n            }\n        };\n\n        const setSort = key => {\n            if (sortKey.value === key) {\n                sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc';\n            } else {\n                sortKey.value = key;\n                sortOrder.value = 'asc';\n            }\n        };\n\n        const startAdd = () => {\n            isFormVisible.value = true;\n            isEditing.value = false;\n            formGene.value = null;\n            curatedGeneKey.value++;\n        };\n\n        const unescapeMarkdown = (s = '') => s.replace(/\\\\([\\\\`*_{}\\[\\]()#+\\-.!>~|])/g, '$1');\n\n        const startEdit = (gene) => {\n            const wasOpen = isFormVisible.value\n            isFormVisible.value = true;\n            isEditing.value = gene.id;\n\n            if (gene.plan?.is_other) {\n                // Build form for Other gene\n                formGene.value = {\n                    id: gene.id,\n                    is_other: true,\n                    custom_gene: { hgnc_id: gene.hgnc_id, gene_symbol: gene.gene_symbol },\n                    custom_disease: { mondo_id: gene.mondo_id, name: gene.disease_name },\n                    custom_moi: mois.value.find(m => m.abbreviation === gene.moi) || null,\n                    custom_plan: (unescapeMarkdown(gene.plan?.the_plan || ''))\n                };\n            } else {\n                const plan = {\n                    ...gene.plan,\n                    is_other: false,\n                    curated_plan_text: gene.plan?.curated_plan_text ?? ''\n                };\n\n                formGene.value = {\n                    id: gene.id,\n                    hgnc_id: gene.hgnc_id,\n                    gene_symbol: gene.gene_symbol,\n                    disease_name: gene.disease_name,\n                    mondo_id: gene.mondo_id,\n                    moi: gene.moi,\n                    date_approved: gene.date_approved,\n                    requires_plan: ['Moderate', 'Limited'].includes(gene.plan?.classification),\n                    plan,\n                    curated_plan_text: (unescapeMarkdown(plan?.curated_plan_text || '')),\n                    is_other: false\n                };\n            }\n            console.log('Editing gene:', formGene.value);\n            curatedGeneKey.value++;\n            if (wasOpen) {\n                scrollToFormSoon()\n            } else {\n                shouldScrollToForm.value = true\n            }\n        };\n\n\n        const cancelForm = () => {\n            isFormVisible.value = false;\n            isEditing.value = false;\n            formGene.value = null;\n            errors.value = {};\n        };\n\n        const isOtherFormValid = computed(() => {\n            if (!formGene.value?.is_other) return false;\n            return (\n                !!formGene.value.custom_gene?.hgnc_id &&\n                // !!formGene.value.custom_disease?.mondo_id &&\n                (formGene.value.custom_plan?.trim().length >= 20)\n            );\n        });\n\n        const selectOther = () => {\n            const originalId = formGene.value?.id || null;\n            formGene.value = {\n                id: originalId,\n                is_other: true,\n                custom_gene: null,\n                custom_disease: null,\n                custom_moi: null,\n                custom_plan: ''\n            };\n        };\n\n        const handleCuratedSelection = selected => {\n            if (selected && !selected.is_other) {\n                formGene.value = {\n                    ...selected,\n                    is_other: false,\n                    requires_plan: ['Moderate', 'Limited'].includes(selected.classification),\n                    curated_plan_text: htmlFromMarkdown('')\n                };\n\n            }\n        };\n\n        const isCuratedPlanValid = computed(() => {\n            if (!formGene.value?.requires_plan) return true;\n            const plain = (formGene.value.curated_plan_text || '')\n                .replace(/<[^>]+>/g, '') // strip HTML from RTE\n                .trim();\n            return plain.length >= 20;\n        });\n\n        // helper to build a complete, flat snapshot for plan\n        const buildBasePlan = (fg) => {\n            const fromPlan = (fg?.plan && Object.keys(fg.plan).length) ? fg.plan : {};\n\n            const snap = {\n                // prefer what's already inside plan; fall back to top-level fields on fg\n                curation_id:       fromPlan.curation_id       ?? fg.curation_id,\n                gene_symbol:       fromPlan.gene_symbol       ?? fg.gene_symbol,\n                hgnc_id:           fromPlan.hgnc_id           ?? fg.hgnc_id,\n                hgnc_name:         fromPlan.hgnc_name         ?? fg.hgnc_name ?? null,\n                disease_name:      fromPlan.disease_name      ?? fg.disease_name,\n                mondo_id:          fromPlan.mondo_id          ?? fg.mondo_id,\n                expert_panel:      fromPlan.expert_panel      ?? fg.expert_panel ?? null,\n                moi:               fromPlan.moi               ?? fg.moi,\n                moi_name:          fromPlan.moi_name          ?? fg.moi_name ?? null,\n                hp_id:             fromPlan.hp_id             ?? fg.hp_id ?? null,\n                classification_id: fromPlan.classification_id ?? fg.classification_id ?? null,\n                classification:    fromPlan.classification    ?? fg.classification ?? null,\n                curation_status_id:fromPlan.curation_status_id?? fg.curation_status_id ?? null,\n                curation_type:     fromPlan.curation_type     ?? fg.curation_type ?? null,\n                curation_status:   fromPlan.curation_status   ?? fg.curation_status ?? null,\n                date_approved:     fromPlan.date_approved     ?? fg.date_approved ?? null,\n                phenotypes:        fromPlan.phenotypes        ?? fg.phenotypes ?? null,\n                phenotypeIDs:      fromPlan.phenotypeIDs      ?? fg.phenotypeIDs ?? null,\n                checkKey:          fromPlan.checkKey          ?? fg.checkKey ?? null,\n\n                // normalize flags/text\n                is_other: false,\n                requires_plan: !!fg?.requires_plan,\n                curated_plan_text: (fg?.requires_plan ? markdownFromHTML(fg?.curated_plan_text || fromPlan.curated_plan_text || '') : markdownFromHTML(fromPlan.curated_plan_text || ''))\n            };\n\n            // strip undefined to keep payload clean\n            Object.keys(snap).forEach(k => snap[k] === undefined && delete snap[k]);\n            return snap;\n        };\n\n        const saveForm = async () => {\n            try {\n                let payload;\n                if (formGene.value.is_other) {\n                    const plan = {\n                        is_other: true,\n                        the_plan: markdownFromHTML(formGene.value.custom_plan),\n                        moi_name: formGene.value.custom_moi?.name || '',\n                        hp_id: formGene.value.custom_moi?.hp_id || ''\n                    };\n                    payload = {\n                        is_other: true,\n                        hgnc_id: formGene.value.custom_gene?.hgnc_id || null,\n                        gene_symbol: formGene.value.custom_gene?.gene_symbol || '',\n                        disease_name: formGene.value.custom_disease?.name || '',\n                        mondo_id: formGene.value.custom_disease?.mondo_id || '',\n                        moi: formGene.value.custom_moi?.abbreviation || '',\n                        plan,\n                        date_approved: null\n                    };\n                } else {\n                    const basePlan = buildBasePlan(formGene.value);\n\n                    payload = {\n                        hgnc_id: formGene.value.hgnc_id,\n                        gene_symbol: formGene.value.gene_symbol,\n                        disease_name: formGene.value.disease_name,\n                        mondo_id: formGene.value.mondo_id,\n                        moi: formGene.value.moi,\n                        date_approved: formGene.value.date_approved,\n                        plan: basePlan,\n                        is_other: false\n                    };\n                }\n\n                if (isEditing.value) {\n                    await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/${isEditing.value}`, payload);\n                    store.commit('pushSuccess', `Successfully updated for ${payload.gene_symbol}-${payload.mondo_id}-${payload.moi}`);\n                } else {\n                    await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, { genes: [payload] });\n                    store.commit('pushSuccess', `Successfully added: ${payload.gene_symbol}-${payload.mondo_id}-${payload.moi}`);\n                }\n\n                await getGenes();\n                cancelForm();\n                emit('saved');\n            } catch (error) {                \n                const res = error?.response\n                if (res?.status === 422 && res.data?.errors) {\n                    const all = Object.values(res.data.errors).flat()\n                    store.commit('pushError', all.join('\\n'))\n                } else {\n                    store.commit('pushError', res?.data?.message || `Failed to add ${payload.gene_symbol}`)\n                }\n            }\n        };\n\n        const remove = async gene => {\n            try {\n                await api.delete(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`);\n                await getGenes();\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        };\n\n        const updateTier = async gene => {\n            savingTierFor.value = gene.id;\n            const oldTier = gene.tier;\n            try {\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/update-tier`, { ids: [gene.id], tier: gene.tier || null });\n                store.commit('pushSuccess', `Tier updated for ${gene.gene_symbol}`);\n            } catch (error) {\n                gene.tier = oldTier;\n                store.commit('pushError', `Failed to update tier`);\n            } finally {\n                savingTierFor.value = null;\n            }\n        };\n\n        const applyBulkTier = async () => {\n            if (!bulkTier.value || selectedGenes.value.length === 0) return;\n            try {\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/update-tier`, { ids: selectedGenes.value, tier: bulkTier.value });\n                store.commit('pushSuccess', `Tier updated for ${selectedGenes.value.length} genes`);\n                selectedGenes.value = [];\n                await getGenes();                \n                bulkTier.value = '';\n            } catch (error) {\n                store.commit('pushError', 'Failed to update tiers in bulk');\n            }\n        };\n\n        const clearSelection = () => {\n            if (selectedGenes.value.length === 0) return\n            selectedGenes.value = [] \n        }\n\n        const toggleSelect = id => {\n            if (selectedGenes.value.includes(id)) {\n                selectedGenes.value = selectedGenes.value.filter(x => x !== id);\n            } else {\n                selectedGenes.value.push(id);\n            }\n        };\n\n        const toggleSelectAll = () => {\n            const idsOnPage = paginatedGenes.value.map(g => g.id);\n            const allSelected = idsOnPage.every(id => selectedGenes.value.includes(id));\n            if (allSelected) {\n                selectedGenes.value = selectedGenes.value.filter(id => !idsOnPage.includes(id));\n            } else {\n                selectedGenes.value = [...new Set([...selectedGenes.value, ...idsOnPage])];\n            }\n        };\n\n        const filteredAndSortedGenes = computed(() => {\n            let result = [...genes.value];\n            const keyword = search.value.toLowerCase();\n            if (keyword) {\n                result = result.filter(g =>\n                    (g.gene_symbol && g.gene_symbol.toLowerCase().includes(keyword)) ||\n                    (g.mondo_id && g.mondo_id.toLowerCase().includes(keyword)) ||\n                    (g.disease_name && g.disease_name.toLowerCase().includes(keyword)) ||\n                    (g.moi && g.moi.toLowerCase().includes(keyword)) ||\n                    (g.plan?.the_plan && g.plan.the_plan.toLowerCase().includes(keyword)) ||\n                    (g.plan?.expert_panel && g.plan.expert_panel.toLowerCase().includes(keyword)) ||\n                    (g.plan?.classification && g.plan.classification.toLowerCase().includes(keyword)) ||\n                    (g.plan?.phenotypes && g.plan.phenotypes.toLowerCase().includes(keyword))\n                );\n            }\n            if (filterMoi.value) {\n                result = result.filter(g => g.moi === filterMoi.value);\n            }\n            if (filterClassification.value) {\n                result = result.filter(g => g.plan?.classification === filterClassification.value);\n            }\n            // Sorting logic\n            result.sort((a, b) => {\n                let aVal, bVal;\n\n                switch (sortKey.value) {\n                    case 'disease':\n                        aVal = `${a.mondo_id || ''} ${a.disease_name || ''}`.toLowerCase();\n                        bVal = `${b.mondo_id || ''} ${b.disease_name || ''}`.toLowerCase();\n                        break;\n                    case 'moi':\n                        aVal = a.moi || '';\n                        bVal = b.moi || '';\n                        break;\n                    case 'tier':\n                        // Numeric sort for tier\n                        aVal = a.tier ? Number(a.tier) : 0;\n                        bVal = b.tier ? Number(b.tier) : 0;\n                        return sortOrder.value === 'asc' ? aVal - bVal : bVal - aVal;\n                    default: // gene_symbol\n                        aVal = a.gene_symbol || '';\n                        bVal = b.gene_symbol || '';\n                }\n\n                // For string comparisons\n                return sortOrder.value === 'asc'\n                    ? aVal.localeCompare(bVal)\n                    : bVal.localeCompare(aVal);\n            });\n\n            return result;\n        });\n\n        const applyGtUpdate = async (gene) => {\n            try {\n                const snap = gene.gt_data;\n                if (!snap) return;\n\n                const payload = {\n                    is_other: false,\n                    hgnc_id: snap.hgnc_id,\n                    gene_symbol: snap.gene_symbol,\n                    disease_name: snap.disease_name,\n                    mondo_id: snap.mondo_id,\n                    moi: snap.moi,\n                    date_approved: snap.date_approved,                    \n                    plan: {\n                        ...snap,\n                        checkKey: snap.checkKey,\n                        requires_plan: ['Moderate', 'Limited'].includes(snap.plan?.classification),\n                    },\n                };\n\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`, payload);\n                store.commit('pushSuccess', `Updated ${gene.gene_symbol} from GeneTracker`);\n                await getGenes();\n            } catch (e) {\n                store.commit('pushError', 'Failed to apply update from GeneTracker');\n            }\n        };\n\n\n        const moiOptions = computed(() => [...new Set(genes.value.map(g => g.moi).filter(Boolean))]);\n        const classificationOptions = computed(() => [...new Set(genes.value.map(g => g.plan?.classification).filter(Boolean))]);\n        const totalPages = computed(() => Math.ceil(filteredAndSortedGenes.value.length / pageSize.value));\n        const paginatedGenes = computed(() => {\n            const start = (currentPage.value - 1) * pageSize.value;\n            return filteredAndSortedGenes.value.slice(start, start + pageSize.value);\n        });\n        const isAllSelected = computed(() => paginatedGenes.value.every(g => selectedGenes.value.includes(g.id)));\n\n\n        // Helper functions for compare diff rows\n        const isDiff = (a, b) => (a ?? '') !== (b ?? '');\n        const snapVal = (gene, key) => {\n            const s = gene?.plan ?? {};\n            const map = {\n                gene_symbol:  gene.gene_symbol ?? s.gene_symbol,\n                moi:          gene.moi ?? s.moi,\n                mondo_id:     gene.mondo_id ?? s.mondo_id,\n                disease_name: gene.disease_name ?? s.disease_name,\n                expert_panel:s.expert_panel,\n                classification: s.classification,\n                curation_status: s.curation_status,\n                date_approved: s.date_approved,\n                phenotypes:   s.phenotypes,\n            };\n            return map[key];\n        };\n\n        const gtVal = (gene, key) => {\n            const g = gene?.gt_data ?? {};\n            const map = {\n                gene_symbol: g.gene_symbol,\n                moi:         g.moi,\n                mondo_id:    g.mondo_id,\n                disease_name:g.disease_name,\n                expert_panel:g.expert_panel,\n                classification: g.classification,\n                curation_status: g.curation_status,\n                date_approved: g.date_approved,\n                phenotypes:  g.phenotypes,\n            };\n            return map[key];\n        };\n\n        const compactDiffRows = (gene, { onlyChanged = false } = {}) => {\n            // Format dates for display consistency\n            const fmtDate = (d) => (d ? new Date(d).toLocaleDateString() : '');\n\n            const rows = [\n                { key: 'gene_symbol',   label: 'HGNC Symbol',   a: snapVal(gene, 'gene_symbol'),   b: gtVal(gene, 'gene_symbol') },\n                { key: 'moi',           label: 'MOI',           a: snapVal(gene, 'moi'),           b: gtVal(gene, 'moi') },\n                { key: 'mondo_id',      label: 'MONDO ID',      a: snapVal(gene, 'mondo_id'),      b: gtVal(gene, 'mondo_id') },\n                { key: 'disease_name',  label: 'Disease',       a: snapVal(gene, 'disease_name'),  b: gtVal(gene, 'disease_name') },\n\n                { key: 'expert_panel',  label: 'Expert Panel',  a: snapVal(gene, 'expert_panel'),  b: gtVal(gene, 'expert_panel') },\n                { key: 'classification',label: 'Classification',a: snapVal(gene, 'classification'),b: gtVal(gene, 'classification') },\n                { key: 'curation_status',label:'Status',        a: snapVal(gene, 'curation_status'),b: gtVal(gene, 'curation_status') },\n                { key: 'date_approved', label: 'Date Approved', a: fmtDate(snapVal(gene, 'date_approved')), b: fmtDate(gtVal(gene, 'date_approved')) },\n                { key: 'phenotypes',    label: 'Phenotypes',    a: snapVal(gene, 'phenotypes'),    b: gtVal(gene, 'phenotypes') },\n            ];\n\n            return onlyChanged ? rows.filter(r => isDiff(r.a, r.b)) : rows;\n        };\n\n        // NEXT 2 FUNCTIONS HANDLE SCROLLING TO FORM WHEN IT OPENS\n        const scrollToForm = () => {\n            const el = formEl.value\n            if (!el) return\n            el.scrollIntoView({ behavior: 'smooth', block: 'start' })\n        }\n\n        const onFormEntered = () => {\n            if (shouldScrollToForm.value) {\n                shouldScrollToForm.value = false\n                scrollToForm()\n            }\n        }\n        const scrollToFormSoon = async () => {\n            await nextTick()\n            requestAnimationFrame(() => scrollToForm())\n        }\n\n\n\n        onMounted(() => { getGenes(); getMois(); });\n        const expanded = ref([])\n        const toggleExpanded = index => {\n            if (expanded.value.includes(index)) {\n                expanded.value = expanded.value.filter(i => i !== index)\n            } else {\n                expanded.value.push(index)\n            }\n        }\n\n        return {\n            group, genes, formGene, curatedGeneKey, isEditing, isFormVisible,\n            mois, errors, search, filterMoi, filterClassification, sortKey, sortOrder,\n            pageSize, currentPage, totalPages, paginatedGenes, filteredAndSortedGenes,\n            moiOptions, classificationOptions,\n            selectedGenes, bulkTier, savingTierFor, isAllSelected,\n            canEdit, isOtherFormValid, isCuratedPlanValid, toggleExpanded, expanded,\n            showConfirmRemove, selectedGene, confirmRemove, cancelRemove, removeGene,\n            setSort, startAdd, startEdit, cancelForm, selectOther, handleCuratedSelection, saveForm,\n            remove, updateTier, applyBulkTier, toggleSelect, toggleSelectAll, applyGtUpdate,\n            compactDiffRows, isDiff, htmlFromMarkdown, formEl, onFormEntered, clearSelection\n        };\n    }\n};\n</script>\n\n\n<style scoped>\n/* Fade + slide transition for collapsible form */\n.fade-enter-active,\n.fade-leave-active {\n  transition: all 0.3s ease;\n}\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n  transform: translateY(-8px);\n}\n\n/* Buttons */\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 4px;\n  padding: 6px 12px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n.btn.blue {\n  background-color: #2563eb;\n  color: white;\n}\n.btn.blue:hover {\n  background-color: #1d4ed8;\n}\n.btn-gray {\n  background-color: #f3f4f6;\n  color: #374151;\n}\n.btn-gray:hover {\n  background-color: #e5e7eb;\n}\n.btn-xs {\n  font-size: 12px;\n  padding: 4px 6px;\n}\n\n/* Form elements */\ninput[type=\"text\"], select {\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n}\ninput:focus, select:focus {\n  outline: none;\n  border-color: #2563eb;\n  box-shadow: 0 0 0 1px #2563eb;\n}\n\n/* Responsive filter controls */\n@media (max-width: 768px) {\n  .flex.justify-between {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  .flex.items-center.gap-4 {\n    flex-wrap: wrap;\n  }\n}\n\n.scroll-target { scroll-margin-top: 96px; }\n</style>","<script>\nexport default {\n    name: 'CspecSummary',\n    props: {\n        readonly: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            sort: {\n                field: 'id',\n                desc: false,\n            },\n            specFields: [\n                {\n                    name: 'name',\n                    type: String,\n                    sortable: true,\n                },\n                {\n                    name: 'status',\n                    label: 'Status',\n                    type: String,\n                    sortable: true,\n                },\n                {\n                    name: 'updated_at',\n                    label: 'Last Updated',\n                    type: Date,\n                    sortable: true,\n                },\n            ]\n        }\n    },\n    computed: {\n        group () {\n            return this.$store.getters['groups/currentItemOrNew'];\n        },\n        hasSpecifications () {\n            return this.group.expert_panel.specifications && this.group.expert_panel.specifications.length > 0;\n        },\n        specifications () {\n            return this.group.expert_panel.specifications;\n        }\n    },\n    watch: {\n        group (to) {\n            this.$store.dispatch('groups/getSpecifications', to)\n        }\n    },\n    mounted() {\n        this.$store.dispatch('groups/getSpecifications', this.group)\n    },\n    methods: {\n        goToCspec () {\n            window.location = 'https://cspec.genome.network/'\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <div v-if=\"!hasSpecifications\" class=\"well mb-2\">\n      No specifications on record in the CSPEC Registry.\n    </div>\n    <div v-else>\n      <table class=\"mb-2\">\n        <thead>\n          <tr>\n            <th>Specification Name</th>\n            <th>Status</th>\n            <th>Last Updated</th>\n            <th>&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"spec in specifications\" :key=\"spec.id\">\n            <td>{{ spec.name }}</td>\n            <td>{{ spec.status }}</td>\n            <td>{{ formatDate(spec.updated_at) }}</td>\n            <td>\n              <ul>\n                <!-- <li>\n                                    <a target=\"cspec_view\" :href=\"`https://cspec.genome.network/cspec/ui/svi/doc/${spec.cspec_id}`\">View</a>\n                                </li> -->\n                <li>\n                  <a target=\"cspec_edit\" :href=\"`https://cspec.genome.network/cspec/ed/svi/doc/${spec.cspec_id}`\">Edit</a>\n                </li>\n              </ul>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <a\n      class=\"btn btn-lg blue\"\n      target=\"cspec-editor\"\n      :disabled=\"readonly\"\n      href=\"https://cspec.genome.network/\"\n    >\n      Go to the CSpec Registry\n      <icon-arrow-right class=\"inline\" />\n    </a>\n\n    <note class=\"mt-2\">\n      It may take up to an hour for the latest updates in the CSPEC Registry to display here.\n    </note>\n  </div>\n</template>\n","<script>\nimport {formatDate} from '../../../date_utils'\nimport {isValidationError} from '@/http';\nimport config from '@/configs.json'\n\nconst documentsTypes = config.documentsTypes;\n\nexport default {\n    props: {\n        documentTypeId: {\n            type: [Number, Array],\n            required: true\n        },\n        step: {\n            type: Number,\n            required: false,\n            default: null\n        },\n        showNotes: {\n            type: Boolean,\n            default: true\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n    ],\n    data() {\n        return {\n            newDocument: {\n                file: null,\n                date_received: new Date().toISOString(),\n                step: this.step,\n            },\n            errors: {},\n            activeDocument: {},\n            showDeleteConfirmation: false\n        }\n    },\n    computed: {\n        group () {\n            return this.$store.getters['groups/currentItemOrNew']\n        },\n        documents () {\n            return this.group.documents.filter(d => {\n                if (this.docTypeIsArray) {\n                    return this.documentTypeId.includes(d.document_type_id)\n                }\n                return d.document_type_id === this.documentTypeId\n            })\n        },\n        docTypeIsArray () {\n            return Array.isArray(this.documentTypeId);\n        },\n        filteredTypes () {\n            if (this.docTypeIsArray) {\n                return Object.values(documentsTypes)\n                        .filter(dt => this.documentTypeId.includes(dt.id))\n                        .map(dt => ({label: dt.long_name, value: dt.id}));\n            }\n            return [];\n        },\n        document_type_id () {\n            return (this.docTypeIsArray) ? null : this.documentTypeId;\n        }\n    },\n    mounted() {\n        this.$store.dispatch('groups/getDocuments', this.group);\n    },\n    methods: {\n        async save() {\n            try {\n                const data = new FormData();\n                Object.entries(this.newDocument)\n                    .forEach(([key, val]) => {\n                        if (val == null) return;\n                        data.append(key, val);\n                    })\n                data.set('file', this.$refs.fileInput.files[0]);\n                data.set('document_type_id', this.documentTypeId);\n                await this.$store.dispatch('groups/addApplicationDocument', {group: this.group, data});\n\n                this.clearForm();\n                this.$emit('saved');\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors\n                }\n            }\n\n        },\n        cancel() {\n            this.clearForm();\n            this.$emit('canceled');\n        },\n        clearForm() {\n            this.initNewDocument();\n            this.clearErrors();\n        },\n        initNewDocument() {\n            this.$refs.fileInput.value = null;\n            this.newDocument = {\n                file: null,\n                date_received: formatDate(new Date()),\n                date_reviewed: null,\n                step: this.step,\n                document_type_id: this.documentTypeId,\n                notes: null\n            }\n        },\n        clearErrors () {\n            this.errors = {}\n        },\n        initDownload (item) {\n            window.location = item.download_url;\n        },\n        initDelete (item) {\n            this.activeDocument = item;\n            this.showDeleteConfirmation = true;\n        },\n        cancelDelete () {\n            this.showDeleteConfirmation = false;\n            this.resetActiveDocument();\n        },\n        async commitDelete() {\n            await this.$store.dispatch('groups/deleteDocument', {group: this.group, document: this.activeDocument})\n            this.showDeleteConfirmation = false;\n            this.resetActiveDocument();\n        },\n        resetActiveDocument () {\n            this.activeDocument = {type: {}}\n        }\n    }\n}\n</script>\n<template>\n  <div>\n    <table v-if=\"documents.length > 0\" class=\"table\">\n      <thead>\n        <tr>\n          <th>File</th>\n          <th v-if=\"docTypeIsArray\">\n            Type\n          </th>\n          <th>uploaded</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"doc in documents\" :key=\"doc.id\" class=\"p-1 border\">\n          <td>\n            <a :href=\"doc.download_url\">{{ doc.filename }}</a>\n            <span class=\"note\"> (v. {{ doc.version }})</span>\n          </td>\n          <td v-if=\"docTypeIsArray\">\n            {{ doc.type.long_name }}\n          </td>\n          <td>{{ formatDate(doc.created_at) }}</td>\n          <td>\n            <dropdown-menu hide-cheveron>\n              <template #label>\n                <button class=\"btn btn-xs\">\n                  &hellip;\n                </button>\n              </template>\n              <dropdown-item @click=\"initDownload(doc)\">\n                Download\n              </dropdown-item>\n              <dropdown-item v-if=\"hasAnyPermission(['ep-applications-manage', ['application-edit', group]])\" @click=\"initDelete(doc)\">\n                Delete\n              </dropdown-item>\n            </dropdown-menu>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <div v-if=\"!readonly\">\n      <input-row\n        v-if=\"docTypeIsArray\"\n        v-model=\"newDocument.document_type_id\"\n        label=\"Document type\"\n        type=\"select\"\n        :options=\"filteredTypes\"\n      />\n\n      <input-row label=\"Document\" :errors=\"errors.file\">\n        <input ref=\"fileInput\" type=\"file\">\n      </input-row>\n      <button class=\"btn blue\" @click=\"save\">\n        Upload\n      </button>\n    </div>\n    <teleport to=\"body\">\n      <modal-dialog\n        v-model=\"showDeleteConfirmation\"\n        :title=\"`You are about to delete ${activeDocument.filename}`\"\n      >\n        <div v-if=\"activeDocument\">\n          <p v-if=\"activeDocument.is_final\" class=\"mb-3\">\n            This version has been tagged as the final version of the document.\n          </p>\n          <p>Are you sure you want to continue?</p>\n\n          <button-row\n            submit-text=\"Delete Document\"\n            @canceled=\"cancelDelete\"\n            @submitted=\"commitDelete\"\n          />\n        </div>\n      </modal-dialog>\n    </teleport>\n  </div>\n</template>\n","<script>\nimport CspecSummary from '@/components/expert_panels/CspecSummary.vue'\nimport ApplicationUploadForm from '@/components/applications/documents/ApplicationUploadForm.vue'\n\nexport default {\n    name: 'SpecificationsSection',\n    components: {\n        CspecSummary,\n        ApplicationUploadForm\n    },\n    props: {\n        docTypeId: {\n            required: true,\n            type: [Number, Array]\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n        }\n    },\n    computed: {\n        cspecSummaryEnabled () {\n            return this.$store.state.systemInfo.app.features.cspec_summary\n        },\n        specificationUpload () {\n            return this.$store.state.systemInfo.app.features.specification_upload\n        }\n    },\n    methods: {\n\n    }\n}\n</script>\n<template>\n  <div>\n    <CspecSummary v-if=\"cspecSummaryEnabled\" :readonly=\"readonly\" />\n\n    <collapsible class=\"mt-4\">\n      <template #title>\n        <h3>Legacy document-based specifications</h3>\n      </template>\n      <ApplicationUploadForm\n        v-if=\"specificationUpload\"\n        :document-type-id=\"docTypeId\"\n        :show-notes=\"false\"\n        :readonly=\"readonly\"\n      />\n    </collapsible>\n  </div>\n</template>\n"],"names":["props","__props","emit","__emit","store","useStore","search","ref","selectedStatus","sortKey","sortOrder","currentPage","pageSize","expanded","selectedGenes","bulkTier","savingTierFor","savingBulk","showConfirmRemove","selectedGene","confirmRemove","gene","cancelRemove","removeGene","api","removed","error","_a","statusPriority","allStatuses","computed","set","g","s","a","b","filteredGenes","kw","symbolMatch","epMatch","ep","diseaseMatch","d","_b","statusMatch","matchesSearch","matchesStatus","sortedGenes","pri","vals","aP","bP","aN","bN","aVal","bVal","totalPages","paginatedGenes","start","toggleExpanded","index","i","toggleSelect","id","x","toggleSelectAll","idsOnPage","isAllSelected","updateTier","oldTier","err","applyBulkTier","clearSelection","_sfc_main","GeneSearchSelect","DiseaseSearchSelect","CuratedGeneSearchSelect","RichTextEditor","genes","formGene","isEditing","isFormVisible","curatedGeneKey","errors","mois","formEl","shouldScrollToForm","filterMoi","filterClassification","group","canEdit","hasAnyPermission","getGenes","getMois","response","setSort","key","startAdd","unescapeMarkdown","startEdit","wasOpen","m","plan","_c","_d","scrollToFormSoon","cancelForm","isOtherFormValid","selectOther","originalId","handleCuratedSelection","selected","htmlFromMarkdown","isCuratedPlanValid","buildBasePlan","fg","fromPlan","snap","markdownFromHTML","k","saveForm","payload","_e","_f","_g","basePlan","res","_h","all","_i","remove","filteredAndSortedGenes","result","keyword","applyGtUpdate","moiOptions","classificationOptions","isDiff","snapVal","gtVal","compactDiffRows","onlyChanged","fmtDate","rows","r","scrollToForm","el","onFormEntered","nextTick","onMounted","_hoisted_1","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_8","_hoisted_11","_hoisted_12","_hoisted_15","_hoisted_17","_hoisted_19","_hoisted_20","_hoisted_22","_hoisted_23","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_52","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_65","_hoisted_67","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_83","_hoisted_84","_hoisted_85","_createElementBlock","_createElementVNode","$props","_openBlock","_hoisted_2","$setup","args","_createCommentVNode","_cache","$event","_Fragment","_renderList","moi","_toDisplayString","c","_createVNode","_Transition","_withCtx","_hoisted_7","_hoisted_9","_createBlock","_component_CuratedGeneSearchSelect","_createTextVNode","_hoisted_10","_component_RichTextEditor","_hoisted_13","_hoisted_14","_component_GeneSearchSelect","_hoisted_16","_vModelSelect","_hoisted_18","_component_DiseaseSearchSelect","_hoisted_21","_hoisted_24","_createStaticVNode","size","_hoisted_34","_hoisted_35","_hoisted_39","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_component_dropdown_menu","_component_dropdown_item","_hoisted_51","_hoisted_53","_normalizeClass","_j","_k","_l","_m","_n","_hoisted_64","_o","_hoisted_66","_hoisted_68","row","_hoisted_82","to","$options","spec","_ctx","_component_icon_arrow_right","_component_note","documentsTypes","config","dt","data","val","isValidationError","formatDate","item","doc","_component_input_row","$data","_Teleport","_component_modal_dialog","_component_button_row","CspecSummary","ApplicationUploadForm","_component_CspecSummary","_component_collapsible","_component_ApplicationUploadForm"],"mappings":"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"}