{"version":3,"file":"js/181.4cff7270.js","mappings":"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","sources":["webpack://epam/./src/components/expert_panels/AttestationGcep.vue","webpack://epam/./src/components/expert_panels/AttestationGcep.vue?df81","webpack://epam/./src/components/expert_panels/AttestationNhgri.vue","webpack://epam/./src/components/expert_panels/AttestationNhgri.vue?3f3a","webpack://epam/./src/components/expert_panels/AttestationReanalysis.vue","webpack://epam/./src/components/expert_panels/AttestationReanalysis.vue?c61e","webpack://epam/./src/components/expert_panels/GcepGeneList.vue","webpack://epam/./src/components/expert_panels/GcepGeneList.vue?0fda","webpack://epam/./src/components/expert_panels/MembershipDescriptionForm.vue","webpack://epam/./src/components/expert_panels/MembershipDescriptionForm.vue?e70c","webpack://epam/./src/components/expert_panels/ScopeDescriptionForm.vue","webpack://epam/./src/components/expert_panels/ScopeDescriptionForm.vue?a0ca","webpack://epam/./src/components/expert_panels/VcepGeneList.vue","webpack://epam/./src/components/expert_panels/VcepGeneList.vue?6804"],"sourcesContent":["<template>\n    <div>\n        <p>\n            The Gene Curation Expert Panel (GCEP) leaders(s) will complete the checkbox attestations document below on behalf of the GCEP.\n        </p>\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.utilize_gt\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.utilize_gt\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        This GCEP will utilize the ClinGen Gene Tracker for documentation of all precuration information, consistent with the current Lumping and Splitting working group guidance, for gene-disease relationships.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.utilize_gci\" :hide-label=\"true\">\n                    <checkbox\n                        v-model=\"group.expert_panel.utilize_gci\"\n                        :disabled=\"disabled\"\n                        @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    >\n                        This GCEP will utilize the ClinGen Gene Curation Interface for documentation of all gene-disease validity classifications.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.curations_publicly_available\" :hide-label=\"true\">\n                    <checkbox\n                        v-model=\"group.expert_panel.curations_publicly_available\"\n                        :disabled=\"disabled\"\n                        @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    >\n                        All curations completed by this group will be made publicly available through the ClinGen website immediately upon completion.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.pub_policy_reviewed\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.pub_policy_reviewed\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        The <publication-policy-link /> has been reviewed and a manuscript concept sheet will be submitted to the NHGRI and  ClinGen Steering Committee before the group prepares a publication for submission.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.draft_manuscripts\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.draft_manuscripts\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Draft manuscripts will be submitted to the ClinGen Gene Curation WG for review prior to submission.\n                        Email: <a href=\"mailto:genecuration@clinicalgenome.org\">genecuration@clinicalgenome.org</a>\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.recuration_process_review\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.recuration_process_review\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        The ClinGen <gcep-recuration-process-link>Gene-Disease Validity Recuration Process</gcep-recuration-process-link> has been reviewed.\n                    </checkbox>\n                </input-row>\n            </li>\n        </ul>\n\n        <p>\n            Biocurators are expected to become familiar with the ClinGen <training-materials-link /> located on <training-materials-link>ClinicalGenome.org</training-materials-link>. Biocurators are requested to join the mailing list for ClinGen Biocurator Working Group, and expected to attend those calls that focus on gene curation SOP and/or framework updates.\n        </p>\n\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.biocurator_training\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.biocurator_training\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Biocurators have received training and/or there is a plan in place to train any biocurators who have not received all training yet.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <checkbox v-model=\"gci_training\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                    Biocurators are trained on the use of the Gene Curation Interface (GCI) and/or there is a plan in place to train any biocurators who are not yet trained on the use of the GCI”\n                </checkbox>\n                <input-row\n                    v-model=\"group.expert_panel.gci_training_date\"\n                    @update:modelValue=\"emitUpdate(), checkCompleteness()\"\n                    v-show=\"gci_training\"\n                    :errors=\"gciTrainingErrors\"\n                    label=\"Date Trained\"\n                    type=\"date\"\n                    class=\"ml-6\"\n                />\n            </li>\n            <li>\n                <input-row :errors=\"errors.biocurator_mailing_list\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.biocurator_mailing_list\" :disabled=\"disabled\" @update:modelValue=\"emitUpdate(), checkCompleteness()\">\n                        Biocurators have joined the Biocurator WG mailing list and/or there is a plan in place to have them join mailing list.\n                        <br>The calls occur on the 2nd and 4th Thursdays from 12-1pm.\n                    </checkbox>\n                </input-row>\n            </li>\n        </ul>\n    </div>\n</template>\n<script>\nimport {api, isValidationError} from '@/http'\n\nexport default {\n    name: 'AttestationGcep',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            gci_training: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        },\n        gciTrainingErrors () {\n            const trainingErrors = this.errors.gci_training || [];\n            const dateErrors = this.errors.gci_training_date || [];\n            return [...trainingErrors, ...dateErrors];\n        },\n        gci_training_comp () {\n            return Boolean(this.group.expert_panel.gci_training_date)\n        }\n    },\n    watch: {\n        group: {\n            immediate: true,\n            handler: function (to) {\n                this.gci_training = Boolean(to.expert_panel.gci_training_date)\n            }\n        },\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/gcep`,\n                this.group.expert_panel.attributes)\n            } catch (error) {\n                if (isValidationError(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        emitUpdate () {\n            this.$emit('update');\n        },\n        checkCompleteness () {\n            if (this.group.expert_panel.utilize_gt\n                && this.group.expert_panel.utilize_gci\n                && this.group.expert_panel.curations_publicly_available\n                && this.group.expert_panel.pub_policy_reviewed\n                && this.group.expert_panel.draft_manuscripts\n                && this.group.expert_panel.recuration_process_review\n                && this.group.expert_panel.biocurator_training\n                && this.group.expert_panel.gci_training_date !== null\n                && this.group.expert_panel.biocurator_mailing_list\n                && this.group.expert_panel.gcep_attestation_date === null\n            ) {\n                this.group.expert_panel.gcep_attestation_date = new Date();\n                return;\n            }\n            this.group.expert_panel.gcep_attestation_date = null;\n        }\n    },\n}\n</script>\n","import { render } from \"./AttestationGcep.vue?vue&type=template&id=77fadcc4\"\nimport script from \"./AttestationGcep.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationGcep.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <p v-if=\"group.isVcep()\">\n            Curated variants and genes are expected to be approved and posted for the community as soon as possible as described in Section 2.4 of the <vcep-protocol-link />. \n            Note that upon approval, a VCEP must finalize their set of variants for upload to the ClinGen Evidence Repository within 30 days.\n        </p>\n        <p v-if=\"group.is_gcep\">\n            Curated genes and variants are expected to be approved and posted for the community as soon as possible and should not wait for the publication of a manuscript.\n        </p>\n\n        <p class=\"my-4\">\n            <input-row label=\"\" :vertical=\"true\">\n                <checkbox \n                    :disabled=\"disabled\" \n                    v-model=\"attestation\" \n                    id=\"nhgri-checkbox\" \n                    :label=\"checkboxLabel\"\n                />\n            </input-row>\n        </p>\n\n        <p v-if=\"group.is_vcep_or_scvcep\">\n            Please review the\n            <publication-policy-link />\n            and refer to guidance on submissions to a preprint server (e.g. bioRxiv or medRxiv).\n        </p>\n        <p v-if=\"group.is_gcep\">\n            <em>It is expected that, whenever possible, Expert Panel manuscripts will be pre-published (e.g. medRXiv) . If the authors do not anticipate submitting their manuscript to a prepublication resource they must provide a written justification.</em>\n        </p>\n    </div>\n</template>\n<script>\nimport api from '@/http/api';\nimport is_validation_error from '../../http/is_validation_error';\n\nexport default {\n    name: 'NHGRIDataAvailability',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {                \n                this.$store.commit('groups/addItem', value);\n            }\n        },\n        attestation: {\n            get () {\n                return Boolean(this.group.expert_panel.nhgri_attestation_date);\n            },\n            set (value) {\n                if (value) {\n                    this.group.expert_panel.nhgri_attestation_date = new Date();\n                } else {\n                    this.group.expert_panel.nhgri_attestation_date = null;\n                }\n                this.$emit('update');                \n            }\n        },\n        checkboxLabel () {\n            if (this.group.is_vcep) {\n                return \"I understand that once a variant is approved in the VCI it will become publicly available in the Evidence Repository. They should not be held for publication.\"\n            }\n\n            return \"Please check box to confirm your understanding that once a gene is approved in the GCI, the group should utilize the “publish” functionality within the GCI to make the curation publicly available on the ClinGen website (https://clinicalgenome.org/). They should not be held for publication.\"\n        }\n    },\n    methods: {\n        async save () {\n            if (this.attestation) {\n                try {\n                    await api.post(`/api/groups/${this.group.uuid}/application/attestations/nhgri`, {'attestation': this.attestation})\n                } catch (error) {\n                    if (is_validation_error(error)) {\n                        this.errors = error.response.data.errors\n                    }\n                }\n            }\n        }\n    }\n}\n</script>","import { render } from \"./AttestationNhgri.vue?vue&type=template&id=4b6d857d\"\nimport script from \"./AttestationNhgri.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationNhgri.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <p>\n            Expert Panels are expected to keep their variant interpretations up-to-date and to expedite the re-review of variants that have a conflicting assertion submitted to ClinVar after the Expert Panel submission. Please check all 3 boxes below to attest that the VCEP will follow the ClinGen-approved schedule described below <strong><em>or</em></strong> describe other plans at the bottom of the section.\n        </p>\n        <ul class=\"ml-4 mt-2\">\n            <li>\n                <input-row :errors=\"errors.reanalysis_conflicting\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_conflicting\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to reassess any newly submitted conflicting assertion in ClinVar from a one star submitter or above and attempt to resolve or address the conflict within 6 months of being notified about the conflict from ClinGen. Please reach out to the submitter if you need additional information about the conflicting assertion.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_review_lp\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_review_lp\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to re-review all LP and VUS classifications made by the EP at least every 2 years to see if new evidence has emerged to re-classify the variants\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_review_lb\" :hide-label=\"true\">\n                    <checkbox v-model=\"group.expert_panel.reanalysis_review_lb\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        VCEPs are expected to re-review any LB classifications when new evidence is available or when requested by the public via the ClinGen website.\n                    </checkbox>\n                </input-row>\n            </li>\n            <li>\n                <input-row :errors=\"errors.reanalysis_other\" :hide-label=\"true\">\n                    <checkbox v-model=\"otherCheckbox\" :disabled=\"disabled\" @update:modelValue=\"$emit('update'), checkCompleteness()\">\n                        Plans differ from the expectations above.\n                    </checkbox>\n                    <transition name=\"slide-fade-down\">\n                        <div class=\"ml-4\" v-if=\"otherCheckbox\">\n                            <label for=\"reanalysis-other-textarea\">Explain differences:</label>\n                            <textarea \n                                v-model=\"group.expert_panel.reanalysis_other\" \n                                class=\"w-full\"\n                                id=\"reanalysis-other-textarea\"\n                                :disabled=\"disabled\"\n                                @update:modelValue=\"$emit('update'), checkCompleteness()\"\n                            ></textarea>\n                        </div>\n                    </transition>\n                </input-row>\n            </li>\n        </ul>\n    </div>\n</template>\n<script>\nimport api from '@/http/api'\nimport is_validation_error from '../../http/is_validation_error'\n\nexport default {\n    name: 'ReanalysisForm',\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'update'\n    ],\n    data() {\n        return {\n            errors: {},\n            otherCheckbox: false\n        }\n    },\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            }, \n            set (value) {\n                this.$store.commit('groups/addItem', value)\n            }\n        }\n    },\n    watch: {\n        otherCheckbox (to) {\n            if (!to) {\n                this.group.expert_panel.reanalysis_other = null;\n            }\n        }\n    },\n    methods: {\n        async save () {\n            try {\n                this.errors = {};\n                await api.post(`/api/groups/${this.group.uuid}/application/attestations/reanalysis`, this.group.expert_panel)\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    this.errors = error.response.data.errors;\n                }\n            }\n        },\n        checkCompleteness () {\n            const checkedStandard = this.group.expert_panel.reanalysis_conflicting\n                && this.group.expert_panel.reanalysis_review_lp\n                && this.group.expert_panel.reanalysis_review_lb;\n            if (checkedStandard\n                ||  (\n                    this.otherCheckbox \n                    && Boolean(this.group.expert_panel.reanalysis_other)\n                )\n                && this.group.expert_panel.gcep_attestation_date === null\n            ) {\n                this.group.expert_panel.reanalysis_attestation_date = new Date();\n                return;\n            }\n            this.group.expert_panel.reanalysis_attestation_date = null;\n        }\n    }\n}\n</script>","import { render } from \"./AttestationReanalysis.vue?vue&type=template&id=0ab54e02\"\nimport script from \"./AttestationReanalysis.vue?vue&type=script&lang=js\"\nexport * from \"./AttestationReanalysis.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <h4 class=\"flex justify-between mb-2\">\n            Gene List\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing && !readonly\"\n                @click=\"showForm\"\n            ></edit-icon-button>\n        </h4>\n        <div v-if=\"editing\">\n            <input-row \n                v-model=\"genesAsText\"\n                type=\"large-text\"\n                label=\"List the gene symbols for the genes the Expert Panel plans to curate.  Separate genes by commas, spaces, or new lines.\"\n                :errors=\"errors.genes\"\n                @update:modelValue=\"$emit('geneschanged'); $emit('update')\"\n                placeholder=\"ABC, DEF1, BEAN\"\n                vertical\n            />\n        </div>\n        <div v-else>\n            <p v-if=\"genesAsText\" style=\"text-indent: 1rem;\">{{genesAsText}}</p>\n            <div class=\"well cursor-pointer\" v-else @click=\"showForm\">\n                {{ loading ? `Loading...` : `No genes have been added to the gene list.`}}\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport {ref, watch, computed, onMounted} from 'vue';\nimport {useStore} from 'vuex';\nimport formFactory from '@/forms/form_factory'\nimport is_validation_error from '@/http/is_validation_error'\nimport api from '@/http/api'\n\nexport default {\n    name: 'GcepGeneList',\n    components: {\n    },\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    computed: {\n        canEdit () {\n            return this.hasAnyPermission(['groups-manage', ['application-edit', this.group]]);\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n        'update:editing',\n        'geneschanged',\n        'update'\n    ],\n    methods: {\n        showForm () {\n            if (this.canEdit) {\n                this.resetErrors();\n                this.$emit('update:editing', true);\n            }\n        }\n\n    },\n    setup(props, context) {\n        const store = useStore();\n\n        const loading = ref(false);\n        const genesAsText = ref(null);\n\n        const {errors, resetErrors} = formFactory(props, context)\n\n        const group = computed({\n            get() {\n                return store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                store.commit('groups/addItem', value)\n            }\n        });\n\n        const hideForm = () => {\n            context.emit('update:editing', false);\n            errors.value = {};\n        }\n        const cancel = () => {\n            resetErrors();\n            getGenes();\n            hideForm();\n            context.emit('canceled');\n        }\n\n        const syncGenesAsText = () => {\n            if (!group.value.expert_panel) {\n                return;\n            }\n            genesAsText.value = group.value.expert_panel.genes\n                ? group.value.expertPanel.genes.join(', ')\n                : null\n        };\n        const getGenes = async () => {\n            if (!group.value.uuid) {\n                return;\n            }\n            loading.value = true;\n            try {\n                await store.dispatch('groups/getGenes', group.value);\n                genesAsText.value = group.value.expert_panel.genes.map(g => g.gene_symbol).join(\", \");\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n            loading.value = false;\n            \n        }\n        const save = async () => {\n            const genes = genesAsText.value \n                            ? genesAsText.value\n                                .split(new RegExp(/[, \\n]/))\n                                .filter(i => i !== '')\n                            : [];\n\n            try {\n                await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, {genes});\n                hideForm();\n                context.emit('saved')\n                getGenes();\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    const messages = error.response.data.errors\n                    if (messages.group) {\n                        messages.group\n                            .forEach(m => {\n                                store.pushError(m)\n                            })\n                    }\n                    const geneMessages = Object.keys(messages).map(key => {\n                        const [g, geneIdx] = key.split('.')\n                        if (g == 'genes') {\n                            if (geneIdx) {\n                                return `Gene #${(parseInt(geneIdx)+1)}, \"${genes[geneIdx]}\" wasn't found in our records.  Please confirm it is currently an approved HGNC gene symbol.`\n                            }\n                            return messages[key];\n                        }\n                    });\n                    errors.value = {\n                        genes: geneMessages\n                    }\n                }\n            }\n        };\n\n\n        watch(() => store.getters['groups/currentItem'], (to, from) => {\n            if (to.id && (!from || to.id != from.id)) {\n                // syncGenesAsText();\n                getGenes();\n            }\n        })\n\n        onMounted(() => {\n            getGenes();\n        })\n\n        watch(() => group.value.expert_panel.genes, () => {\n            // syncGenesAsText();\n        })\n\n        return {\n            group,\n            genesAsText,\n            loading,\n            errors,\n            resetErrors,\n            hideForm,\n            cancel,\n            syncGenesAsText,\n            save,\n        }\n    }\n}\n</script>","import { render } from \"./GcepGeneList.vue?vue&type=template&id=3c80bb1d\"\nimport script from \"./GcepGeneList.vue?vue&type=script&lang=js\"\nexport * from \"./GcepGeneList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Description of Expertise</h4>\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage'], ['edit-info', group]) && !editing\"\n                @click=\"$emit('update:editing', true)\"\n            ></edit-icon-button>\n        </header>\n        <div class=\"mt-4\">\n            <transition name=\"fade\" mode=\"out-in\">\n                <input-row \n                    v-model=\"group.expert_panel.membership_description\"\n                    label=\"Describe the expertise of VCEP members who regularly use the ACMG/AMP guidelines to classify variants and/or review variants during clinical laboratory case sign-out.\" \n                    v-if=\"editing\" \n                    :errors=\"errors.membership_description\"\n                    type=\"large-text\"\n                    vertical\n                    @update:modelValue=\"emitUpdate\"\n                />\n                <div v-else>\n                    <markdown-block \n                        v-if=\"group.expert_panel.membership_description\" \n                        :markdown=\"group.expert_panel.membership_description\"\n                    />\n                    <p class=\"well\" v-else>\n                        A description of expertise has not yet been provided.\n                    </p>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: 'MembershipDescriptionForm',\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({})\n        }\n    },\n    emits: [\n        'update:editing',\n        'saved',\n        'canceled',\n        'update'\n    ],\n    computed: {\n        group: {\n            get () {\n                return this.$store.getters['groups/currentItemOrNew'];\n            },\n            set (value) {\n                this.$store.commit('groups/addItem', value);\n            }\n        }\n    },\n    methods: {\n        emitUpdate () {\n            this.$emit('update');\n        }\n    }\n}\n</script>","import { render } from \"./MembershipDescriptionForm.vue?vue&type=template&id=0a8ade8d\"\nimport script from \"./MembershipDescriptionForm.vue?vue&type=script&lang=js\"\nexport * from \"./MembershipDescriptionForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Description of Scope</h4>\n            <edit-icon-button \n                v-if=\"hasAnyPermission(['groups-manage', ['application-edit', group]]) && !editing\"\n                @click=\"$emit('update:editing', true)\"\n            ></edit-icon-button>\n        </header>\n        <div class=\"mt-2\">\n            <transition name=\"fade\" mode=\"out-in\">\n                <input-row \n                    v-if=\"editing\"\n                    v-model=\"group.expert_panel.scope_description\"\n                    :errors=\"errors.scope_description\"\n                    type=\"large-text\"\n                    vertical\n                    @update:modelValue=\"$emit('update')\"\n                >\n                    <template v-slot:label>\n                        Describe the scope of work of the Expert Panel including\n                        the disease area(s), genes being addressed, and any\n                        specific rational for choosing the condition(s). See the\n                        <vcep-protocol-link v-if=\"group.is_vcep_or_scvcep\" />\n                        <gcep-quick-guide-link v-if=\"group.is_gcep\" /> for more\n                        information.\n                    </template>\n                </input-row>\n                <div v-else>\n                    <markdown-block \n                        v-if=\"group.expert_panel.scope_description\" \n                        :markdown=\"group.expert_panel.scope_description\">\n                    </markdown-block>\n                    \n                    <p class=\"well cursor-pointer\" v-else @click=\"showForm\">\n                        A description of expertise has not yet been provided.\n                    </p>\n                </div>\n            </transition>\n        </div>\n    </div>\n</template>\n<script>\nimport Group from '@/domain/group'\nimport GcepQuickGuideLink from '../links/GcepQuickGuideLink.vue';\n\nexport default {\n    name: \"scopeDescriptionForm\",\n    props: {\n        editing: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        errors: {\n            type: Object,\n            required: false,\n            default: () => ({}),\n        },\n    },\n    emits: [\n        \"update:editing\",\n        \"update:group\",\n        \"update\"\n    ],\n    computed: {\n        group: {\n            get() {\n                return this.$store.getters[\"groups/currentItem\"] || new Group();\n            },\n            set(value) {\n                this.$store.commit(\"groups/addItem\", value);\n            }\n        },\n        scopeDescription: {\n            get: function () {\n                return this.group.expert_panel.scope_description;\n            },\n            set: function (value) {\n                const groupCopy = this.group.clone();\n                groupCopy.expert_panel.scope_description = value;\n                this.$emit(\"update:group\", groupCopy);\n            }\n        }\n    },\n    components: { GcepQuickGuideLink }\n}\n</script>","import { render } from \"./ScopeDescriptionForm.vue?vue&type=template&id=47731955\"\nimport script from \"./ScopeDescriptionForm.vue?vue&type=script&lang=js\"\nexport * from \"./ScopeDescriptionForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <header class=\"flex justify-between items-center\">\n            <h4>Gene/Disease List</h4>\n        </header>\n        <div class=\"my-2\">\n            <table class=\"border-none\" v-if=\"genes\">\n                <thead>\n                    <tr>\n                        <th style=\"min-width: 10rem\">HGNC Symbol</th>\n                        <th style=\"min-width: 15rem\">Disease</th>\n                        <!-- <th style=\"max-width: 9rem\">Date Approved</th> -->\n                        <th\n                            v-if=\"canEdit\"\n                            style=\"width: 5rem\"\n                        ></th>\n                    </tr>\n                </thead>\n                <transition name=\"fade\" mode=\"out-in\">\n                    <tbody v-if=\"genes.length == 0\">\n                        <tr>\n                            <td colspan=\"4\">\n                                <div class=\"p-2 text-center font-bold\">\n                                    <span v-if=\"loading\">Loading...</span>\n                                    <div v-else>\n                                        <p>There are no gene/disease pairs in the gene list.</p>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                    <tbody v-else>\n                        <!-- <transition-group name=\"slide-fade-down\"> -->\n                            <tr v-for=\"gene in orderedGenes\" :key=\"gene.id\">\n                                <template v-if=\"!gene.edit\">\n                                    <td>{{gene.gene_symbol}}</td>\n                                    <td>{{gene.disease_name}}</td>\n                                    <!-- <td>{{formatDate(gene.date_approved)}}</td> -->\n                                    <td\n                                        v-if=\"canEdit\"\n                                    >\n                                        <div v-if=\"!gene.edit\">\n                                            <dropdown-menu\n                                                :hide-cheveron=\"true\"\n                                                class=\"relative\"\n                                                v-if=\"!gene.toDelete\"\n                                            >\n                                                <template v-slot:label>\n                                                    <button class=\"btn btn-xs\">&hellip;</button>\n                                                </template>\n                                                <dropdown-item @click=\"edit(gene)\">Edit</dropdown-item>\n                                                <dropdown-item @click=\"confirmRemove(gene)\">Remove</dropdown-item>\n                                            </dropdown-menu>\n\n                                            <!-- <div v-if=\"gene.toDelete\">\n                                                <note>set for deletion in {{gene.removeCountdown}} seconds.</note>\n                                                <button @click=\"cancelPendingRemove(gene)\" class=\"btn btn-xs\">Cancel</button>\n                                            </div> -->\n                                        </div>\n                                    </td>\n                                </template>\n                                <template v-else>\n                                    <td>\n                                        <input-row label=\"\" :errors=\"errors.hgnc_id\" :vertical=\"true\">\n                                            <gene-search-select v-model=\"gene.gene\"></gene-search-select>\n                                        </input-row>\n                                    </td>\n                                    <!-- <td colspan=\"2\"> -->\n                                    <td>\n                                        <input-row label=\"\" :errors=\"errors.mondo_id\" :vertical=\"true\">\n                                            <disease-search-select v-model=\"gene.disease\"></disease-search-select>\n                                        </input-row>\n                                    </td>\n                                    <td>\n                                        <button class=\"btn btn-xs\" @click=\"updateCancel(gene)\">Cancel</button>\n                                        <button class=\"btn blue btn-xs\" @click=\"updateGene(gene)\">Save</button>\n                                    </td>\n                                </template>\n                            </tr>\n                        <!-- </transition-group> -->\n                    </tbody>\n                </transition>\n\n                <tbody v-if=\"canEdit\">\n                        <tr>\n                            <td>\n                                <input-row label=\"\" :errors=\"errors[`genes.0.hgnc_id`]\" :vertical=\"true\">\n                                    <gene-search-select v-model=\"newGene.gene\" @update:modelValue=\"debounceSave\" />\n                                </input-row>\n                            </td>\n                            <td colspan=\"4\">\n                                <input-row label=\"\" :errors=\"errors[`diseases.0.hgnc_id`]\" :vertical=\"true\">\n                                    <disease-search-select v-model=\"newGene.disease\" @update:modelValue=\"debounceSave\" />\n                                </input-row>\n                            </td>\n                        </tr>\n                </tbody>\n            </table>\n        </div>\n        <modal-dialog v-model=\"showConfirmRemove\" title=\"Confirm gene/disease pair delete.\">\n            <p>You are about to delete the gene/disease pair {{selectedGene.gene_symbol}}/{{selectedGene.disease_name}}.  Are you sure you want to continue?</p>\n            <button-row\n                submit-text=\"Yes, delete it.\"\n                cancel-text=\"No, cancel\"\n                @submitted=\"remove(selectedGene)\"\n                @canceled=\"cancelRemove\"\n            ></button-row>\n        </modal-dialog>\n    </div>\n</template>\n<script>\nimport {api} from '@/http'\nimport {ref, computed, onMounted} from 'vue';\nimport {debounce} from 'lodash'\nimport {useStore} from 'vuex';\nimport GeneSearchSelect from '@/components/forms/GeneSearchSelect.vue'\nimport DiseaseSearchSelect from '@/components/forms/DiseaseSearchSelect.vue'\nimport is_validation_error from '@/http/is_validation_error'\nimport {hasAnyPermission} from '@/auth_utils'\n\nexport default {\n    name: 'VcepGeneList',\n    components: {\n        GeneSearchSelect,\n        DiseaseSearchSelect,\n    },\n    props: {\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n    emits: [\n        'saved',\n        'canceled',\n        'editing'\n    ],\n    computed: {\n        selectedGeneSymbol () {\n            return this.selectedGene && this.selectedGene.gene ?  this.selectedGene.gene.gene_symbol : 'Unknown Gene Symbols'\n        },\n        selectedDiseaseName () {\n            return this.selectedGene && this.selectedGene.disease ?  this.selectedGene.disease.name : 'Unknown Disease Name'\n        }\n    },\n    setup(props, context) {\n        const store = useStore();\n\n        const showConfirmRemove = ref(false);\n        const selectedGene = ref({gene: {}, disease: {}});\n\n        const group = computed(() => {\n            return store.getters['groups/currentItemOrNew'];\n        });\n\n\n        const newGene = ref({gene: null, disease: null});\n\n        const loading = ref(false);\n        const errors = ref({});\n        const genes = ref([]);\n        const orderedGenes = computed(() => {\n            const sortedGenes = [...genes.value];\n            sortedGenes.sort((a,b) => {\n                if (a.gene_symbol == b.gene_symbol) {\n                    return 0;\n                }\n                return (a.gene_symbol > b.gene_symbol) ? 1 : -1;\n            });\n            return sortedGenes;\n        })\n\n        const clearNewGene = () => {\n            newGene.value = {gene: null, disease: null};\n            errors.value = {};\n        }\n\n        const edit = (gene) => {\n            gene.edit = true;\n        }\n\n        const clearRemoveCountdown = (gene) => {\n            if (gene.removeTimeout) {\n                clearTimeout(gene.removeTimeout);\n                clearInterval(gene.removeInterval);\n                gene.removeCountdown = 10;\n            }\n        }\n\n        const clearRemovalFlags = (gene) => {\n            delete(gene.toDelete);\n            delete(gene.removeInterval);\n            delete(gene.removeTimeout);\n        }\n\n        const cancelPendingRemove = (gene) => {\n            clearRemoveCountdown(gene);\n            clearRemovalFlags(gene);\n        }\n\n        const confirmRemove = (gene) => {\n            selectedGene.value = gene;\n            showConfirmRemove.value = true;\n        }\n\n        const remove = async (gene) => {\n            try {\n                await api.delete(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`)\n                await getGenes();\n                cancelRemove();\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n        }\n\n        const cancelRemove = () => {\n            selectedGene.value = {gene: {}, disease: {}};\n            showConfirmRemove.value = false;\n        }\n\n        const getGenes = async () => {\n            if (!group.value.uuid)  {\n                return;\n            }\n            loading.value = true;\n            try {\n                genes.value = await api.get(`/api/groups/${group.value.uuid}/expert-panel/genes?with[]=gene&with[]=disease`)\n                    .then(response => response.data);\n\n                // need to set genes on the expert_panel for requirements validation\n                group.value.expert_panel.genes = genes.value;\n            } catch (error) {\n                store.commit('pushError', error.response.data);\n            }\n            loading.value = false;\n        }\n\n        const save = async () => {\n            try {\n                if (newGene.value.gene !== null && newGene.value.disease !== null) {\n\n                    await api.post(`/api/groups/${group.value.uuid}/expert-panel/genes`, {\n                        genes: [{\n                            hgnc_id: newGene.value.gene.hgnc_id,\n                            mondo_id: newGene.value.disease.mondo_id\n                        }]\n                    });\n                    await getGenes();\n\n                    clearNewGene();\n                }\n\n                errors.value = {};\n                context.emit('saved')\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    errors.value = error.response.data.errors\n                }\n            }\n        };\n\n        const debounceSave = debounce(save, 500)\n\n        const updateGene = async (gene) => {\n            try {\n                gene.hgnc_id = gene.gene.hgnc_id;\n                gene.mondo_id = gene.disease.mondo_id;\n                await api.put(`/api/groups/${group.value.uuid}/expert-panel/genes/${gene.id}`, gene);\n                await getGenes();\n                delete(gene.edit);\n            } catch (error) {\n                if (is_validation_error(error)) {\n                    errors.value = error.response.data.errors\n                }\n            }\n        }\n        const updateCancel = gene => {\n            delete(gene.edit);\n        }\n\n        const cancel = () => {\n            clearNewGene();\n        }\n\n        const canEdit = computed(() => {\n            return hasAnyPermission(['ep-applications-manage', ['application-edit', group.value]])\n                && !props.readonly\n        })\n\n        onMounted(() => {\n            getGenes();\n        });\n\n        return {\n            group,\n            genes,\n            newGene,\n            orderedGenes,\n            errors,\n            loading,\n            updateGene,\n            updateCancel,\n            save,\n            debounceSave,\n            cancel,\n            edit,\n            remove,\n            cancelPendingRemove,\n            canEdit,\n            showConfirmRemove,\n            confirmRemove,\n            cancelRemove,\n            selectedGene,\n        }\n    }\n}\n</script>\n","import { render } from \"./VcepGeneList.vue?vue&type=template&id=9878aac0\"\nimport script from \"./VcepGeneList.vue?vue&type=script&lang=js\"\nexport * from \"./VcepGeneList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","class","href","_createElementBlock","_hoisted_1","_createVNode","_component_input_row","errors","$data","utilize_gt","_component_checkbox","$options","expert_panel","$event","disabled","$props","utilize_gci","curations_publicly_available","pub_policy_reviewed","_component_publication_policy_link","draft_manuscripts","recuration_process_review","_component_gcep_recuration_process_link","_component_training_materials_link","biocurator_training","gci_training_date","label","type","biocurator_mailing_list","name","props","Boolean","required","default","emits","data","gci_training","computed","group","get","this","$store","getters","set","value","commit","gciTrainingErrors","trainingErrors","dateErrors","gci_training_comp","watch","immediate","handler","to","methods","async","api","uuid","attributes","error","isValidationError","response","emitUpdate","$emit","checkCompleteness","gcep_attestation_date","Date","__exports__","render","_hoisted_10","isVcep","_component_vcep_protocol_link","is_gcep","_hoisted_4","vertical","id","is_vcep_or_scvcep","_hoisted_6","_hoisted_9","_hoisted_11","attestation","nhgri_attestation_date","checkboxLabel","is_vcep","is_validation_error","for","reanalysis_conflicting","_ctx","reanalysis_review_lp","reanalysis_review_lb","reanalysis_other","_Transition","_hoisted_8","otherCheckbox","checkedStandard","reanalysis_attestation_date","style","$setup","_createBlock","_component_edit_icon_button","onClick","_hoisted_3","genes","placeholder","_toDisplayString","components","editing","readonly","canEdit","hasAnyPermission","showForm","resetErrors","setup","context","store","useStore","loading","ref","genesAsText","formFactory","hideForm","emit","cancel","getGenes","syncGenesAsText","expertPanel","join","dispatch","map","g","gene_symbol","save","split","RegExp","filter","i","messages","forEach","m","pushError","geneMessages","Object","keys","key","geneIdx","parseInt","from","onMounted","_hoisted_2","mode","membership_description","_component_markdown_block","markdown","scope_description","_component_gcep_quick_guide_link","Group","scopeDescription","groupCopy","clone","GcepQuickGuideLink","colspan","_hoisted_12","_hoisted_5","length","_hoisted_7","_hoisted_13","_hoisted_14","_Fragment","_renderList","gene","edit","hgnc_id","_component_gene_search_select","mondo_id","_component_disease_search_select","disease","_hoisted_20","_hoisted_21","disease_name","_hoisted_15","_hoisted_16","toDelete","_component_dropdown_menu","_hoisted_17","_component_dropdown_item","_hoisted_22","_component_modal_dialog","title","_component_button_row","onSubmitted","onCanceled","GeneSearchSelect","DiseaseSearchSelect","selectedGeneSymbol","selectedGene","selectedDiseaseName","showConfirmRemove","newGene","orderedGenes","sortedGenes","sort","a","b","clearNewGene","clearRemoveCountdown","removeTimeout","clearTimeout","clearInterval","removeInterval","removeCountdown","clearRemovalFlags","cancelPendingRemove","confirmRemove","remove","cancelRemove","then","debounceSave","debounce","updateGene","updateCancel"],"sourceRoot":""}