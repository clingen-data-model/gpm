{"version":3,"file":"js/302.ea482f7a.js","mappings":"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","sources":["webpack://epam/./src/composables/router_aware_sort_and_filter.js","webpack://epam/./src/views/AnnualUpdatesList.vue","webpack://epam/./src/components/annual_updates/AnnualUpdateTable.vue","webpack://epam/./src/components/annual_updates/AnnualUpdateTable.vue?db2e","webpack://epam/./src/views/AnnualUpdatesList.vue?4653"],"sourcesContent":["import { useRouter, useRoute } from 'vue-router'\nimport {computed} from 'vue'\n\nexport default function (defaultSort = null) {\n    const router = useRouter()\n    const route = useRoute()\n    if (!defaultSort){\n        console.log('Warning: defaultSort is deprecated.  Please provide a sort object: {field: \"fieldname\", desc: boolean}')\n        defaultSort = (defaultSort) ? defaultSort : {field: 'name', desc: false}\n    }\n    \n    const sort = computed({\n        immediate: true,\n        get() {\n            if (Object.keys(route.query).includes('sort-field')) {\n                return {\n                    field: route.query['sort-field'],\n                    desc: Boolean(parseInt(route.query['sort-desc']))\n                }\n            }\n            return defaultSort;\n        },\n        set(sortObj) {\n            const newSortQuery = {'sort-field': sortObj.field, 'sort-desc': sortObj.desc ? 1 : 0}\n    \n            const newQuery = {\n                ...route.query, \n                ...newSortQuery\n            };\n    \n            router.replace({path: route.path, query: newQuery})\n        }\n    });\n    \n    const filter = computed({\n        set(value) {\n            let currentQuery = route.query;\n            let currentPath = route.path;\n    \n            let updatedQuery = {...currentQuery};\n    \n            if (!value) {\n                delete updatedQuery.filter;\n            } else {\n                updatedQuery = {...currentQuery, ...{'filter': value} };\n            }\n    \n            router.replace({path: currentPath, query: updatedQuery})\n        },\n        get() {\n            return route.query.filter\n        },\n        immediate: true\n    });\n\n    return {\n        sort,\n        filter\n    }\n}\n","<script>\nimport { api } from \"@/http\";\nimport { orderBy } from \"lodash\";\n\nimport AnnualUpdateTable from \"@/components/annual_updates/AnnualUpdateTable\";\n\nexport default {\n  name: \"AnnualUpdatesList\",\n  components: {\n    AnnualUpdateTable,\n  },\n  data() {\n    return {\n      selectedWindow: null,\n      windows: [],\n      items: [],\n      loading: false,\n    };\n  },\n  computed: {\n    sortedWindows() {\n      return orderBy(this.windows, \"for_year\", \"desc\");\n    },\n    latestWindow() {\n      return this.sortedWindows[0] || {};\n    },\n    gcepReviews() {\n      return this.items.filter((i) => i.expert_panel.expert_panel_type_id == 1);\n    },\n    vcepReviews() {\n      return this.items.filter((i) => i.expert_panel.expert_panel_type_id == 2);\n    },\n    selectedYear() {\n        return this.selectedWindow ? this.selectedWindow.for_year : this.latestWindow.for_year\n    },\n    selectedStartDate() {\n        return this.selectedWindow ? this.selectedWindow.start : this.latestWindow.start\n    },\n    selectedEndDate() {\n        return this.selectedWindow ? this.selectedWindow.end : this.latestWindow.end\n    }\n  },\n  watch: {\n    selectedWindow (to) {\n        if (to) {\n            this.getItems()\n        }\n    }\n  },\n  methods: {\n    async getWindows() {\n        this.windows = await api\n            .get(\"/api/annual-updates/windows\")\n            .then((response) => response.data);\n        this.selectedWindow = this.latestWindow;\n    },\n\n    async getItems() {\n        let url = `/api/annual-updates`;\n        if (this.selectedWindow) {\n            url += `?window_id=${this.selectedWindow.id}`\n        }\n        this.loading = true;\n        this.items = await api\n            .get(url)\n            .then((response) => response.data);\n        this.loading = false;\n    },\n  },\n  mounted() {\n    this.getWindows();\n    this.getItems();\n  },\n};\n</script>\n<template>\n  <div>\n    <header class=\"flex justify-between items-center border-b mb-4\">\n      <h1 class=\"border-0 mb-0\">\n        Annual Updates for {{ selectedYear }}\n      </h1>\n      {{formatDate(selectedStartDate)}} - {{formatDate(selectedEndDate)}}\n      <select\n        v-model=\"selectedWindow\"\n        class=\"font-normal text-md\"\n        v-if=\"windows.length > 1\"\n      >\n        <option\n          :value=\"window\"\n          v-for=\"window in sortedWindows\"\n          :key=\"window.id\"\n        >\n          {{ window.for_year }}\n        </option>\n      </select>\n    </header>\n    <tabs-container>\n      <tab-item label=\"VCEPS\">\n        <div v-if=\"loading\">Loading&hellip;</div>\n        <annual-update-table v-else :items=\"vcepReviews\" />\n      </tab-item>\n      <tab-item label=\"GCEPS\">\n        <div v-if=\"loading\">Loading&hellip;</div>\n        <annual-update-table v-else :items=\"gcepReviews\" />\n      </tab-item>\n    </tabs-container>\n  </div>\n</template>\n<style scoped>\n    .radio-group > label {\n    @apply border border-gray-400 px-2 py-1 mb-0;\n    }\n    .radio-group > label:first-child {\n    @apply rounded-l-lg border-r-0;\n    }\n    .radio-group > label:last-child {\n    @apply rounded-r-lg border-l-0;\n    }\n</style>\n","<template>\n    <div>\n        <div class=\"flex mb-2 items-end justify-between\">\n            <div class=\"flex space-x-4 items-end\">\n                <input \n                    v-model=\"filter\" \n                    placeholder=\"EP name, submitter name\"\n                    class=\"w-60\"\n                >\n                <select v-model=\"completedFilter\" class=\"flex radio-group\">\n                    <option :value=\"null\">Any</option>\n                    <option :value=\"2\">Only Pending</option>\n                    <option :value=\"1\">Only Completed</option>\n                </select>\n            </div>\n            <button class=\"btn btn-xs\" @click=\"exportData\">Export Data</button>\n        </div>\n\n        <data-table :data=\"filteredItems\" :fields=\"fields\" v-model:sort=\"sort\">\n            <template v-slot:cell-action=\"{item}\">\n                <router-link :to=\"{name: 'AnnualUpdateDetail', params: {id: item.id}}\">\n                    view\n                </router-link>\n            </template>\n        </data-table>\n\n    </div>\n</template>\n<script>\nimport {api} from '@/http'\nimport setupRouterSortAndFilter from '@/composables/router_aware_sort_and_filter'\n\nexport default {\n    name: 'AnnualUpdateTeable',\n    props: {\n        items: {\n            type: Array,\n            required: true\n        }\n    },\n    data() {\n        return {\n            fields: [\n                {\n                    name: 'id',\n                    sortable: true,\n                    label: 'ID'\n                },\n                {\n                    name: 'expert_panel.display_name',\n                    label: 'Expert Panel',\n                    sortable: true\n                },\n                {\n                    name: 'submitter.person.name',\n                    label: 'Submitter',\n                    sortable: true\n                },\n                {\n                    name: 'completed_at',\n                    label: 'Completed',\n                    sortable: true,\n                    resolveValue: (item) => {\n                        return item.completed_at ? this.formatDate(item.completed_at) : null;\n                    }\n                },\n                {\n                    name: 'action',\n                    label: '',\n                    sortable: false\n\n                }\n            ],\n            // completedFilter: null\n            \n        }\n    },\n    computed: {\n        completedFilter: {\n            get: function () {\n                return this.$route.query.completed || null;\n            },\n            set: function (value) {\n                let currentQuery = this.$route.query;\n                let currentPath = this.$route.path;\n        \n                let updatedQuery = {...currentQuery};\n        \n                if (!value) {\n                    delete updatedQuery.completed;\n                } else {\n                    updatedQuery = {...currentQuery, ...{'completed': value} };\n                }\n        \n                this.$router.replace({path: currentPath, query: updatedQuery})\n            }\n        },\n        filteredItems () {\n            let result = JSON.parse(JSON.stringify(this.items));\n            if (this.filter != null) {\n                const pattern = new RegExp(`.*${this.filter}.*`, 'i');\n                result = this.items.filter(i => {\n                    return i.expert_panel.display_name.match(pattern)\n                        || (i.submitter && i.submitter.person && i.submitter.person.name.match(pattern));\n                });\n            }\n\n            if (this.completedFilter != null) {\n                result = result.filter(i => {\n                    if (this.completedFilter == 1) {\n                        return i.completed_at !== null;\n                    }\n                    return i.completed_at == null;\n                });\n            }\n            return result\n        },\n    },\n    methods: {\n        exportData () {\n            const annual_update_ids = this.filteredItems.map(i => i.id);\n            api.post(`/api/annual-updates/export`, {annual_update_ids})\n                .then(response => {\n                    const a = document.createElement('a');\n                    a.style.display = \"none\";\n                    document.body.appendChild(a);\n\n                    a.href = window.URL.createObjectURL( new Blob([response.data, { type: 'text/csv' }]));\n\n                    a.setAttribute('download', 'annual_updates.csv');\n                    a.click();\n\n                    document.body.removeChild(a);\n                });\n        }\n    },\n    setup() {\n        const {sort, filter} = setupRouterSortAndFilter({field: 'expert_panel.display_name', desc: false});\n\n        return {\n            sort,\n            filter\n        }\n    }\n}\n</script>","import { render } from \"./AnnualUpdateTable.vue?vue&type=template&id=4d600c76\"\nimport script from \"./AnnualUpdateTable.vue?vue&type=script&lang=js\"\nexport * from \"./AnnualUpdateTable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./AnnualUpdatesList.vue?vue&type=template&id=40a5b7f2&scoped=true\"\nimport script from \"./AnnualUpdatesList.vue?vue&type=script&lang=js\"\nexport * from \"./AnnualUpdatesList.vue?vue&type=script&lang=js\"\n\nimport \"./AnnualUpdatesList.vue?vue&type=style&index=0&id=40a5b7f2&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-40a5b7f2\"]])\n\nexport default __exports__"],"names":["defaultSort","router","useRouter","route","useRoute","console","log","field","desc","sort","computed","immediate","get","Object","keys","query","includes","Boolean","parseInt","set","sortObj","newSortQuery","newQuery","replace","path","filter","value","currentQuery","currentPath","updatedQuery","class","_createElementBlock","_createElementVNode","_toDisplayString","$options","_ctx","$data","length","$event","_Fragment","_renderList","window","key","id","for_year","_hoisted_3","_createVNode","_component_tabs_container","_component_tab_item","label","_hoisted_4","_createBlock","_component_annual_update_table","items","_hoisted_5","$setup","placeholder","onClick","_component_data_table","data","fields","_withCtx","item","_component_router_link","to","name","params","props","type","Array","required","sortable","resolveValue","completed_at","this","formatDate","completedFilter","$route","completed","$router","filteredItems","result","JSON","parse","stringify","pattern","RegExp","i","expert_panel","display_name","match","submitter","person","methods","exportData","annual_update_ids","map","api","then","response","a","document","createElement","style","display","body","appendChild","href","URL","createObjectURL","Blob","setAttribute","click","removeChild","setup","setupRouterSortAndFilter","__exports__","components","AnnualUpdateTable","selectedWindow","windows","loading","sortedWindows","orderBy","latestWindow","gcepReviews","expert_panel_type_id","vcepReviews","selectedYear","selectedStartDate","start","selectedEndDate","end","watch","getItems","async","url","mounted","getWindows","render"],"sourceRoot":""}