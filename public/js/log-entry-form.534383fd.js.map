{"version":3,"file":"js/log-entry-form.534383fd.js","mappings":"yQAGA,MAAMA,GAAWC,EAAAA,EAAAA,IAAI,IAERC,GAAaC,EAAAA,EAAAA,KAAS,IACxBH,EAASI,QAGPC,EAAeC,UACxBN,EAASI,YAAcG,EAAAA,EAAAA,IAAQC,GAC1BC,MAAKC,GAAYA,EAASC,KAAKA,MADpC,EAISC,EAAYN,MAAOE,EAAQK,UACvBN,EAAAA,EAAAA,KAASC,EAAQK,GACzBJ,MAAKC,IACFV,EAASI,MAAMU,KAAKJ,EAASC,MACtBD,EAASC,QAIfI,EAAcT,MAAOE,EAAQK,UACzBN,EAAAA,EAAAA,IAAQC,EAAQK,GACxBJ,MAAKC,IACF,MAAMM,EAAWhB,EAASI,MAAMa,WAAUC,GAASA,EAAMC,IAAMT,EAASC,KAAKQ,KAE7E,OADAnB,EAASI,MAAMY,GAAYN,EAASC,KAC7BD,EAASC,IAAhB,IAICS,EAAcd,MAAOE,EAAQa,UACzBd,EAAAA,EAAAA,UAAY,GAAEC,KAAUa,KAChCZ,MAAKC,IACF,MAAMM,EAAWhB,EAASI,MAAMa,WAAUC,GAASA,EAAMC,IAAME,IAG/D,OAFArB,EAASI,MAAMkB,OAAON,EAAU,GAEzBN,CAAP,G,wQCpCRa,EAAAA,EAAAA,IAUiBC,EAAA,CAVDC,MAAM,iBAAiBxB,IAAI,kBAA3C,C,kBACI,IAAwH,EAAxHyB,EAAAA,EAAAA,IAAwHC,EAAA,CAA7GC,MAAM,W,WAAoBC,EAAAA,SAASC,S,qCAATD,EAAAA,SAASC,SAAQC,GAAGC,OAAQH,EAAAA,OAAOC,SAAUG,KAAK,OAAOhC,IAAI,WAAlG,gCAC0E,GAAhCiC,EAAAA,YAAYC,uBAAoB,WAA1EZ,EAAAA,EAAAA,IAAwGa,EAAA,C,iBAAnFP,EAAAA,SAASQ,K,qCAATR,EAAAA,SAASQ,KAAIN,GAAgDC,OAAQH,EAAAA,OAAOQ,MAAjG,kDACAX,EAAAA,EAAAA,IAEYC,EAAA,CAFDC,MAAM,QAASI,OAAQH,EAAAA,OAAOX,OAAzC,C,kBACI,IAA8D,EAA9DQ,EAAAA,EAAAA,IAA8DY,EAAA,C,WAAnCT,EAAAA,SAASX,M,qCAATW,EAAAA,SAASX,MAAKa,IAAzC,0B,KADJ,eAGAL,EAAAA,EAAAA,IAGaa,EAAA,M,kBAFT,IAAmD,EAAnDC,EAAAA,EAAAA,GAAmD,UAA3Cf,MAAM,MAAOgB,QAAK,oBAAEP,EAAAA,QAAAA,EAAAA,UAAAA,KAAQ,WACpCM,EAAAA,EAAAA,GAAoD,UAA5Cf,MAAM,WAAYgB,QAAK,oBAAEP,EAAAA,MAAAA,EAAAA,QAAAA,KAAM,W,cAR/C,I,sDAmBJ,GACIQ,KAAM,eACNC,WAAY,CACRC,UADQ,aAERC,eAAcA,EAAAA,YAElBC,MAAO,CACH3B,GAAI,CACA4B,UAAU,EACVC,QAAS,OAGjBrC,OACI,MAAO,CACHsC,SAAU,CACNnB,SAAU,IAAIoB,KACdb,KAAM,KACNnB,MAAO,IAEXc,OAAQ,CAAC,EAEhB,EACD7B,SAAU,KACHgD,EAAAA,EAAAA,IAAW,CACVC,MAAO,4BAEXC,cACI,OAAOC,KAAKF,MAAMG,YACtB,GAEJC,MAAO,CACHrC,GAAI,CACAsC,WAAW,EACXC,QAAS,WACL,MAAMxC,EAAQoC,KAAKK,YACfzC,GACAoC,KAAKM,UAAU1C,EAEvB,GAEJmC,YAAa,CACTI,WAAW,EACXC,QAAS,WACL,MAAMxC,EAAQoC,KAAKK,YACfzC,GACAoC,KAAKM,UAAU1C,EAEvB,IAGR2C,QAAS,CACLF,YACI,OAAgB,OAAZL,KAAKnC,GACE,KAEPmC,KAAKpD,WACEoD,KAAKpD,WAAW4D,MAAKC,GAAKA,EAAE5C,IAAMmC,KAAKnC,UADlD,CAGH,EACD6C,eACIV,KAAKL,SAAW,CACZnB,UAAUmC,EAAAA,EAAAA,IAAW,IAAIf,MACzBb,KAAM,KACNnB,MAAO,GAEd,EACD0C,UAAW1C,GACFA,IAGLoC,KAAKL,SAAW,CACZ9B,GAAID,EAAMC,GACVW,UAAUmC,EAAAA,EAAAA,IAAW,IAAIf,KAAKA,KAAKgB,MAAOhD,EAAMiD,cAChD9B,KAAM+B,SAASlD,EAAMmB,MACrBnB,MAAOA,EAAMmD,aAEpB,EACDC,SACIhB,KAAKU,eACLV,KAAKiB,MAAM,WACd,EACDjE,aACI,IACQgD,KAAKL,SAAS9B,IACdJ,EAAAA,EAAAA,IAAa,eAAcuC,KAAKF,MAAMoB,sBAAsBlB,KAAKL,SAAS9B,KAAMmC,KAAKL,WAErFrC,EAAAA,EAAAA,IAAW,eAAc0C,KAAKF,MAAMoB,qBAAsBlB,KAAKL,UAEnEK,KAAKU,eACLV,KAAKiB,MAAM,QAMf,CALE,MAAOE,GACL,GAAIA,EAAM/D,UAAqC,KAAzB+D,EAAM/D,SAASgE,QAAiBD,EAAM/D,SAASC,KAAKqB,OAEtE,YADAsB,KAAKtB,OAASyC,EAAM/D,SAASC,KAAKqB,OAG1C,CACH,GAEL2C,UACIrB,KAAKsB,IAAIC,iBAAiB,SAAS,GAAGC,OACzC,EACDC,QACI,MAAO,CACH7E,WAAUA,EAAAA,GAElB,G,UCxHJ,MAAM8E,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://epam/./src/adapters/log_entry_repository.js","webpack://epam/./src/components/log_entries/LogEntryForm.vue","webpack://epam/./src/components/log_entries/LogEntryForm.vue?1fb0"],"sourcesContent":["import {ref, computed} from 'vue';\nimport api from '@/http/api'\n\nconst _entries = ref([]);\n\nexport const logEntries = computed(() => {\n    return _entries.value;\n});\n\nexport const fetchEntries = async (apiUrl) => {\n    _entries.value = await api.get(apiUrl)\n        .then(response => response.data.data);\n}\n\nexport const saveEntry = async (apiUrl, entryData) => {\n    return await api.post(apiUrl, entryData)\n        .then(response => {\n            _entries.value.push(response.data);\n            return response.data\n        });\n}\n\nexport const updateEntry = async (apiUrl, entryData) => {\n    return await api.put(apiUrl, entryData)\n        .then(response => {\n            const entryIdx = _entries.value.findIndex(entry => entry.id == response.data.id);\n            _entries.value[entryIdx] = response.data;\n            return response.data\n        });\n}\n\nexport const deleteEntry = async (apiUrl, entryId) => {\n    return await api.delete(`${apiUrl}/${entryId}`)\n        .then(response => {\n            const entryIdx = _entries.value.findIndex(entry => entry.id == entryId);\n            _entries.value.splice(entryIdx, 1);\n\n            return response;\n        });\n}\n","<template>\n    <form-container class=\"log-entry-form\" ref=\"form-container\">\n        <input-row label=\"Log Date\" v-model=\"newEntry.log_date\" :errors=\"errors.log_date\" type=\"date\" ref=\"logdate\"></input-row>\n        <step-input v-model=\"newEntry.step\" v-if=\"application.expert_panel_type_id == 2\" :errors=\"errors.step\"/>\n        <input-row label=\"Entry\" :errors=\"errors.entry\">\n            <rich-text-editor v-model=\"newEntry.entry\"></rich-text-editor>\n        </input-row>\n        <button-row>\n            <button class=\"btn\" @click=\"cancel\">Cancel</button>\n            <button class=\"btn blue\" @click=\"save\">Save</button>\n        </button-row>\n    </form-container>\n</template>\n<script>\nimport {mapGetters} from 'vuex'\nimport { formatDate } from '@/date_utils'\nimport StepInput from '@/components/forms/StepInput.vue'\nimport RichTextEditor from '@/components/forms/RichTextEditor.vue'\nimport {logEntries, saveEntry, updateEntry} from '@/adapters/log_entry_repository'\n\nexport default {\n    name: 'LogEntryForm',\n    components: {\n        StepInput,\n        RichTextEditor\n    },\n    props: {\n        id: {\n            required: false,\n            default: null\n        }\n    },\n    data() {\n        return {\n            newEntry: {\n                log_date: new Date(),\n                step: null,\n                entry: ''\n            },\n            errors: {},\n        }\n    },\n    computed: {\n        ...mapGetters({\n            group: 'groups/currentItemOrNew'\n        }),\n        application () {\n            return this.group.expert_panel;\n        }\n    },\n    watch: {\n        id: {\n            immediate: true,\n            handler: function() {\n                const entry = this.findEntry();\n                if (entry) {\n                    this.syncEntry(entry)\n                }\n            }\n        },\n        application: {\n            immediate: true,\n            handler: function () {\n                const entry = this.findEntry();\n                if (entry) {\n                    this.syncEntry(entry);\n                }\n            }\n        }\n    },\n    methods: {\n        findEntry () {\n            if (this.id === null) {\n                return null;\n            }\n            if (this.logEntries) {\n                return this.logEntries.find(i => i.id == this.id);\n            }\n        },\n        initNewEntry () {\n            this.newEntry = {\n                log_date: formatDate(new Date),\n                step: null,\n                entry: ''\n            }\n        },\n        syncEntry (entry) {\n            if (!entry) {\n                return;\n            }\n            this.newEntry = {\n                id: entry.id,\n                log_date: formatDate(new Date(Date.parse((entry.created_at)))),\n                step: parseInt(entry.step),\n                entry: entry.description\n            }\n        },\n        cancel() {\n            this.initNewEntry();\n            this.$emit('canceled');\n        },\n        async save() {\n            try {\n                if (this.newEntry.id) {\n                    updateEntry(`/api/groups/${this.group.uuid}/activity-logs/${this.newEntry.id}`, this.newEntry);\n                } else {\n                    saveEntry(`/api/groups/${this.group.uuid}/activity-logs`, this.newEntry)\n                }\n                this.initNewEntry();\n                this.$emit('saved');\n            } catch (error) {\n                if (error.response && error.response.status == 422 && error.response.data.errors) {\n                    this.errors = error.response.data.errors\n                    return;\n                }\n            }\n        },\n    },\n    mounted() {\n        this.$el.querySelectorAll('input')[0].focus();\n    },\n    setup () {\n        return {\n            logEntries\n        }\n    }\n}\n</script>","import { render } from \"./LogEntryForm.vue?vue&type=template&id=5ac45520\"\nimport script from \"./LogEntryForm.vue?vue&type=script&lang=js\"\nexport * from \"./LogEntryForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bpow/src/clingen/gpm/resources/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_entries","ref","logEntries","computed","value","fetchEntries","async","api","apiUrl","then","response","data","saveEntry","entryData","push","updateEntry","entryIdx","findIndex","entry","id","deleteEntry","entryId","splice","_createBlock","_component_form_container","class","_createVNode","_component_input_row","label","$data","log_date","$event","errors","type","$options","expert_panel_type_id","_component_step_input","step","_component_rich_text_editor","_component_button_row","_createElementVNode","onClick","name","components","StepInput","RichTextEditor","props","required","default","newEntry","Date","mapGetters","group","application","this","expert_panel","watch","immediate","handler","findEntry","syncEntry","methods","find","i","initNewEntry","formatDate","parse","created_at","parseInt","description","cancel","$emit","uuid","error","status","mounted","$el","querySelectorAll","focus","setup","__exports__","render"],"sourceRoot":""}